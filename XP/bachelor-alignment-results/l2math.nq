<http://example.org/course/UE_XLG4IU010> <http://example.org/has_schema_type> _:N9e1511dc3dd94363b258e14641b2baa1 <http://groq.org/43da24dc887879f27a55af5724b9e269196cb5aac7fa76f437364dc31baaf423> .
_:N9e1511dc3dd94363b258e14641b2baa1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/43da24dc887879f27a55af5724b9e269196cb5aac7fa76f437364dc31baaf423> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/43da24dc887879f27a55af5724b9e269196cb5aac7fa76f437364dc31baaf423> .
_:N9e1511dc3dd94363b258e14641b2baa1 <http://schema.org/answer> "0" <http://groq.org/43da24dc887879f27a55af5724b9e269196cb5aac7fa76f437364dc31baaf423> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 2 Objectif: (résultats d'apprentissage)\ndonnées (itératifs et récursifs) Course content: Structures de données non-linéaires associatives (table associative, ensemble, classe-union) Course name: http://example.org/course/UE_XLG4IU010</page1>\n        <page2>Pages: 187-188 HOURS CS Core = 29 KA Core = 11 MSF-Discrete: Discrete\nMathematics CS Core: 1\\. Sets, relations, functions, cardinality 2\\. Recursive\nmathematical definitions 3\\. Proof techniques (induction, proof by\ncontradiction) 4\\. Permutations, combinations, counting, pigeonhole principle\n5\\. Modular arithmetic 6\\. Logic: truth tables, connectives (operators),\ninference rules, formulas, normal forms, simple predicate logic 7\\. Graphs:\nbasic definitions 8\\. Order notation Illustrative Learning Outcomes: CS Core:\n1\\. Sets, Relations, and Functions, Cardinality a. Explain with examples the\nbasic terminology of functions, relations, and sets. b. Perform the operations\nassociated with sets, functions, and relations. c. Relate practical examples\nto the appropriate set, function, or relation model, and interpret the\nassociated operations and terminology in context. d. Calculate the size of a\nfinite set, including making use of the sum and product rules and inclusion-\nexclusion principle. e. Explain the difference between finite, countable, and\nuncountable sets. 2\\. Recursive mathematical definitions a. Apply recursive\ndefinitions of sequences or structures (e.g., Fibonacci numbers, linked lists,\nparse trees, fractals). b. Formulate inductive proofs of statements about\nrecursive definitions. c. Solve a variety of basic recurrence relations. d.\nAnalyze a problem to determine underlying recurrence relations. e. Given a\nrecursive/iterative code snippet, describe its underlying recurrence relation,\nhypothesize a closed form for the recurrence relation, and prove the\nhypothesis correct (usually, using induction). 3\\. Proof Techniques a.\nIdentify the proof technique used in a given proof. b. Outline the basic\nstructure of each proof technique (direct proof, proof by contradiction, and\ninduction) described in this unit. c. Apply each of the proof techniques\n(direct proof, proof by contradiction, and induction) correctly in the\nconstruction of a sound argument. d. Determine which type of proof is best for\na given problem. e. Explain the parallels between ideas of mathematical and/or\nstructural induction to recursion and recursively defined structures. f.\nExplain the relationship between weak and strong induction and give examples\nof the appropriate use of each. 4\\. Permutations, combinations, and counting\na. Apply counting arguments, including sum and product rules, inclusion-\nexclusion principle, and arithmetic/geometric progressions. b. Apply the\npigeonhole principle in the context of a formal proof. c. Compute permutations\nand combinations of a set, and interpret the meaning in the context of the\nspecific application. d. Map real-world applications to appropriate counting\nformalisms, such as determining the number of ways to arrange people around a\ntable, subject to constraints on the seating arrangement, or the number of\nways to determine certain hands in cards (e.g., a full house). 5\\. Modular\narithmetic a. Perform computations involving modular arithmetic. b. Explain\nthe notion of the greatest common divisor and apply Euclid's algorithm to\ncompute it. 6\\. Logic a. Convert logical statements from informal language to\npropositional and predicate logic expressions. b. Apply formal methods of\nsymbolic propositional and predicate logic, such as calculating validity of\nformulae, computing normal forms, or negating a logical statement. c. Use the\nrules of inference to construct proofs in propositional and predicate logic.\nd. Describe how symbolic logic can be used to model real-life situations or\napplications, including those arising in computing contexts such as software\nanalysis (e.g., program correctness), database queries, and algorithms. e.\nApply formal logic proofs and/or informal, but rigorous, logical reasoning to\nreal problems, such as predicting the behavior of software or solving problems\nsuch as puzzles. f. Describe the strengths and limitations of propositional\nand predicate logic. g. Explain what it means for a proof in propositional (or\npredicate) logic to be valid. 7\\. Graphs a. Illustrate by example the basic\nterminology of graph theory, and some of the properties and special cases of\ntypes of graphs, including trees. b. Demonstrate different traversal methods\nfor trees and graphs, including pre-, post-, and in-order traversal of trees,\nalong with breadth-first and depth-first search for graphs. c. Model a variety\nof real-world problems in computer science using appropriate forms of graphs\nand trees, such as representing a network topology, the organization of a\nhierarchical file system, or a social network. d. Show how concepts from\ngraphs and trees appear in data structures, algorithms, proof techniques\n(structural induction), and counting. KA Core: The recommended topics are the\nsame between CS core and KA-core, but with far more hours, the KA-core can\ncover these topics in depth and might include more computing-related\napplications.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/43da24dc887879f27a55af5724b9e269196cb5aac7fa76f437364dc31baaf423> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU010" <http://groq.org/43da24dc887879f27a55af5724b9e269196cb5aac7fa76f437364dc31baaf423> .
_:N9e1511dc3dd94363b258e14641b2baa1 <http://schema.org/explain> "The lecture focuses on data structures, while the KU covers a broader range of discrete mathematics topics." <http://groq.org/43da24dc887879f27a55af5724b9e269196cb5aac7fa76f437364dc31baaf423> .
_:N9060e05ba8e746cda12c947e9ddc6fb1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/08cf5ba37650ff18c67fb6bba0dff009c5dc59aa12a36928a07fafeda8f6e46b> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD GIT-3D Modeling: Core Concepts CS\nCore: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic 3\nKA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of GIT-3D Modeling.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/08cf5ba37650ff18c67fb6bba0dff009c5dc59aa12a36928a07fafeda8f6e46b> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU010" <http://groq.org/08cf5ba37650ff18c67fb6bba0dff009c5dc59aa12a36928a07fafeda8f6e46b> .
_:N9060e05ba8e746cda12c947e9ddc6fb1 <http://schema.org/answer> "1" <http://groq.org/08cf5ba37650ff18c67fb6bba0dff009c5dc59aa12a36928a07fafeda8f6e46b> .
_:N9060e05ba8e746cda12c947e9ddc6fb1 <http://schema.org/explain> "The lecture covers the core concepts of GIT-3D Modeling, which aligns with the key concepts and principles mentioned in the KU." <http://groq.org/08cf5ba37650ff18c67fb6bba0dff009c5dc59aa12a36928a07fafeda8f6e46b> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/has_schema_type> _:N9060e05ba8e746cda12c947e9ddc6fb1 <http://groq.org/08cf5ba37650ff18c67fb6bba0dff009c5dc59aa12a36928a07fafeda8f6e46b> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/08cf5ba37650ff18c67fb6bba0dff009c5dc59aa12a36928a07fafeda8f6e46b> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Analyse et Algebre lineaire 2 Objectif: (résultats d'apprentissage) • Course content: • Course name: http://example.org/course/UE_XLG3MU030</page1>\n        <page2>Pages: 150-151 HOURS CS Core = 3 KA Core = 2 GIT-Fundamentals: Fundamental\nConcepts CS Core: 1\\. Overview of graphics and visualization. 2\\. Basic\ngraphics pipeline architecture. 3\\. 2D and 3D transformations. 4\\.\nRasterization and rendering techniques. 5\\. Fundamental shading models. KA\nCore: 6\\. Advanced rendering techniques. 7\\. Applications of visualization in\ndifferent fields. 8\\. Interaction methods for graphical environments.\nIllustrative Learning Outcomes: 1\\. Explain the graphics rendering pipeline.\n2\\. Differentiate between rasterization and ray tracing. 3\\. Apply\ntransformations to 2D and 3D models.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/cf3e577717ee7039e03dc1e9013d2fae275b8ea4ba28fbcf7d318e2c2cfb82bd> .
_:N77d54f0784bb4c30bc109c000e967a67 <http://schema.org/explain> "The lecture covers 7 out of 8 topics mentioned in the KU, including graphics pipeline architecture, transformations, and rendering techniques." <http://groq.org/cf3e577717ee7039e03dc1e9013d2fae275b8ea4ba28fbcf7d318e2c2cfb82bd> .
_:N77d54f0784bb4c30bc109c000e967a67 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/cf3e577717ee7039e03dc1e9013d2fae275b8ea4ba28fbcf7d318e2c2cfb82bd> .
_:N77d54f0784bb4c30bc109c000e967a67 <http://schema.org/answer> "1" <http://groq.org/cf3e577717ee7039e03dc1e9013d2fae275b8ea4ba28fbcf7d318e2c2cfb82bd> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3MU030" <http://groq.org/cf3e577717ee7039e03dc1e9013d2fae275b8ea4ba28fbcf7d318e2c2cfb82bd> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/cf3e577717ee7039e03dc1e9013d2fae275b8ea4ba28fbcf7d318e2c2cfb82bd> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/has_schema_type> _:N77d54f0784bb4c30bc109c000e967a67 <http://groq.org/cf3e577717ee7039e03dc1e9013d2fae275b8ea4ba28fbcf7d318e2c2cfb82bd> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU020" <http://groq.org/0f217b520d5288af2dcc4dfda83b231de70c546489d8a2d06146a12f2864a03b> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Unité Enseignement de Découverte Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU020</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD GIT-3D Modeling: Core Concepts CS\nCore: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic 3\nKA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of GIT-3D Modeling.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/0f217b520d5288af2dcc4dfda83b231de70c546489d8a2d06146a12f2864a03b> .
_:Nf30324a3aa8c48d0ba8f9a9ec941eec9 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/0f217b520d5288af2dcc4dfda83b231de70c546489d8a2d06146a12f2864a03b> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/0f217b520d5288af2dcc4dfda83b231de70c546489d8a2d06146a12f2864a03b> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/has_schema_type> _:Nf30324a3aa8c48d0ba8f9a9ec941eec9 <http://groq.org/0f217b520d5288af2dcc4dfda83b231de70c546489d8a2d06146a12f2864a03b> .
_:Nf30324a3aa8c48d0ba8f9a9ec941eec9 <http://schema.org/explain> "The lecture focuses on teaching methods, while the KU covers GIT-3D Modeling concepts." <http://groq.org/0f217b520d5288af2dcc4dfda83b231de70c546489d8a2d06146a12f2864a03b> .
_:Nf30324a3aa8c48d0ba8f9a9ec941eec9 <http://schema.org/answer> "0" <http://groq.org/0f217b520d5288af2dcc4dfda83b231de70c546489d8a2d06146a12f2864a03b> .
_:N9f0e25ddac6c4409a3b993f51f913681 <http://schema.org/explain> "Covers logic, proof systems, normal forms, unification, resolution, and inference rules aligning with KU's logic objectives." <http://groq.org/e47a8861bccd6ded0b1014780a9e471d19b35c4518152bfb18bbe944f2e796ba> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU020" <http://groq.org/e47a8861bccd6ded0b1014780a9e471d19b35c4518152bfb18bbe944f2e796ba> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/e47a8861bccd6ded0b1014780a9e471d19b35c4518152bfb18bbe944f2e796ba> .
_:N9f0e25ddac6c4409a3b993f51f913681 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/e47a8861bccd6ded0b1014780a9e471d19b35c4518152bfb18bbe944f2e796ba> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Logique pour l'informatique Objectif: (résultats d'apprentissage)\nconsistance et complétude d'un système de preuves.\n4. Représenter une preuve de la déduction naturelle sous forme d'arbre d'inférence.\n5. Utiliser les algorithmes d'unification et de résolution pour le raisonnement automatique sur les\nformules logiques.\n1) Raisonnement algébrique booléen\n• Dualités des connecteurs logiques\n• Formes normales conjonctive et disjonctive\n2) Systèmes de preuves\n• Système d'inférence associé à une définition inductive\n• Preuve d'appartenance à un ensemble inductif par un arbre de preuves\n• Règles d'inférences de la déduction naturelle pour la logique propositionnelle\n• Distinguer logique classique et logique intuitionniste\n3) Donner du sens aux langages logique Course content: • Interprétation, modèle, satisfiabilité, validité\n• Correspondance avec le système de preuve: correction et complétude\n4) Calcul des prédicats\n• Manipulation des quantificateurs\n• Skolémisation, forme clausale\n• Théorie logique\n5) Raisonner automatiquement sur les formules logique\n• Algorithme d'unification\n• Algorithme de résolution Course name: http://example.org/course/UE_XLG3IU020</page1>\n        <page2>Pages: 187-188 HOURS CS Core = 29 KA Core = 11 MSF-Discrete: Discrete\nMathematics CS Core: 1\\. Sets, relations, functions, cardinality 2\\. Recursive\nmathematical definitions 3\\. Proof techniques (induction, proof by\ncontradiction) 4\\. Permutations, combinations, counting, pigeonhole principle\n5\\. Modular arithmetic 6\\. Logic: truth tables, connectives (operators),\ninference rules, formulas, normal forms, simple predicate logic 7\\. Graphs:\nbasic definitions 8\\. Order notation Illustrative Learning Outcomes: CS Core:\n1\\. Sets, Relations, and Functions, Cardinality a. Explain with examples the\nbasic terminology of functions, relations, and sets. b. Perform the operations\nassociated with sets, functions, and relations. c. Relate practical examples\nto the appropriate set, function, or relation model, and interpret the\nassociated operations and terminology in context. d. Calculate the size of a\nfinite set, including making use of the sum and product rules and inclusion-\nexclusion principle. e. Explain the difference between finite, countable, and\nuncountable sets. 2\\. Recursive mathematical definitions a. Apply recursive\ndefinitions of sequences or structures (e.g., Fibonacci numbers, linked lists,\nparse trees, fractals). b. Formulate inductive proofs of statements about\nrecursive definitions. c. Solve a variety of basic recurrence relations. d.\nAnalyze a problem to determine underlying recurrence relations. e. Given a\nrecursive/iterative code snippet, describe its underlying recurrence relation,\nhypothesize a closed form for the recurrence relation, and prove the\nhypothesis correct (usually, using induction). 3\\. Proof Techniques a.\nIdentify the proof technique used in a given proof. b. Outline the basic\nstructure of each proof technique (direct proof, proof by contradiction, and\ninduction) described in this unit. c. Apply each of the proof techniques\n(direct proof, proof by contradiction, and induction) correctly in the\nconstruction of a sound argument. d. Determine which type of proof is best for\na given problem. e. Explain the parallels between ideas of mathematical and/or\nstructural induction to recursion and recursively defined structures. f.\nExplain the relationship between weak and strong induction and give examples\nof the appropriate use of each. 4\\. Permutations, combinations, and counting\na. Apply counting arguments, including sum and product rules, inclusion-\nexclusion principle, and arithmetic/geometric progressions. b. Apply the\npigeonhole principle in the context of a formal proof. c. Compute permutations\nand combinations of a set, and interpret the meaning in the context of the\nspecific application. d. Map real-world applications to appropriate counting\nformalisms, such as determining the number of ways to arrange people around a\ntable, subject to constraints on the seating arrangement, or the number of\nways to determine certain hands in cards (e.g., a full house). 5\\. Modular\narithmetic a. Perform computations involving modular arithmetic. b. Explain\nthe notion of the greatest common divisor and apply Euclid's algorithm to\ncompute it. 6\\. Logic a. Convert logical statements from informal language to\npropositional and predicate logic expressions. b. Apply formal methods of\nsymbolic propositional and predicate logic, such as calculating validity of\nformulae, computing normal forms, or negating a logical statement. c. Use the\nrules of inference to construct proofs in propositional and predicate logic.\nd. Describe how symbolic logic can be used to model real-life situations or\napplications, including those arising in computing contexts such as software\nanalysis (e.g., program correctness), database queries, and algorithms. e.\nApply formal logic proofs and/or informal, but rigorous, logical reasoning to\nreal problems, such as predicting the behavior of software or solving problems\nsuch as puzzles. f. Describe the strengths and limitations of propositional\nand predicate logic. g. Explain what it means for a proof in propositional (or\npredicate) logic to be valid. 7\\. Graphs a. Illustrate by example the basic\nterminology of graph theory, and some of the properties and special cases of\ntypes of graphs, including trees. b. Demonstrate different traversal methods\nfor trees and graphs, including pre-, post-, and in-order traversal of trees,\nalong with breadth-first and depth-first search for graphs. c. Model a variety\nof real-world problems in computer science using appropriate forms of graphs\nand trees, such as representing a network topology, the organization of a\nhierarchical file system, or a social network. d. Show how concepts from\ngraphs and trees appear in data structures, algorithms, proof techniques\n(structural induction), and counting. KA Core: The recommended topics are the\nsame between CS core and KA-core, but with far more hours, the KA-core can\ncover these topics in depth and might include more computing-related\napplications.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/e47a8861bccd6ded0b1014780a9e471d19b35c4518152bfb18bbe944f2e796ba> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/has_schema_type> _:N9f0e25ddac6c4409a3b993f51f913681 <http://groq.org/e47a8861bccd6ded0b1014780a9e471d19b35c4518152bfb18bbe944f2e796ba> .
_:N9f0e25ddac6c4409a3b993f51f913681 <http://schema.org/answer> "1" <http://groq.org/e47a8861bccd6ded0b1014780a9e471d19b35c4518152bfb18bbe944f2e796ba> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S4 Objectif: (résultats d'apprentissage)\nfaire et savoir-être) et d'un plan d'actions sur les prochaines années : à l'écrit et à l'oral\n- d'identitier et d'animer son réseau (professionnel et élargi)\n- de créer et de faire vivre ses profils numériques professionnels\n- de mener une enquête métier auprès d'un professionnel et de la restituer Course content: - présentation orale de la restitution de l'enquête et des recherches sur le métier\n- équivalent de 8 TD + présentation orale des enquêtes:\n- identication de ses valeurs\n- indentification de ses compétences\n- consrtruction de son projet professionnel et personnel\n- présentation de son projet Course name: http://example.org/course/UE_XLG4TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/10b75381b3e947cf81cc304426f8c9439734c937eae3bea7ad8bfc9f01bbdfbc> .
_:N63dd745911c943728265b6638164fb1a <http://schema.org/answer> "0" <http://groq.org/10b75381b3e947cf81cc304426f8c9439734c937eae3bea7ad8bfc9f01bbdfbc> .
_:N63dd745911c943728265b6638164fb1a <http://schema.org/explain> "The lecture focuses on professional methodology and career development, while the KU covers technical software engineering topics." <http://groq.org/10b75381b3e947cf81cc304426f8c9439734c937eae3bea7ad8bfc9f01bbdfbc> .
_:N63dd745911c943728265b6638164fb1a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/10b75381b3e947cf81cc304426f8c9439734c937eae3bea7ad8bfc9f01bbdfbc> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/10b75381b3e947cf81cc304426f8c9439734c937eae3bea7ad8bfc9f01bbdfbc> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU010" <http://groq.org/10b75381b3e947cf81cc304426f8c9439734c937eae3bea7ad8bfc9f01bbdfbc> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/has_schema_type> _:N63dd745911c943728265b6638164fb1a <http://groq.org/10b75381b3e947cf81cc304426f8c9439734c937eae3bea7ad8bfc9f01bbdfbc> .
_:N58cb54ce4bc24761914918a0c91b12a2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/4c72c5efcf5e34d9bce8f2a53bdd53bca6fe3078596bb4c5105baef936ef4ef1> .
_:N58cb54ce4bc24761914918a0c91b12a2 <http://schema.org/explain> "Lecture covers core data structures (arrays, trees, hash tables) and algorithms (search, sort, graph basics) matching KU's CS Core requirements." <http://groq.org/4c72c5efcf5e34d9bce8f2a53bdd53bca6fe3078596bb4c5105baef936ef4ef1> .
_:N58cb54ce4bc24761914918a0c91b12a2 <http://schema.org/answer> "1" <http://groq.org/4c72c5efcf5e34d9bce8f2a53bdd53bca6fe3078596bb4c5105baef936ef4ef1> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 2 Objectif: (résultats d'apprentissage)\ndonnées (itératifs et récursifs) Course content: Structures de données non-linéaires associatives (table associative, ensemble, classe-union) Course name: http://example.org/course/UE_XLG4IU010</page1>\n        <page2>Pages:88-90 HOURS CS Core = 11 KA Core = 6 AL-Foundational: Foundational Data\nStructures and Algorithms CS Core: (See also: SDF-Data-Structures, SDF-\nAlgorithms) 1\\. Abstract Data Type (ADT) and operations on an ADT (See also:\nFPL-Types) a. Dictionary operations (insert, delete, find) 2\\. Arrays a.\nNumeric vs non-numeric, character strings b. Single (vector) vs\nmultidimensional (matrix) 3\\. Records/Structs/Tuples and Objects (See also:\nFPL-OOP) 4\\. Linked lists (for historical reasons) a. Single vs Double and\nLinear vs Circular 5\\. Stacks 6\\. Queues and deques a. Heap-based priority\nqueue 7\\. Hash tables/maps a. Collision resolution and complexity (e.g.,\nprobing, chaining, rehash) 8\\. Graphs (e.g., [un]directed, [a]cyclic,\n[un]connected, and [un]weighted) (See also: MSF-Discrete) a. Graph\nrepresentation: adjacency list vs matrix 9\\. Trees (See also: MSF-Discrete) a.\nBinary, n-ary, and search trees b. Balanced (e.g., AVL, Red-Black, Heap) 10\\.\nSets (See also: MSF-Discrete) 11\\. Search algorithms a. O(n) complexity (e.g.,\nlinear/sequential array/list search) b. O(log2 n) complexity (e.g., binary\nsearch) c. O(logb n) complexity (e.g., uninformed depth/breadth-first tree\nsearch) 12\\. Sorting algorithms (e.g., stable, unstable) a. O(n2) complexity\n(e.g., insertion, selection), b. O(n log n) complexity (e.g., quicksort,\nmerge, timsort) 13\\. Graph algorithms a. Shortest path (e.g., Dijkstra's,\nFloyd's) b. Minimal spanning tree (e.g., Prim's, Kruskal's) KA Core: 14\\.\nSorting algorithms a. O(n log n) complexity heapsort b. Pseudo O(n) complexity\n(e.g., bucket, counting, radix) 15\\. Graph algorithms a. Transitive closure\n(e.g., Warshall's) b. Topological sort 16\\. Matching a. Efficient string\nmatching (e.g., Boyer-Moore, Knuth-Morris-Pratt) b. Longest common subsequence\nmatching c. Regular expression matching Non-core: 17\\. Cryptography algorithms\n(e.g., SHA-256) (See also: SEC-Crypto) 18\\. Parallel algorithms (See also:\nPDC-Algorithms, FPL-Parallel) 19\\. Consensus algorithms (e.g., Blockchain)\n(See also: SEC-Crypto) a. Proof of work vs proof of stake (See also: SEP-\nSustainability) 20\\. Quantum computing algorithms (See also: AL-Models, AR-\nQuantum) a. Oracle-based (e.g., Deutsch-Jozsa, Bernstein-Vazirani, Simon) b.\nSuperpolynomial speed-up via QFT (e.g., Shor's) c. Polynomial speed-up via\namplitude amplification (e.g., Grover's) 21\\. Fast-Fourier Transform (FFT)\nalgorithm 22\\. Differential evolution algorithm Illustrative Learning\nOutcomes: CS Core: 1\\. For each ADT/Data-Structure in this unit a. Explain its\ndefinition, properties, representation(s), and associated ADT operations. b.\nExplain step-by-step how the ADT operations associated with the data structure\ntransform it. 2\\. For each algorithm in this unit explain step-by-step how the\nalgorithm operates. 3\\. For each algorithmic approach (e.g., sorting) in this\nunit apply a prototypical example of the approach (e.g., merge sort). 90 4\\.\nGiven requirements for a problem, develop multiple solutions using various\ndata structures and algorithms. Subsequently, evaluate the suitability,\nstrengths, and weaknesses selecting an approach that best satisfies the\nrequirements. 5\\. Explain how collision avoidance and collision resolution is\nhandled in hash tables. 6\\. Explain factors beyond computational efficiency\nthat influence the choice of algorithms, such as programming time,\nmaintainability, and the use of application-specific patterns in the input\ndata. 7\\. Explain the heap property and the use of heaps as an implementation\nof a priority queue. KA Core: 8\\. For each of the algorithms and algorithmic\napproaches in the KA Core topics: a. Explain a prototypical example of the\nalgorithm, and b. Explain step-by-step how the algorithm operates. Non-core:\n9\\. An appreciation of quantum computation and its application to certain\nproblems.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/4c72c5efcf5e34d9bce8f2a53bdd53bca6fe3078596bb4c5105baef936ef4ef1> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/has_schema_type> _:N58cb54ce4bc24761914918a0c91b12a2 <http://groq.org/4c72c5efcf5e34d9bce8f2a53bdd53bca6fe3078596bb4c5105baef936ef4ef1> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU010" <http://groq.org/4c72c5efcf5e34d9bce8f2a53bdd53bca6fe3078596bb4c5105baef936ef4ef1> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/4c72c5efcf5e34d9bce8f2a53bdd53bca6fe3078596bb4c5105baef936ef4ef1> .
_:N6a8486ab74b04af2a575a05ddd68accb <http://schema.org/explain> "Lecture focuses on teaching methods, while KU covers programming platforms/technical constraints." <http://groq.org/b29c368fdb4f269f2059d9ba94c4612b2eca0c99330a91702e4bbe01d4d0c0e6> .
_:N6a8486ab74b04af2a575a05ddd68accb <http://schema.org/answer> "0" <http://groq.org/b29c368fdb4f269f2059d9ba94c4612b2eca0c99330a91702e4bbe01d4d0c0e6> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S4 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4AU010</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/b29c368fdb4f269f2059d9ba94c4612b2eca0c99330a91702e4bbe01d4d0c0e6> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/has_schema_type> _:N6a8486ab74b04af2a575a05ddd68accb <http://groq.org/b29c368fdb4f269f2059d9ba94c4612b2eca0c99330a91702e4bbe01d4d0c0e6> .
_:N6a8486ab74b04af2a575a05ddd68accb <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/b29c368fdb4f269f2059d9ba94c4612b2eca0c99330a91702e4bbe01d4d0c0e6> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/b29c368fdb4f269f2059d9ba94c4612b2eca0c99330a91702e4bbe01d4d0c0e6> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4AU010" <http://groq.org/b29c368fdb4f269f2059d9ba94c4612b2eca0c99330a91702e4bbe01d4d0c0e6> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/has_schema_type> _:N487669442a064723b2d83ef445874af3 <http://groq.org/3431e005c2791c0bb7690eb54edf3cbe1e4190d1c9733ef36f745da969105dd0> .
_:N487669442a064723b2d83ef445874af3 <http://schema.org/explain> "The lecture covers key concepts of SE-Formal Methods, applies principles in practical scenarios, and analyzes the importance of the topic in computing, aligning with the KU's learning outcomes." <http://groq.org/3431e005c2791c0bb7690eb54edf3cbe1e4190d1c9733ef36f745da969105dd0> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU030</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/3431e005c2791c0bb7690eb54edf3cbe1e4190d1c9733ef36f745da969105dd0> .
_:N487669442a064723b2d83ef445874af3 <http://schema.org/answer> "1" <http://groq.org/3431e005c2791c0bb7690eb54edf3cbe1e4190d1c9733ef36f745da969105dd0> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU030" <http://groq.org/3431e005c2791c0bb7690eb54edf3cbe1e4190d1c9733ef36f745da969105dd0> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/3431e005c2791c0bb7690eb54edf3cbe1e4190d1c9733ef36f745da969105dd0> .
_:N487669442a064723b2d83ef445874af3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/3431e005c2791c0bb7690eb54edf3cbe1e4190d1c9733ef36f745da969105dd0> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 2 Objectif: (résultats d'apprentissage)\ndonnées (itératifs et récursifs) Course content: Structures de données non-linéaires associatives (table associative, ensemble, classe-union) Course name: http://example.org/course/UE_XLG4IU010</page1>\n        <page2>Pages:88-90 HOURS CS Core = 11 KA Core = 6 AL-Foundational: Foundational Data\nStructures and Algorithms CS Core: (See also: SDF-Data-Structures, SDF-\nAlgorithms) 1\\. Abstract Data Type (ADT) and operations on an ADT (See also:\nFPL-Types) a. Dictionary operations (insert, delete, find) 2\\. Arrays a.\nNumeric vs non-numeric, character strings b. Single (vector) vs\nmultidimensional (matrix) 3\\. Records/Structs/Tuples and Objects (See also:\nFPL-OOP) 4\\. Linked lists (for historical reasons) a. Single vs Double and\nLinear vs Circular 5\\. Stacks 6\\. Queues and deques a. Heap-based priority\nqueue 7\\. Hash tables/maps a. Collision resolution and complexity (e.g.,\nprobing, chaining, rehash) 8\\. Graphs (e.g., [un]directed, [a]cyclic,\n[un]connected, and [un]weighted) (See also: MSF-Discrete) a. Graph\nrepresentation: adjacency list vs matrix 9\\. Trees (See also: MSF-Discrete) a.\nBinary, n-ary, and search trees b. Balanced (e.g., AVL, Red-Black, Heap) 10\\.\nSets (See also: MSF-Discrete) 11\\. Search algorithms a. O(n) complexity (e.g.,\nlinear/sequential array/list search) b. O(log2 n) complexity (e.g., binary\nsearch) c. O(logb n) complexity (e.g., uninformed depth/breadth-first tree\nsearch) 12\\. Sorting algorithms (e.g., stable, unstable) a. O(n2) complexity\n(e.g., insertion, selection), b. O(n log n) complexity (e.g., quicksort,\nmerge, timsort) 13\\. Graph algorithms a. Shortest path (e.g., Dijkstra's,\nFloyd's) b. Minimal spanning tree (e.g., Prim's, Kruskal's) KA Core: 14\\.\nSorting algorithms a. O(n log n) complexity heapsort b. Pseudo O(n) complexity\n(e.g., bucket, counting, radix) 15\\. Graph algorithms a. Transitive closure\n(e.g., Warshall's) b. Topological sort 16\\. Matching a. Efficient string\nmatching (e.g., Boyer-Moore, Knuth-Morris-Pratt) b. Longest common subsequence\nmatching c. Regular expression matching Non-core: 17\\. Cryptography algorithms\n(e.g., SHA-256) (See also: SEC-Crypto) 18\\. Parallel algorithms (See also:\nPDC-Algorithms, FPL-Parallel) 19\\. Consensus algorithms (e.g., Blockchain)\n(See also: SEC-Crypto) a. Proof of work vs proof of stake (See also: SEP-\nSustainability) 20\\. Quantum computing algorithms (See also: AL-Models, AR-\nQuantum) a. Oracle-based (e.g., Deutsch-Jozsa, Bernstein-Vazirani, Simon) b.\nSuperpolynomial speed-up via QFT (e.g., Shor's) c. Polynomial speed-up via\namplitude amplification (e.g., Grover's) 21\\. Fast-Fourier Transform (FFT)\nalgorithm 22\\. Differential evolution algorithm Illustrative Learning\nOutcomes: CS Core: 1\\. For each ADT/Data-Structure in this unit a. Explain its\ndefinition, properties, representation(s), and associated ADT operations. b.\nExplain step-by-step how the ADT operations associated with the data structure\ntransform it. 2\\. For each algorithm in this unit explain step-by-step how the\nalgorithm operates. 3\\. For each algorithmic approach (e.g., sorting) in this\nunit apply a prototypical example of the approach (e.g., merge sort). 90 4\\.\nGiven requirements for a problem, develop multiple solutions using various\ndata structures and algorithms. Subsequently, evaluate the suitability,\nstrengths, and weaknesses selecting an approach that best satisfies the\nrequirements. 5\\. Explain how collision avoidance and collision resolution is\nhandled in hash tables. 6\\. Explain factors beyond computational efficiency\nthat influence the choice of algorithms, such as programming time,\nmaintainability, and the use of application-specific patterns in the input\ndata. 7\\. Explain the heap property and the use of heaps as an implementation\nof a priority queue. KA Core: 8\\. For each of the algorithms and algorithmic\napproaches in the KA Core topics: a. Explain a prototypical example of the\nalgorithm, and b. Explain step-by-step how the algorithm operates. Non-core:\n9\\. An appreciation of quantum computation and its application to certain\nproblems.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/928fa4e60b17b03c4688139ab3dbdd86ffa5d9601565c00c0e68dbb62d681e65> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/has_schema_type> _:N8e55a554485d4c84934b00fadee8b622 <http://groq.org/928fa4e60b17b03c4688139ab3dbdd86ffa5d9601565c00c0e68dbb62d681e65> .
_:N8e55a554485d4c84934b00fadee8b622 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/928fa4e60b17b03c4688139ab3dbdd86ffa5d9601565c00c0e68dbb62d681e65> .
_:N8e55a554485d4c84934b00fadee8b622 <http://schema.org/explain> "The lecture covers a significant portion of the KU, including data structures and algorithms, with a focus on abstract data types, arrays, linked lists, stacks, queues, hash tables, graphs, trees, and sets." <http://groq.org/928fa4e60b17b03c4688139ab3dbdd86ffa5d9601565c00c0e68dbb62d681e65> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU010" <http://groq.org/928fa4e60b17b03c4688139ab3dbdd86ffa5d9601565c00c0e68dbb62d681e65> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/928fa4e60b17b03c4688139ab3dbdd86ffa5d9601565c00c0e68dbb62d681e65> .
_:N8e55a554485d4c84934b00fadee8b622 <http://schema.org/answer> "1" <http://groq.org/928fa4e60b17b03c4688139ab3dbdd86ffa5d9601565c00c0e68dbb62d681e65> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU040" <http://groq.org/d420d98e5e0a3a19e559472844db1fe1cdd67dcffc8d0d9fdde8241281b014a4> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/has_schema_type> _:N95f6c944864b453bbb82e27bc0615f6d <http://groq.org/d420d98e5e0a3a19e559472844db1fe1cdd67dcffc8d0d9fdde8241281b014a4> .
_:N95f6c944864b453bbb82e27bc0615f6d <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/d420d98e5e0a3a19e559472844db1fe1cdd67dcffc8d0d9fdde8241281b014a4> .
_:N95f6c944864b453bbb82e27bc0615f6d <http://schema.org/explain> "The lecture covers the introduction to relational data model, SQL, and OLAP, which aligns with the KU's CS Core and KA Core topics." <http://groq.org/d420d98e5e0a3a19e559472844db1fe1cdd67dcffc8d0d9fdde8241281b014a4> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Bases de données Objectif: (résultats d'apprentissage)\n- Introduction à la modélisation Merise\n- Modèle relationnel\n- Algèbre relationnelle et SQL Course content: - Passage au relationnel\n- Définition et interrogation d'une base en sql\n- Introduction au modèle olap Course name: http://example.org/course/UE_XLG4IU040</page1>\n        <page2>Pages: 116-117 HOURS CS Core = 2 KA Core = 3 DM-Modeling: Data Modeling CS\nCore: 1\\. Data modeling (See also: SE-Requirements) 2\\. Relational data model\n(See also: MSF-Discrete) KA Core: 3\\. Conceptual models (e.g., entity-\nrelationship, UML diagrams) 4\\. Semi-structured data models (expressed using\nDTD, XML, or JSON Schema, for example) Non-core: 5\\. Spreadsheet models 6\\.\nObject-oriented models (See also: FPL-OOP) a. GraphQL 7\\. New features in SQL\n8\\. Specialized Data Modeling topics a. Time series data (aggregation, join)\nb. Graph data (link traversal) c. Techniques for avoiding inefficient raw data\naccess (e.g., \"avg daily price\"): materialized views and special data\nstructures (e.g., Hyperloglog, bitmap) d. Geo-Spatial data (e.g., GIS\ndatabases) (See also: SPD-Interactive) Illustrative Learning Outcomes: CS\nCore: 1\\. Describe the components of the relational data model. 2\\. Model 1:1,\n1:n, and n:m relationships using the relational data model. KA Core: 3\\.\nDescribe the components of the E-R (or some other non-relational) data model.\n4\\. Model a given environment using a conceptual data model. 5\\. Model a given\nenvironment using the document-based or key-value store-based data model.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/d420d98e5e0a3a19e559472844db1fe1cdd67dcffc8d0d9fdde8241281b014a4> .
_:N95f6c944864b453bbb82e27bc0615f6d <http://schema.org/answer> "1" <http://groq.org/d420d98e5e0a3a19e559472844db1fe1cdd67dcffc8d0d9fdde8241281b014a4> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/d420d98e5e0a3a19e559472844db1fe1cdd67dcffc8d0d9fdde8241281b014a4> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3AU010" <http://groq.org/ef1bd213953b0035cd6d2bc5edb2b5995864176918b105a798cf3bdc280336ab> .
_:Ne6b36239d7694b42a66f29be59d33142 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/ef1bd213953b0035cd6d2bc5edb2b5995864176918b105a798cf3bdc280336ab> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/ef1bd213953b0035cd6d2bc5edb2b5995864176918b105a798cf3bdc280336ab> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3AU010</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/ef1bd213953b0035cd6d2bc5edb2b5995864176918b105a798cf3bdc280336ab> .
_:Ne6b36239d7694b42a66f29be59d33142 <http://schema.org/explain> "The lecture focuses on teaching methods and learning outcomes in English, not the technical content of the KU." <http://groq.org/ef1bd213953b0035cd6d2bc5edb2b5995864176918b105a798cf3bdc280336ab> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/has_schema_type> _:Ne6b36239d7694b42a66f29be59d33142 <http://groq.org/ef1bd213953b0035cd6d2bc5edb2b5995864176918b105a798cf3bdc280336ab> .
_:Ne6b36239d7694b42a66f29be59d33142 <http://schema.org/answer> "0" <http://groq.org/ef1bd213953b0035cd6d2bc5edb2b5995864176918b105a798cf3bdc280336ab> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU020" <http://groq.org/b431690aee1dbf727af0a9fe6e1674acc7a35f7b81c91ca7b195cc8c52fb02c0> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/has_schema_type> _:N5cf05e54b12943f4b849b0d532cade91 <http://groq.org/b431690aee1dbf727af0a9fe6e1674acc7a35f7b81c91ca7b195cc8c52fb02c0> .
_:N5cf05e54b12943f4b849b0d532cade91 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/b431690aee1dbf727af0a9fe6e1674acc7a35f7b81c91ca7b195cc8c52fb02c0> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Unité Enseignement de Découverte Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU020</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/b431690aee1dbf727af0a9fe6e1674acc7a35f7b81c91ca7b195cc8c52fb02c0> .
_:N5cf05e54b12943f4b849b0d532cade91 <http://schema.org/answer> "1" <http://groq.org/b431690aee1dbf727af0a9fe6e1674acc7a35f7b81c91ca7b195cc8c52fb02c0> .
_:N5cf05e54b12943f4b849b0d532cade91 <http://schema.org/explain> "The lecture covers key concepts of SE-Formal Methods, applies principles in practical scenarios, and analyzes the importance of this topic in computing, aligning with the KU's learning outcomes." <http://groq.org/b431690aee1dbf727af0a9fe6e1674acc7a35f7b81c91ca7b195cc8c52fb02c0> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/b431690aee1dbf727af0a9fe6e1674acc7a35f7b81c91ca7b195cc8c52fb02c0> .
_:Nec55122a88b740fa813aa3498fd34e6b <http://schema.org/answer> "1" <http://groq.org/e121dc7051f36a375ec8a53a5de0e333574e1a90b34fa7780d9d034433e04ff1> .
_:Nec55122a88b740fa813aa3498fd34e6b <http://schema.org/explain> "The lecture covers a large subset of the KU, particularly focusing on logic and proof systems." <http://groq.org/e121dc7051f36a375ec8a53a5de0e333574e1a90b34fa7780d9d034433e04ff1> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/e121dc7051f36a375ec8a53a5de0e333574e1a90b34fa7780d9d034433e04ff1> .
_:Nec55122a88b740fa813aa3498fd34e6b <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/e121dc7051f36a375ec8a53a5de0e333574e1a90b34fa7780d9d034433e04ff1> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU020" <http://groq.org/e121dc7051f36a375ec8a53a5de0e333574e1a90b34fa7780d9d034433e04ff1> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/has_schema_type> _:Nec55122a88b740fa813aa3498fd34e6b <http://groq.org/e121dc7051f36a375ec8a53a5de0e333574e1a90b34fa7780d9d034433e04ff1> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Logique pour l'informatique Objectif: (résultats d'apprentissage)\nconsistance et complétude d'un système de preuves.\n4. Représenter une preuve de la déduction naturelle sous forme d'arbre d'inférence.\n5. Utiliser les algorithmes d'unification et de résolution pour le raisonnement automatique sur les\nformules logiques.\n1) Raisonnement algébrique booléen\n• Dualités des connecteurs logiques\n• Formes normales conjonctive et disjonctive\n2) Systèmes de preuves\n• Système d'inférence associé à une définition inductive\n• Preuve d'appartenance à un ensemble inductif par un arbre de preuves\n• Règles d'inférences de la déduction naturelle pour la logique propositionnelle\n• Distinguer logique classique et logique intuitionniste\n3) Donner du sens aux langages logique Course content: • Interprétation, modèle, satisfiabilité, validité\n• Correspondance avec le système de preuve: correction et complétude\n4) Calcul des prédicats\n• Manipulation des quantificateurs\n• Skolémisation, forme clausale\n• Théorie logique\n5) Raisonner automatiquement sur les formules logique\n• Algorithme d'unification\n• Algorithme de résolution Course name: http://example.org/course/UE_XLG3IU020</page1>\n        <page2>Pages: 187-188 HOURS CS Core = 29 KA Core = 11 MSF-Discrete: Discrete\nMathematics CS Core: 1\\. Sets, relations, functions, cardinality 2\\. Recursive\nmathematical definitions 3\\. Proof techniques (induction, proof by\ncontradiction) 4\\. Permutations, combinations, counting, pigeonhole principle\n5\\. Modular arithmetic 6\\. Logic: truth tables, connectives (operators),\ninference rules, formulas, normal forms, simple predicate logic 7\\. Graphs:\nbasic definitions 8\\. Order notation Illustrative Learning Outcomes: CS Core:\n1\\. Sets, Relations, and Functions, Cardinality a. Explain with examples the\nbasic terminology of functions, relations, and sets. b. Perform the operations\nassociated with sets, functions, and relations. c. Relate practical examples\nto the appropriate set, function, or relation model, and interpret the\nassociated operations and terminology in context. d. Calculate the size of a\nfinite set, including making use of the sum and product rules and inclusion-\nexclusion principle. e. Explain the difference between finite, countable, and\nuncountable sets. 2\\. Recursive mathematical definitions a. Apply recursive\ndefinitions of sequences or structures (e.g., Fibonacci numbers, linked lists,\nparse trees, fractals). b. Formulate inductive proofs of statements about\nrecursive definitions. c. Solve a variety of basic recurrence relations. d.\nAnalyze a problem to determine underlying recurrence relations. e. Given a\nrecursive/iterative code snippet, describe its underlying recurrence relation,\nhypothesize a closed form for the recurrence relation, and prove the\nhypothesis correct (usually, using induction). 3\\. Proof Techniques a.\nIdentify the proof technique used in a given proof. b. Outline the basic\nstructure of each proof technique (direct proof, proof by contradiction, and\ninduction) described in this unit. c. Apply each of the proof techniques\n(direct proof, proof by contradiction, and induction) correctly in the\nconstruction of a sound argument. d. Determine which type of proof is best for\na given problem. e. Explain the parallels between ideas of mathematical and/or\nstructural induction to recursion and recursively defined structures. f.\nExplain the relationship between weak and strong induction and give examples\nof the appropriate use of each. 4\\. Permutations, combinations, and counting\na. Apply counting arguments, including sum and product rules, inclusion-\nexclusion principle, and arithmetic/geometric progressions. b. Apply the\npigeonhole principle in the context of a formal proof. c. Compute permutations\nand combinations of a set, and interpret the meaning in the context of the\nspecific application. d. Map real-world applications to appropriate counting\nformalisms, such as determining the number of ways to arrange people around a\ntable, subject to constraints on the seating arrangement, or the number of\nways to determine certain hands in cards (e.g., a full house). 5\\. Modular\narithmetic a. Perform computations involving modular arithmetic. b. Explain\nthe notion of the greatest common divisor and apply Euclid's algorithm to\ncompute it. 6\\. Logic a. Convert logical statements from informal language to\npropositional and predicate logic expressions. b. Apply formal methods of\nsymbolic propositional and predicate logic, such as calculating validity of\nformulae, computing normal forms, or negating a logical statement. c. Use the\nrules of inference to construct proofs in propositional and predicate logic.\nd. Describe how symbolic logic can be used to model real-life situations or\napplications, including those arising in computing contexts such as software\nanalysis (e.g., program correctness), database queries, and algorithms. e.\nApply formal logic proofs and/or informal, but rigorous, logical reasoning to\nreal problems, such as predicting the behavior of software or solving problems\nsuch as puzzles. f. Describe the strengths and limitations of propositional\nand predicate logic. g. Explain what it means for a proof in propositional (or\npredicate) logic to be valid. 7\\. Graphs a. Illustrate by example the basic\nterminology of graph theory, and some of the properties and special cases of\ntypes of graphs, including trees. b. Demonstrate different traversal methods\nfor trees and graphs, including pre-, post-, and in-order traversal of trees,\nalong with breadth-first and depth-first search for graphs. c. Model a variety\nof real-world problems in computer science using appropriate forms of graphs\nand trees, such as representing a network topology, the organization of a\nhierarchical file system, or a social network. d. Show how concepts from\ngraphs and trees appear in data structures, algorithms, proof techniques\n(structural induction), and counting. KA Core: The recommended topics are the\nsame between CS core and KA-core, but with far more hours, the KA-core can\ncover these topics in depth and might include more computing-related\napplications.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/e121dc7051f36a375ec8a53a5de0e333574e1a90b34fa7780d9d034433e04ff1> .
_:N4eeaf0f7c59b42548010d126a6ef2097 <http://example.org/has_score> "0.6879257"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/bbb4875943482923898fb7ca36d646b4f7ab5c541ae0470b5328f903412f1965> .
_:Nbd61c77c7b7b43e6a6e3d700a9dfc72e <http://example.org/has_chunk> ". Chomsky hierarchy (See also: AL-Models)\nb. Left-most/right-most derivation and ambiguity\nc. Grammar transformation\n7. Parser error recovery mechanisms\n8. Generating scanners and parsers from declarative specifications\nIllustrative learning outcomes:\nNon-core:\n1. Use formal grammars to specify the syntax of languages.\n2. Illustrate the role of lookahead tables in parsing.\n3. Use declarative tools to generate parsers and scanners.\n4" <http://faiss.org/bbb4875943482923898fb7ca36d646b4f7ab5c541ae0470b5328f903412f1965> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/is_aligned_with> _:N4eeaf0f7c59b42548010d126a6ef2097 <http://faiss.org/bbb4875943482923898fb7ca36d646b4f7ab5c541ae0470b5328f903412f1965> .
_:Nf91ad5403bc5441da54613c86bc4f559 <http://example.org/has_chunk> ". Examples of use: POS tagging and morphology\n8. Information retrieval (See also: DM-Unstructured)\na. Vector space model\ni. TF & IDF\nb. Precision and recall\n9. Information extraction\n10. Language translation\n11. Text classification, categorization\na. Bag of words model\n12. Deep learning for NLP (See also: AI-ML)\na. RNNs\nb. Transformers\nc. Multi-modal embeddings (e.g., images + text)\nd. Generative language models\nIllustrative Learning Outcomes:\n1" <http://faiss.org/bbb4875943482923898fb7ca36d646b4f7ab5c541ae0470b5328f903412f1965> .
_:Nbd61c77c7b7b43e6a6e3d700a9dfc72e <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Syntax_Syntax_Analysis.txt> <http://faiss.org/bbb4875943482923898fb7ca36d646b4f7ab5c541ae0470b5328f903412f1965> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/is_aligned_with> _:Nf91ad5403bc5441da54613c86bc4f559 <http://faiss.org/bbb4875943482923898fb7ca36d646b4f7ab5c541ae0470b5328f903412f1965> .
_:Nf91ad5403bc5441da54613c86bc4f559 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-NLP_Natural_Language_Processing.txt> <http://faiss.org/bbb4875943482923898fb7ca36d646b4f7ab5c541ae0470b5328f903412f1965> .
_:N4eeaf0f7c59b42548010d126a6ef2097 <http://example.org/has_chunk> ". Parametricity\nIllustrative learning outcomes:\nNon-core:\n1. Construct formal semantics for a small language.\n2. Write a lambda-calculus program and show its evaluation to a normal form.\n3. Discuss the different approaches of operational, denotational, and axiomatic semantics.\n4. Use induction to prove properties of all programs in a language.\n5. Use induction to prove properties of all programs in a language that is well-typed according to a\nformally defined type system.\n6" <http://faiss.org/bbb4875943482923898fb7ca36d646b4f7ab5c541ae0470b5328f903412f1965> .
_:N4eeaf0f7c59b42548010d126a6ef2097 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Formalism_Formal_Semantics.txt> <http://faiss.org/bbb4875943482923898fb7ca36d646b4f7ab5c541ae0470b5328f903412f1965> .
_:Nf91ad5403bc5441da54613c86bc4f559 <http://example.org/has_score> "0.69355947"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/bbb4875943482923898fb7ca36d646b4f7ab5c541ae0470b5328f903412f1965> .
_:Nbd61c77c7b7b43e6a6e3d700a9dfc72e <http://example.org/has_score> "0.7373393"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/bbb4875943482923898fb7ca36d646b4f7ab5c541ae0470b5328f903412f1965> .
<http://example.org/faiss> <http://example.org/input> "Label: Langages et automates Objectif: (résultats d'apprentissage)\n5. Course content: • Langages algébriques\n- Grammaire algébrique\n- Arbre de dérivation\n- Automates à pile\n• Hiérarchie de Chomsky\n- Classification des grammaires;\n- Algorithmes de reconnaissance pour les grammaires de type 1 et 2\n• Analyse lexicale et syntaxique\n- TP de flex et bison Course name: http://example.org/course/UE_XLG4IU020" <http://faiss.org/bbb4875943482923898fb7ca36d646b4f7ab5c541ae0470b5328f903412f1965> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/is_aligned_with> _:Nbd61c77c7b7b43e6a6e3d700a9dfc72e <http://faiss.org/bbb4875943482923898fb7ca36d646b4f7ab5c541ae0470b5328f903412f1965> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Programmation à Objets Objectif: (résultats d'apprentissage) Connaître les mécanismes d’héritage et de polymorphisme Course content: Classes abstraites Course name: http://example.org/course/UE_XLG3IU030</page1>\n        <page2>Pages: 130-131 HOURS CS Core = 4 + 1 (SDF) KA Core = 1 FPL-OOP: Object-\nOriented Programming CS Core: 1\\. Imperative programming as a subset of\nobject-oriented programming. 2\\. Object-oriented design: a. Decomposition into\nobjects carrying state and having behavior. b. Class-hierarchy design for\nmodeling. 3\\. Definition of classes: fields, methods, and constructors. (See\nalso: SDF-Fundamentals) 4\\. Subclasses, inheritance (including multiple\ninheritance), and method overriding. 5\\. Dynamic dispatch: definition of\nmethod-call. 6\\. Exception handling. (See also: SDF-Fundamentals, PDC-\nCoordination, SE-Construction) 7\\. Object-oriented idioms for encapsulation:\na. Privacy, data hiding, and visibility of class members. b. Interfaces\nrevealing only method signatures. c. Abstract base classes, traits and mixins.\n8\\. Dynamic vs static properties. 9\\. Composition vs inheritance. 10\\.\nSubtyping: a. Subtype polymorphism; implicit upcasts in typed languages. b.\nNotion of behavioral replacement: subtypes acting like supertype. c.\nRelationship between subtyping and inheritance. KA Core: 11\\. Collection\nclasses, iterators, and other common library components. 12\\. Metaprogramming\nand reflection. Illustrative Learning Outcomes: CS Core: 1\\. Enumerate the\ndifferences between imperative and object-oriented programming paradigms. 2\\.\nCompose a class through design, implementation, and testing to meet behavioral\nrequirements. 3\\. Build a simple class hierarchy utilizing subclassing that\nallows code to be reused for distinct subclasses. 4\\. Predict and validate\ncontrol flow in a program using dynamic dispatch. 5\\. Compare and contrast how\ncomputational solutions to a problem differ in procedural, functional, and\nobject-oriented approaches. 6\\. Compare and contrast mechanisms to define and\nprotect data elements within procedural, functional, and object-oriented\napproaches. 7\\. Compare and contrast the benefits and costs/impact of using\ninheritance (subclasses) and composition (specifically, how to base\ncomposition on higher order functions). 8\\. Explain the relationship between\nobject-oriented inheritance (code-sharing and overriding) and subtyping (the\nidea of a subtype being usable in a context that expects the supertype). 9\\.\nUse object-oriented encapsulation mechanisms such as interfaces and private\nmembers. 10\\. Define and use iterators and other operations on aggregates,\nincluding operations that take functions as arguments, in multiple programming\nlanguages, selecting the most natural idioms for each language. (See also:\nFPL-Functional) KA Core: 11\\. Use collection classes and iterators effectively\nto solve a problem.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/5f6479641cd433db78767d961e3cfba5a15e61f5126a4fde76d2023dc08f08c3> .
_:N26bf0770c66b418ea0f8db5418556670 <http://schema.org/answer> "0" <http://groq.org/5f6479641cd433db78767d961e3cfba5a15e61f5126a4fde76d2023dc08f08c3> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/5f6479641cd433db78767d961e3cfba5a15e61f5126a4fde76d2023dc08f08c3> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU030" <http://groq.org/5f6479641cd433db78767d961e3cfba5a15e61f5126a4fde76d2023dc08f08c3> .
_:N26bf0770c66b418ea0f8db5418556670 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/5f6479641cd433db78767d961e3cfba5a15e61f5126a4fde76d2023dc08f08c3> .
_:N26bf0770c66b418ea0f8db5418556670 <http://schema.org/explain> "The lecture covers some aspects of OOP like inheritance and polymorphism but lacks coverage of other key topics in the KU such as exception handling, metaprogramming, and collection classes." <http://groq.org/5f6479641cd433db78767d961e3cfba5a15e61f5126a4fde76d2023dc08f08c3> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/has_schema_type> _:N26bf0770c66b418ea0f8db5418556670 <http://groq.org/5f6479641cd433db78767d961e3cfba5a15e61f5126a4fde76d2023dc08f08c3> .
_:N901c31a111794059bbf7958a16b5ae3f <http://schema.org/explain> "The lecture covers topics such as development platforms, programming languages, and platform constraints, which align with the Knowledge Unit's content." <http://groq.org/7b0e93d7fba78cd60087190038248e551c999231e20fee3acf89513e27091470> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/has_schema_type> _:N901c31a111794059bbf7958a16b5ae3f <http://groq.org/7b0e93d7fba78cd60087190038248e551c999231e20fee3acf89513e27091470> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3AU010</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/7b0e93d7fba78cd60087190038248e551c999231e20fee3acf89513e27091470> .
_:N901c31a111794059bbf7958a16b5ae3f <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/7b0e93d7fba78cd60087190038248e551c999231e20fee3acf89513e27091470> .
_:N901c31a111794059bbf7958a16b5ae3f <http://schema.org/answer> "1" <http://groq.org/7b0e93d7fba78cd60087190038248e551c999231e20fee3acf89513e27091470> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3AU010" <http://groq.org/7b0e93d7fba78cd60087190038248e551c999231e20fee3acf89513e27091470> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/7b0e93d7fba78cd60087190038248e551c999231e20fee3acf89513e27091470> .
_:N36a8c2c9fcfd4f459d6428ce7f889e27 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/2c7e301aeec9a075253475ddd6c5943901db7cb7206812a866a600abb5b71e42> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/has_schema_type> _:N36a8c2c9fcfd4f459d6428ce7f889e27 <http://groq.org/2c7e301aeec9a075253475ddd6c5943901db7cb7206812a866a600abb5b71e42> .
_:N36a8c2c9fcfd4f459d6428ce7f889e27 <http://schema.org/explain> "The lecture focuses on teaching methodologies and professional integration, which does not align with the technical content of the Knowledge Unit." <http://groq.org/2c7e301aeec9a075253475ddd6c5943901db7cb7206812a866a600abb5b71e42> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU010" <http://groq.org/2c7e301aeec9a075253475ddd6c5943901db7cb7206812a866a600abb5b71e42> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/2c7e301aeec9a075253475ddd6c5943901db7cb7206812a866a600abb5b71e42> .
_:N36a8c2c9fcfd4f459d6428ce7f889e27 <http://schema.org/answer> "0" <http://groq.org/2c7e301aeec9a075253475ddd6c5943901db7cb7206812a866a600abb5b71e42> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU010</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/2c7e301aeec9a075253475ddd6c5943901db7cb7206812a866a600abb5b71e42> .
_:N36e2f9bf7b744b0f95bf4f3bdf2f3c13 <http://schema.org/explain> "Lecture focuses on mathematics (analysis/linear algebra), while KU covers HCI evaluation methods and ethics—no substantive overlap." <http://groq.org/ee4d2fd9f34b34c72f914cc7fdf2f4844849f05a9bbdb6fc4cdd97dadc5b17f4> .
_:N36e2f9bf7b744b0f95bf4f3bdf2f3c13 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/ee4d2fd9f34b34c72f914cc7fdf2f4844849f05a9bbdb6fc4cdd97dadc5b17f4> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/has_schema_type> _:N36e2f9bf7b744b0f95bf4f3bdf2f3c13 <http://groq.org/ee4d2fd9f34b34c72f914cc7fdf2f4844849f05a9bbdb6fc4cdd97dadc5b17f4> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Analyse et Algebre lineaire 2 Objectif: (résultats d'apprentissage) • Course content: • Course name: http://example.org/course/UE_XLG3MU030</page1>\n        <page2>Pages: 178-179 HOURS CS Core = 1 KA Core = 2 HCI-Evaluation: Evaluating the\nDesign CS Core: 1\\. Methods for evaluation with users a. Formative (e.g.,\nneeds-finding, exploratory analysis) and summative assessment (e.g.,\nfunctionality and usability testing) b. Elements to evaluate (e.g., utility,\nefficiency, learnability, user satisfaction, affective elements such as\npleasure and engagement) c. Understanding ethical approval requirements before\nengaging in user research (See also: SETools, SEP-Ethical-Analysis, SEP-\nSecurity, SEP-Privacy, SEP-Professional-Ethics) KA Core: 2\\. Methods for\nevaluation with users (See also: SE-Validation) a. Qualitative methods\n(qualitative coding and thematic analysis) b. Quantitative methods\n(statistical tests) c. Mixed methods (e.g., observation, think-aloud,\ninterview, survey, experiment) d. Presentation requirements (e.g., reports,\npersonas) e. User-centered testing f. Heuristic evaluation g. Challenges and\nshortcomings to effective evaluation (e.g., sampling, generalization) 3\\.\nStudy planning a. How to set study goals b. Hypothesis design c. Approvals\nfrom Institutional Research Boards and ethics committees (See also: SEP-\nEthicalAnalysis, SEP-Security, SEP-Privacy) d. How to pre-register a study e.\nWithin-subjects vs between-subjects design 4\\. Implications and impacts of\ndesign with respect to the environment, material, society, security, privacy,\nethics, and broader impacts. (See also: SEC-Foundations) a. The environment b.\nMaterial c. Society d. Security e. Privacy f. Ethics g. Broader impacts Non-\ncore: 5\\. Techniques and tools for quantitative analysis a. Statistical\npackages b. Visualization tools c. Statistical tests (e.g., ANOVA, t-tests,\npost-hoc analysis, parametric vs non-parametric tests) d. Data exploration and\nvisual analytics; how to calculate effect size. 6\\. Data management a. Data\nstorage and data sharing (open science) b. Sensitivity and identifiability.\nIllustrative Learning Outcomes: CS Core: 1\\. Discuss the differences between\nformative and summative assessment and their role in evaluating design KA\nCore: 2\\. Select appropriate formative or summative evaluation methods at\ndifferent points throughout the development of a design. 3\\. Discuss the\nbenefits of using both qualitative and quantitative methods for evaluation.\n4\\. Evaluate the implications and broader impacts of a given design. 5\\. Plan\na usability evaluation for a given user interface, and justify its study\ngoals, hypothesis design, and study design. 6\\. Conduct a usability evaluation\nof a given user interface and draw defensible conclusions given the study\ndesign. Non-core: 7\\. Select and run appropriate statistical tests on provided\nstudy data to test for significance in the results. 8\\. Pre-register a study\ndesign, with planned statistical tests</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/ee4d2fd9f34b34c72f914cc7fdf2f4844849f05a9bbdb6fc4cdd97dadc5b17f4> .
_:N36e2f9bf7b744b0f95bf4f3bdf2f3c13 <http://schema.org/answer> "0" <http://groq.org/ee4d2fd9f34b34c72f914cc7fdf2f4844849f05a9bbdb6fc4cdd97dadc5b17f4> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3MU030" <http://groq.org/ee4d2fd9f34b34c72f914cc7fdf2f4844849f05a9bbdb6fc4cdd97dadc5b17f4> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/ee4d2fd9f34b34c72f914cc7fdf2f4844849f05a9bbdb6fc4cdd97dadc5b17f4> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU010" <http://groq.org/6fd6333c76d4d3cd8f7f75f5e4dc1a14b7693fa6036d5c6311ae24055fca194d> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 1 Objectif: (résultats d'apprentissage)\n•\nÉvaluer une implémentation de structure de données en temps et en place mémoire (coûts minimal,\nmaximal, amorti)\n• Course content: et mise en pratique dans l’approche de résolution de problèmes « Diviser pour régner ». Course name: http://example.org/course/UE_XLG3IU010</page1>\n        <page2>Pages:91-93 HOURS CS Core = 6 KA Core = 3 AL-Complexity: Complexity CS Core:\n1\\. Complexity Analysis Framework a. Best, average, and worst-case performance\nof an algorithm b. Empirical and relative (Order of Growth) measurements c.\nInput size and primitive operations d. Time and space efficiency 2\\.\nAsymptotic complexity analysis (average and worst-case bounds) a. Big-O, Big-\nOmega, and Big-Theta formal notations b. Foundational Complexity Classes and\nRepresentative Examples/Problems i. O(1) Constant (e.g., array access) ii.\nO(log2 n) Logarithmic (e.g., binary search) iii. O(n) Linear (e.g., linear\nsearch) iv. O(n log2 n) Log Linear (e.g., mergesort) v. O(n2) Quadratic (e.g.,\nselection sort) vi. O(nc) Polynomial (e.g., O(n3) Gaussian elimination) vii.\nO(2n) Exponential (e.g., Knapsack, Satisfiability (SAT), Traveling Sales-\nPerson (TSP), all subsets) viii. O(n!) Factorial (e.g., Hamiltonian circuit,\nall permutations) 3\\. Empirical measurements of performance 4\\. Tractability\nand intractability a. P, NP, and NP-Complete Complexity Classes b. NP-Complete\nProblems (e.g., SAT, Knapsack, TSP) c. Reductions 5\\. Time and space tradeoffs\nin algorithms 92 KA Core: 6\\. Little-o, Little-Omega, and Little Theta\nnotations 7\\. Formal recursive analysis 8\\. Amortized analysis 9\\. Turing\nMachine-based models of complexity a. Time complexity i. P, NP, NP-C, and EXP\nclasses ii. Cook-Levin theorem b. Space Complexity i. NSpace and PSpace ii.\nSavitch's theorem Illustrative Learning Outcomes: CS Core: 1\\. Prepare a\npresentation that explains to first year students the basic concepts of\nalgorithmic complexity including best, average, and worst-case algorithm\nbehavior, Big- O, Omega, and Theta notations, complexity classes, time and\nspace tradeoffs, empirical measurement, and impact on practical problems. 2\\.\nUsing examples, explain each of the foundational complexity classes in this\nunit. 3\\. For each foundational complexity class in this unit, explain an\nalgorithm that demonstrates the associated runtime complexity. 4\\. For each\nalgorithm in the AL-Foundational unit, explain its runtime complexity class\nand why it belongs to this class. 5\\. Informally evaluate the foundational\ncomplexity class of simple algorithms. 6\\. Given a problem to program for\nwhich there may be several algorithmic approaches, evaluate them and determine\nwhich are feasible, and select one that is optimal in implementation and run-\ntime behavior. 7\\. Develop empirical studies to determine and validate\nhypotheses about the runtime complexity of various algorithms by running\nalgorithms on input of various sizes and comparing actual performance to the\ntheoretical analysis. 8\\. Explain examples that illustrate time-space\ntradeoffs of algorithms. 9\\. Explain how tree balance affects the efficiency\nof binary search tree operations. 10\\. Explain to a non-technical audience the\nsignificance of tractable versus intractable algorithms using an intuitive\nexplanation of Big-O complexity. 11\\. Explain the significance of NP-\nCompleteness. 12\\. Explain how NP-Hard is a lower bound and NP is an upper\nbound for NP-Completeness. 13\\. Explain examples of NP-complete problems. KA\nCore: 14\\. Use recurrence relations to evaluate the time complexity of\nrecursively defined algorithms. 15\\. Apply elementary recurrence relations\nusing a form of the Master Theorem. 16\\. Apply Big-O notation to give upper\ncase bounds on time/space complexity of algorithms. 17\\. Explain the Cook-\nLevin Theorem and the NP-Completeness of SAT. 93 18\\. Explain the classes P\nand NP. 19\\. Prove that a problem is NP-Complete by reducing a classic known\nNP-C problem to it (e.g., 3SAT and Clique). 20\\. Explain the P-space class and\nits relation to the EXP class.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/6fd6333c76d4d3cd8f7f75f5e4dc1a14b7693fa6036d5c6311ae24055fca194d> .
_:Nec887e2129f7459688dd8cbee7e85e25 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/6fd6333c76d4d3cd8f7f75f5e4dc1a14b7693fa6036d5c6311ae24055fca194d> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/6fd6333c76d4d3cd8f7f75f5e4dc1a14b7693fa6036d5c6311ae24055fca194d> .
_:Nec887e2129f7459688dd8cbee7e85e25 <http://schema.org/explain> "The lecture covers basic concepts but lacks depth on advanced topics like NP-completeness and asymptotic notations." <http://groq.org/6fd6333c76d4d3cd8f7f75f5e4dc1a14b7693fa6036d5c6311ae24055fca194d> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/has_schema_type> _:Nec887e2129f7459688dd8cbee7e85e25 <http://groq.org/6fd6333c76d4d3cd8f7f75f5e4dc1a14b7693fa6036d5c6311ae24055fca194d> .
_:Nec887e2129f7459688dd8cbee7e85e25 <http://schema.org/answer> "0" <http://groq.org/6fd6333c76d4d3cd8f7f75f5e4dc1a14b7693fa6036d5c6311ae24055fca194d> .
_:N66df7ad02aca47139ff9727a66a2e38b <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-Foundational_Foundational_Data_Structures_and_Algorithms.txt> <http://faiss.org/c5049f1045f7b9adc71ae4e7e1e4160981adc1023a8d27f73579e180811c2174> .
_:N0b5fceda7dc9456db7addee08c89b0aa <http://example.org/has_chunk> ". (See also: AI-LRR)\n13. Integration with other programming paradigms such as object-oriented programming.\n14. Advance programming constructs such as difference-lists, creating user defined data structures, set\nof, etc.\nIllustrative learning outcomes:\nKA Core:\n1. Use a logic language to implement a conventional algorithm.\n2. Use a logic language to implement an algorithm employing implicit search using clauses, relations,\nand cuts.\n3" <http://faiss.org/c5049f1045f7b9adc71ae4e7e1e4160981adc1023a8d27f73579e180811c2174> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/is_aligned_with> _:N0b5fceda7dc9456db7addee08c89b0aa <http://faiss.org/c5049f1045f7b9adc71ae4e7e1e4160981adc1023a8d27f73579e180811c2174> .
_:N0b5fceda7dc9456db7addee08c89b0aa <http://example.org/has_score> "0.67598915"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/c5049f1045f7b9adc71ae4e7e1e4160981adc1023a8d27f73579e180811c2174> .
_:N0b5fceda7dc9456db7addee08c89b0aa <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Logic_Logic_Programming.txt> <http://faiss.org/c5049f1045f7b9adc71ae4e7e1e4160981adc1023a8d27f73579e180811c2174> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/is_aligned_with> _:N9a60222dd9ef458a870de55fa7f96a64 <http://faiss.org/c5049f1045f7b9adc71ae4e7e1e4160981adc1023a8d27f73579e180811c2174> .
_:N66df7ad02aca47139ff9727a66a2e38b <http://example.org/has_chunk> "AL-Foundational: Foundational Data Structures and Algorithms\nCS Core: (See also: SDF-Data-Structures, SDF-Algorithms)\n1. Abstract Data Type (ADT) and operations on an ADT (See also: FPL-Types)\na. Dictionary operations (insert, delete, find)\n2. Arrays\na. Numeric vs non-numeric, character strings\nb. Single (vector) vs multidimensional (matrix)\n3. Records/Structs/Tuples and Objects (See also: FPL-OOP)\n4. Linked lists (for historical reasons)\na. Single vs Double and Linear vs Circular\n5. Stacks\n6" <http://faiss.org/c5049f1045f7b9adc71ae4e7e1e4160981adc1023a8d27f73579e180811c2174> .
_:N9a60222dd9ef458a870de55fa7f96a64 <http://example.org/has_score> "0.68250453"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/c5049f1045f7b9adc71ae4e7e1e4160981adc1023a8d27f73579e180811c2174> .
<http://example.org/faiss> <http://example.org/input> "Label: Algorithmique et Structures de données 2 Objectif: (résultats d'apprentissage)\ndonnées (itératifs et récursifs) Course content: Structures de données non-linéaires associatives (table associative, ensemble, classe-union) Course name: http://example.org/course/UE_XLG4IU010" <http://faiss.org/c5049f1045f7b9adc71ae4e7e1e4160981adc1023a8d27f73579e180811c2174> .
_:N9a60222dd9ef458a870de55fa7f96a64 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Discrete_Discrete_Mathematics.txt> <http://faiss.org/c5049f1045f7b9adc71ae4e7e1e4160981adc1023a8d27f73579e180811c2174> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/is_aligned_with> _:N66df7ad02aca47139ff9727a66a2e38b <http://faiss.org/c5049f1045f7b9adc71ae4e7e1e4160981adc1023a8d27f73579e180811c2174> .
_:N66df7ad02aca47139ff9727a66a2e38b <http://example.org/has_score> "0.68500286"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/c5049f1045f7b9adc71ae4e7e1e4160981adc1023a8d27f73579e180811c2174> .
_:N9a60222dd9ef458a870de55fa7f96a64 <http://example.org/has_chunk> "MSF-Discrete: Discrete Mathematics\nCS Core:\n1. Sets, relations, functions, cardinality\n2. Recursive mathematical definitions\n3. Proof techniques (induction, proof by contradiction)\n4. Permutations, combinations, counting, pigeonhole principle\n5. Modular arithmetic\n6. Logic: truth tables, connectives (operators), inference rules, formulas, normal forms, simple\npredicate logic\n7. Graphs: basic definitions\n8. Order notation\nIllustrative Learning Outcomes:\nCS Core:\n1" <http://faiss.org/c5049f1045f7b9adc71ae4e7e1e4160981adc1023a8d27f73579e180811c2174> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/has_schema_type> _:N190a57ab3d1e47b283cc7a273533637c <http://groq.org/496a8b9bab081f1b6dec10796ece64c40edebb6382430527f8948e1246f1935a> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU030</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/496a8b9bab081f1b6dec10796ece64c40edebb6382430527f8948e1246f1935a> .
_:N190a57ab3d1e47b283cc7a273533637c <http://schema.org/explain> "Lecture focuses on teaching methods, not technical platform/programming details in KU." <http://groq.org/496a8b9bab081f1b6dec10796ece64c40edebb6382430527f8948e1246f1935a> .
_:N190a57ab3d1e47b283cc7a273533637c <http://schema.org/answer> "0" <http://groq.org/496a8b9bab081f1b6dec10796ece64c40edebb6382430527f8948e1246f1935a> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU030" <http://groq.org/496a8b9bab081f1b6dec10796ece64c40edebb6382430527f8948e1246f1935a> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/496a8b9bab081f1b6dec10796ece64c40edebb6382430527f8948e1246f1935a> .
_:N190a57ab3d1e47b283cc7a273533637c <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/496a8b9bab081f1b6dec10796ece64c40edebb6382430527f8948e1246f1935a> .
_:N502fb5894d3844219154d3dceb092039 <http://schema.org/explain> "The lecture does not cover the specific technical topics outlined in the Knowledge Unit." <http://groq.org/eb739977e1f7860d231e4474a883619f8618ae3f6da02ca2515afe31ec2a2756> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/eb739977e1f7860d231e4474a883619f8618ae3f6da02ca2515afe31ec2a2756> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU030" <http://groq.org/eb739977e1f7860d231e4474a883619f8618ae3f6da02ca2515afe31ec2a2756> .
_:N502fb5894d3844219154d3dceb092039 <http://schema.org/answer> "0" <http://groq.org/eb739977e1f7860d231e4474a883619f8618ae3f6da02ca2515afe31ec2a2756> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/has_schema_type> _:N502fb5894d3844219154d3dceb092039 <http://groq.org/eb739977e1f7860d231e4474a883619f8618ae3f6da02ca2515afe31ec2a2756> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU030</page1>\n        <page2>Pages: 150-151 HOURS CS Core = 3 KA Core = 2 GIT-Fundamentals: Fundamental\nConcepts CS Core: 1\\. Overview of graphics and visualization. 2\\. Basic\ngraphics pipeline architecture. 3\\. 2D and 3D transformations. 4\\.\nRasterization and rendering techniques. 5\\. Fundamental shading models. KA\nCore: 6\\. Advanced rendering techniques. 7\\. Applications of visualization in\ndifferent fields. 8\\. Interaction methods for graphical environments.\nIllustrative Learning Outcomes: 1\\. Explain the graphics rendering pipeline.\n2\\. Differentiate between rasterization and ray tracing. 3\\. Apply\ntransformations to 2D and 3D models.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/eb739977e1f7860d231e4474a883619f8618ae3f6da02ca2515afe31ec2a2756> .
_:N502fb5894d3844219154d3dceb092039 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/eb739977e1f7860d231e4474a883619f8618ae3f6da02ca2515afe31ec2a2756> .
_:Nf2d7c9558fcb45b394a5ff6d0687b47a <http://schema.org/explain> "The lecture covers teaching methods in English, not formal methods in software engineering." <http://groq.org/60c2d4b150df41fd6df9d1c785d4c7f755462e12bd55cc529e36b5bb25272e9a> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3AU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/60c2d4b150df41fd6df9d1c785d4c7f755462e12bd55cc529e36b5bb25272e9a> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/60c2d4b150df41fd6df9d1c785d4c7f755462e12bd55cc529e36b5bb25272e9a> .
_:Nf2d7c9558fcb45b394a5ff6d0687b47a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/60c2d4b150df41fd6df9d1c785d4c7f755462e12bd55cc529e36b5bb25272e9a> .
_:Nf2d7c9558fcb45b394a5ff6d0687b47a <http://schema.org/answer> "0" <http://groq.org/60c2d4b150df41fd6df9d1c785d4c7f755462e12bd55cc529e36b5bb25272e9a> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3AU010" <http://groq.org/60c2d4b150df41fd6df9d1c785d4c7f755462e12bd55cc529e36b5bb25272e9a> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/has_schema_type> _:Nf2d7c9558fcb45b394a5ff6d0687b47a <http://groq.org/60c2d4b150df41fd6df9d1c785d4c7f755462e12bd55cc529e36b5bb25272e9a> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/has_schema_type> _:Ne71a3bc717ca45518e2305cea0d96921 <http://groq.org/9eef467cb121fd6ca8204c9a07156a5501056b3c0d01c6a892d8746866f6de76> .
_:Ne71a3bc717ca45518e2305cea0d96921 <http://schema.org/explain> "The lecture covers topics such as formal semantics, axiomatic, operational, and denotational semantics, which are all mentioned in the KU." <http://groq.org/9eef467cb121fd6ca8204c9a07156a5501056b3c0d01c6a892d8746866f6de76> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU020" <http://groq.org/9eef467cb121fd6ca8204c9a07156a5501056b3c0d01c6a892d8746866f6de76> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Langages et automates Objectif: (résultats d'apprentissage)\n5. Course content: • Langages algébriques\n- Grammaire algébrique\n- Arbre de dérivation\n- Automates à pile\n• Hiérarchie de Chomsky\n- Classification des grammaires;\n- Algorithmes de reconnaissance pour les grammaires de type 1 et 2\n• Analyse lexicale et syntaxique\n- TP de flex et bison Course name: http://example.org/course/UE_XLG4IU020</page1>\n        <page2>Pages: 145-146 HOURS CS Core = 0 KA Core = 0 FPL-Formalism: Formal Semantics\nNon-core: 1\\. Syntax vs semantics 2\\. Approaches to semantics: axiomatic,\noperational, denotational, type-based 3\\. Axiomatic semantics of abstract\nconstructs such as assignment, selection, iteration using precondition, post-\nconditions, and loop invariant 4\\. Operational semantics analysis of abstract\nconstructs and sequence of such as assignment, expression evaluation,\nselection, iteration using environment and store a. Symbolic execution b.\nConstraint checkers 5\\. Denotational semantics a. Lambda Calculus. (See also:\nAL-Models, FPL-Functional) 6\\. Proofs by induction over language semantics 7\\.\nFormal definitions and proofs for type systems (See also: FPL-Types) a.\nPropositions as types (implication as a function, conjunction as a product,\ndisjunction as a sum) b. Dependent types (universal quantification as\ndependent function, existential quantification as dependent product) c.\nParametricity Illustrative learning outcomes: Non-core: 1\\. Construct formal\nsemantics for a small language. 2\\. Write a lambda-calculus program and show\nits evaluation to a normal form. 3\\. Discuss the different approaches of\noperational, denotational, and axiomatic semantics. 4\\. Use induction to prove\nproperties of all programs in a language. 5\\. Use induction to prove\nproperties of all programs in a language that is well-typed according to a\nformally defined type system. 6\\. Use parametricity to establish the behavior\nof code given only its type.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/9eef467cb121fd6ca8204c9a07156a5501056b3c0d01c6a892d8746866f6de76> .
_:Ne71a3bc717ca45518e2305cea0d96921 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/9eef467cb121fd6ca8204c9a07156a5501056b3c0d01c6a892d8746866f6de76> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/9eef467cb121fd6ca8204c9a07156a5501056b3c0d01c6a892d8746866f6de76> .
_:Ne71a3bc717ca45518e2305cea0d96921 <http://schema.org/answer> "1" <http://groq.org/9eef467cb121fd6ca8204c9a07156a5501056b3c0d01c6a892d8746866f6de76> .
_:Nfa2d6ceb34834c03ad9186d801e7a4a8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/29d9939d5bc376a8af15e82d7577f468d349f888118e22f1a8ae307d1e299a8a> .
_:Nfa2d6ceb34834c03ad9186d801e7a4a8 <http://schema.org/answer> "1" <http://groq.org/29d9939d5bc376a8af15e82d7577f468d349f888118e22f1a8ae307d1e299a8a> .
_:Nfa2d6ceb34834c03ad9186d801e7a4a8 <http://schema.org/explain> "The lecture covers a significant portion of the Knowledge Unit, including topics such as lambda expressions, effect-free programming, and higher-order functions, which are all core components of the KU." <http://groq.org/29d9939d5bc376a8af15e82d7577f468d349f888118e22f1a8ae307d1e299a8a> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Optimisation 1 et Calcul integral Objectif: (résultats d'apprentissage)\n• Course content: • Course name: http://example.org/course/UE_XLG4MU050</page1>\n        <page2>Pages: 131-132-133 HOURS CS Core = 4 KA Core = 3 FPL-Functional: Functional\nProgramming CS Core: 1\\. Lambda expressions and evaluation: (See also: AL-\nModels, FPL-Formalism) a. Variable binding and scope rules. (See also: SDF-\nFundamentals) b. Parameter-passing. (See also: SDF-Fundamentals) c. Nested\nlambda expressions and reduction order. 2\\. Effect-free programming: a.\nFunction calls have no side effects, facilitating compositional reasoning. b.\nImmutable variables and data copying vs reduction. c. Use of recursion vs\nloops vs pipelining (map/reduce). 3\\. Processing structured data (e.g., trees)\nvia functions with cases for each data variant: a. Functions defined over\ncompound data in terms of functions applied to the constituent pieces. b.\nPersistent data structures. 4\\. Using higher-order functions (taking,\nreturning, and storing functions). KA Core: 5\\. Metaprogramming and\nreflection. 6\\. Function closures (functions using variables in the enclosing\nlexical environment). a. Basic meaning and definition - creating closures at\nrun-time by capturing the environment. b. Canonical idioms: call-backs,\narguments to iterators, reusable code via function arguments. c. Using a\nclosure to encapsulate data in its environment. d. Delayed versus eager\nevaluation. Non-core: 7\\. Graph reduction machine and call-by-need. 8\\.\nImplementing delayed evaluation. 9\\. Integration with logic programming\nparadigm using concepts such as equational logic, narrowing, residuation and\nsemantic unification. (See also: FPL-Logic) 10\\. Integration with other\nprogramming paradigms such as imperative and object-oriented. Illustrative\nlearning outcomes: CS Core: 1\\. Develop basic algorithms that avoid assigning\nto mutable states or considering reference equality. 2\\. Develop useful\nfunctions that take and return other functions. 3\\. Compare and contrast how\ncomputational solutions to a problem differ in procedural, functional, and\nobject-oriented approaches. 4\\. Compare and contrast mechanisms to define and\nprotect data elements within procedural, functional, and object-oriented\napproaches. KA Core: 5\\. Explain a simple example of lambda expression being\nimplemented using a virtual machine, such as a SECD machine, showing storage\nand reclaim of the environment. 6\\. Correctly interpret variables and lexical\nscope in a program using function closures. 7\\. Use functional encapsulation\nmechanisms such as closures and modular interfaces. 8\\. Compare and contrast\nstateful vs stateless execution. 9\\. Define and use iterators and other\noperations on aggregates, including operations that take functions as\narguments, in multiple programming languages, selecting the most natural\nidioms for each language. (See also: FPL-OOP) Non-core: 10\\. Illustrate graph\nreduction using a l-expression using a shared subexpression. 11\\. Illustrate\nthe execution of a simple nested l-expression using an abstract machine, such\nas an ABC machine. 12\\. Illustrate narrowing, residuation, and semantic\nunification using simple illustrative examples. 13\\. Illustrate the\nconcurrency constructs using simple programming examples of known concepts\nsuch as a buffer being read and written concurrently or sequentially. (See\nalso: FPL-OOP)</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/29d9939d5bc376a8af15e82d7577f468d349f888118e22f1a8ae307d1e299a8a> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/has_schema_type> _:Nfa2d6ceb34834c03ad9186d801e7a4a8 <http://groq.org/29d9939d5bc376a8af15e82d7577f468d349f888118e22f1a8ae307d1e299a8a> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/29d9939d5bc376a8af15e82d7577f468d349f888118e22f1a8ae307d1e299a8a> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4MU050" <http://groq.org/29d9939d5bc376a8af15e82d7577f468d349f888118e22f1a8ae307d1e299a8a> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/is_aligned_with> _:Nbf9b6a3fd18a494493f2b31ec72d0f74 <http://faiss.org/df15c5f52cc888f8092a5b1a2a5bbdd2da219b6148a5ede2126cb4b2e927d79d> .
_:Nbf9b6a3fd18a494493f2b31ec72d0f74 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nPDC-Synchronization and Concurrency: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of PDC-Synchronization and Concurrency.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/df15c5f52cc888f8092a5b1a2a5bbdd2da219b6148a5ede2126cb4b2e927d79d> .
_:Nd3f099c97a8347f59994cf464916b9ef <http://example.org/has_chunk> ". Language translation pipeline: syntax analysis, parsing, optional type-checking, translation/code\ngeneration and optimization, linking, loading, execution\nKA Core:\n9. Run-time representation of core language constructs such as objects (method tables) and functions\nthat can be passed as parameters to and returned from functions (closures)\n10. Secure compiler development (See also: SEC-Foundations, SEC-Coding)\nIllustrative learning outcomes:\nCS Core:\n1" <http://faiss.org/df15c5f52cc888f8092a5b1a2a5bbdd2da219b6148a5ede2126cb4b2e927d79d> .
_:N0ea3d6eaecc341b4ac1442d7acc5d5b3 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Scripting_Shell_Scripting.txt> <http://faiss.org/df15c5f52cc888f8092a5b1a2a5bbdd2da219b6148a5ede2126cb4b2e927d79d> .
_:Nbf9b6a3fd18a494493f2b31ec72d0f74 <http://example.org/has_score> "0.6419754"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/df15c5f52cc888f8092a5b1a2a5bbdd2da219b6148a5ede2126cb4b2e927d79d> .
_:N0ea3d6eaecc341b4ac1442d7acc5d5b3 <http://example.org/has_score> "0.6421694"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/df15c5f52cc888f8092a5b1a2a5bbdd2da219b6148a5ede2126cb4b2e927d79d> .
_:Nd3f099c97a8347f59994cf464916b9ef <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Translation_Language_Translation_and_Execution.txt> <http://faiss.org/df15c5f52cc888f8092a5b1a2a5bbdd2da219b6148a5ede2126cb4b2e927d79d> .
_:Nd3f099c97a8347f59994cf464916b9ef <http://example.org/has_score> "0.6486707"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/df15c5f52cc888f8092a5b1a2a5bbdd2da219b6148a5ede2126cb4b2e927d79d> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/is_aligned_with> _:N0ea3d6eaecc341b4ac1442d7acc5d5b3 <http://faiss.org/df15c5f52cc888f8092a5b1a2a5bbdd2da219b6148a5ede2126cb4b2e927d79d> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/is_aligned_with> _:Nd3f099c97a8347f59994cf464916b9ef <http://faiss.org/df15c5f52cc888f8092a5b1a2a5bbdd2da219b6148a5ede2126cb4b2e927d79d> .
_:Nbf9b6a3fd18a494493f2b31ec72d0f74 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Parallel_and_Distributed_Computing_PDC/PDC-Synchronization_and_Concurrency.txt> <http://faiss.org/df15c5f52cc888f8092a5b1a2a5bbdd2da219b6148a5ede2126cb4b2e927d79d> .
_:N0ea3d6eaecc341b4ac1442d7acc5d5b3 <http://example.org/has_chunk> ". Regular expressions (See also: AL-Models)\n8. Programs and processes (See also: OS-Process)\n9. Workflow\nIllustrative learning outcomes:\nCS Core:\n1. Create and execute automated scripts to manage various system tasks.\n2. Solve various text processing problems through scripting." <http://faiss.org/df15c5f52cc888f8092a5b1a2a5bbdd2da219b6148a5ede2126cb4b2e927d79d> .
<http://example.org/faiss> <http://example.org/input> "Label: Systèmes d'exploitation Objectif: (résultats d'apprentissage)\nsynchronisation/communication (Application)\n• Etre capable d'utiliser les mécanismes de synchronisation usuels sous Linux (sémaphores,\nmutexes, signaux) (Application)\n• Comprendre le principe de mémoire virtuelle (Initiation)\n• Savoir gérer les entrées/sorties sous Linux (Initiation) Course content: par le système d'exploitation y sont exposées : comment les processus se partagent-ils l'accès au\nprocesseur ? Comment se synchronisent-ils et quels mécanismes leur permettent d'échanger des\ndonnées ? Comment sont gérés la mémoire et les entrées/sorties ? Course name: http://example.org/course/UE_XLG4IU030" <http://faiss.org/df15c5f52cc888f8092a5b1a2a5bbdd2da219b6148a5ede2126cb4b2e927d79d> .
_:Ncb9a95680ed644d0a43b9152235457de <http://schema.org/answer> "1" <http://groq.org/59c99dfb7aa88bbfd074688f8fc69582f60b6c5bff588092173d479a68743ad5> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Analyse et Algebre lineaire 2 Objectif: (résultats d'apprentissage) • Course content: • Course name: http://example.org/course/UE_XLG3MU030</page1>\n        <page2>Pages: 178-179 HOURS CS Core = 1 KA Core = 2 HCI-Evaluation: Evaluating the\nDesign CS Core: 1\\. Methods for evaluation with users a. Formative (e.g.,\nneeds-finding, exploratory analysis) and summative assessment (e.g.,\nfunctionality and usability testing) b. Elements to evaluate (e.g., utility,\nefficiency, learnability, user satisfaction, affective elements such as\npleasure and engagement) c. Understanding ethical approval requirements before\nengaging in user research (See also: SETools, SEP-Ethical-Analysis, SEP-\nSecurity, SEP-Privacy, SEP-Professional-Ethics) KA Core: 2\\. Methods for\nevaluation with users (See also: SE-Validation) a. Qualitative methods\n(qualitative coding and thematic analysis) b. Quantitative methods\n(statistical tests) c. Mixed methods (e.g., observation, think-aloud,\ninterview, survey, experiment) d. Presentation requirements (e.g., reports,\npersonas) e. User-centered testing f. Heuristic evaluation g. Challenges and\nshortcomings to effective evaluation (e.g., sampling, generalization) 3\\.\nStudy planning a. How to set study goals b. Hypothesis design c. Approvals\nfrom Institutional Research Boards and ethics committees (See also: SEP-\nEthicalAnalysis, SEP-Security, SEP-Privacy) d. How to pre-register a study e.\nWithin-subjects vs between-subjects design 4\\. Implications and impacts of\ndesign with respect to the environment, material, society, security, privacy,\nethics, and broader impacts. (See also: SEC-Foundations) a. The environment b.\nMaterial c. Society d. Security e. Privacy f. Ethics g. Broader impacts Non-\ncore: 5\\. Techniques and tools for quantitative analysis a. Statistical\npackages b. Visualization tools c. Statistical tests (e.g., ANOVA, t-tests,\npost-hoc analysis, parametric vs non-parametric tests) d. Data exploration and\nvisual analytics; how to calculate effect size. 6\\. Data management a. Data\nstorage and data sharing (open science) b. Sensitivity and identifiability.\nIllustrative Learning Outcomes: CS Core: 1\\. Discuss the differences between\nformative and summative assessment and their role in evaluating design KA\nCore: 2\\. Select appropriate formative or summative evaluation methods at\ndifferent points throughout the development of a design. 3\\. Discuss the\nbenefits of using both qualitative and quantitative methods for evaluation.\n4\\. Evaluate the implications and broader impacts of a given design. 5\\. Plan\na usability evaluation for a given user interface, and justify its study\ngoals, hypothesis design, and study design. 6\\. Conduct a usability evaluation\nof a given user interface and draw defensible conclusions given the study\ndesign. Non-core: 7\\. Select and run appropriate statistical tests on provided\nstudy data to test for significance in the results. 8\\. Pre-register a study\ndesign, with planned statistical tests</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/59c99dfb7aa88bbfd074688f8fc69582f60b6c5bff588092173d479a68743ad5> .
_:Ncb9a95680ed644d0a43b9152235457de <http://schema.org/explain> "The lecture covers the majority of the KU's topics, including evaluation methods, study planning, and implications of design, but does not delve into specific statistical tests and data management." <http://groq.org/59c99dfb7aa88bbfd074688f8fc69582f60b6c5bff588092173d479a68743ad5> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/has_schema_type> _:Ncb9a95680ed644d0a43b9152235457de <http://groq.org/59c99dfb7aa88bbfd074688f8fc69582f60b6c5bff588092173d479a68743ad5> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3MU030" <http://groq.org/59c99dfb7aa88bbfd074688f8fc69582f60b6c5bff588092173d479a68743ad5> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/59c99dfb7aa88bbfd074688f8fc69582f60b6c5bff588092173d479a68743ad5> .
_:Ncb9a95680ed644d0a43b9152235457de <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/59c99dfb7aa88bbfd074688f8fc69582f60b6c5bff588092173d479a68743ad5> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/is_aligned_with> _:N47db049185af494caa2ce561f8c87abb <http://faiss.org/f2c99e79335c41a95918a066894878fae6d88edcb696b33393f1b47739c1d13c> .
_:Naa89a4bf299b48a386b92232b2e27c8c <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Date_Management_DM/DM-Querying_Query_Construction.txt> <http://faiss.org/f2c99e79335c41a95918a066894878fae6d88edcb696b33393f1b47739c1d13c> .
_:Naa89a4bf299b48a386b92232b2e27c8c <http://example.org/has_chunk> "DM-Querying: Query Construction\nCS Core:\n1. SQL Query Formation\na. Interactive SQL execution\nb. Programmatic execution of an SQL query\nKA Core:\n2. Relational Algebra\n3. SQL\na. Data definition including integrity and other constraint specifications\nb. Update sublanguage\nNon-core:\n4. Relational Calculus\n5. QBE and 4th-generation environments\n6. Different ways to invoke non-procedural queries in conventional languages\n7. Introduction to other major query languages (e.g., XPATH, SPARQL)\n8" <http://faiss.org/f2c99e79335c41a95918a066894878fae6d88edcb696b33393f1b47739c1d13c> .
<http://example.org/faiss> <http://example.org/input> "Label: Bases de données Objectif: (résultats d'apprentissage)\n- Introduction à la modélisation Merise\n- Modèle relationnel\n- Algèbre relationnelle et SQL Course content: - Passage au relationnel\n- Définition et interrogation d'une base en sql\n- Introduction au modèle olap Course name: http://example.org/course/UE_XLG4IU040" <http://faiss.org/f2c99e79335c41a95918a066894878fae6d88edcb696b33393f1b47739c1d13c> .
_:N47db049185af494caa2ce561f8c87abb <http://example.org/has_chunk> "DM-Modeling: Data Modeling\nCS Core:\n1. Data modeling (See also: SE-Requirements)\n2. Relational data model (See also: MSF-Discrete)\nKA Core:\n3. Conceptual models (e.g., entity-relationship, UML diagrams)\n4. Semi-structured data models (expressed using DTD, XML, or JSON Schema, for example)\nNon-core:\n5. Spreadsheet models\n6. Object-oriented models (See also: FPL-OOP)\na. GraphQL\n7. New features in SQL\n8. Specialized Data Modeling topics\na. Time series data (aggregation, join)\nb. Graph data (link traversal)\nc" <http://faiss.org/f2c99e79335c41a95918a066894878fae6d88edcb696b33393f1b47739c1d13c> .
_:N47db049185af494caa2ce561f8c87abb <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Date_Management_DM/DM-Modeling_Data_Modeling.txt> <http://faiss.org/f2c99e79335c41a95918a066894878fae6d88edcb696b33393f1b47739c1d13c> .
_:N42c958029e1645f19845f1977fef8bc3 <http://example.org/has_score> "0.6675879"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/f2c99e79335c41a95918a066894878fae6d88edcb696b33393f1b47739c1d13c> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/is_aligned_with> _:Naa89a4bf299b48a386b92232b2e27c8c <http://faiss.org/f2c99e79335c41a95918a066894878fae6d88edcb696b33393f1b47739c1d13c> .
_:N47db049185af494caa2ce561f8c87abb <http://example.org/has_score> "0.6757257"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/f2c99e79335c41a95918a066894878fae6d88edcb696b33393f1b47739c1d13c> .
_:N42c958029e1645f19845f1977fef8bc3 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Date_Management_DM/DM-Relational_Relational_Databases.txt> <http://faiss.org/f2c99e79335c41a95918a066894878fae6d88edcb696b33393f1b47739c1d13c> .
_:Naa89a4bf299b48a386b92232b2e27c8c <http://example.org/has_score> "0.7032179"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/f2c99e79335c41a95918a066894878fae6d88edcb696b33393f1b47739c1d13c> .
_:N42c958029e1645f19845f1977fef8bc3 <http://example.org/has_chunk> "DM-Relational: Relational Databases\nCS Core:\n1. Entity and referential integrity: Candidate key, superkeys\n2. Relational database design\nKA Core:\n3. Mapping conceptual schema to a relational schema\n4. Physical database design: file and storage structures (See also: OS-Files)\n5. Introduction to Functional dependency theory\n6. Normalization Theory\na. Decomposition of a schema; lossless-join, and dependency-preservation properties of a\ndecomposition\nb. Normal forms (BCNF)\nc" <http://faiss.org/f2c99e79335c41a95918a066894878fae6d88edcb696b33393f1b47739c1d13c> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/is_aligned_with> _:N42c958029e1645f19845f1977fef8bc3 <http://faiss.org/f2c99e79335c41a95918a066894878fae6d88edcb696b33393f1b47739c1d13c> .
_:Nac11f7f83fc0408dac01afa82f5b6f0c <http://schema.org/answer> "1" <http://groq.org/833efcdef05da641d71d58af852b3a471da9f009d646ed56dbcd2ddcd7368c8f> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Enjeux de la transition écologique Objectif: (résultats d'apprentissage) Course content: Programme des 9 séances en ligne (d’environ 1h30 de travail chacune) : Course name: http://example.org/course/UE_XLG3TU020</page1>\n        <page2>Pages: 146-147 HOURS CS Core = 0 KA Core = 0 FPL-Design: Design Principles of\nProgramming Languages Non-core: 1\\. Language design principles a. Simplicity\nb. Security (See also: SEC-Coding) c. Fast translation d. Efficient object\ncode e. Orthogonality f. Readability g. Completeness h. Implementation\nstrategies 2\\. Designing a language to fit a specific domain or problem 3\\.\nInteroperability between programming languages 4\\. Language portability 5\\.\nFormal description of a programming language 6\\. Green computing principles\n(See also: SEP-Sustainability) Illustrative Learning Outcomes: Non-core: 1\\.\nUnderstand what constitutes good language design and apply that knowledge to\nevaluate a real programming language.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/833efcdef05da641d71d58af852b3a471da9f009d646ed56dbcd2ddcd7368c8f> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/has_schema_type> _:Nac11f7f83fc0408dac01afa82f5b6f0c <http://groq.org/833efcdef05da641d71d58af852b3a471da9f009d646ed56dbcd2ddcd7368c8f> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU020" <http://groq.org/833efcdef05da641d71d58af852b3a471da9f009d646ed56dbcd2ddcd7368c8f> .
_:Nac11f7f83fc0408dac01afa82f5b6f0c <http://schema.org/explain> "The lecture covers topics related to language design principles, such as simplicity, security, and readability, which align with the KU's objectives." <http://groq.org/833efcdef05da641d71d58af852b3a471da9f009d646ed56dbcd2ddcd7368c8f> .
_:Nac11f7f83fc0408dac01afa82f5b6f0c <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/833efcdef05da641d71d58af852b3a471da9f009d646ed56dbcd2ddcd7368c8f> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/833efcdef05da641d71d58af852b3a471da9f009d646ed56dbcd2ddcd7368c8f> .
_:N12203a85196c46e19c6f3fd10c37e1ef <http://schema.org/explain> "The lecture does not cover the technical content of the KU." <http://groq.org/b888c27ebf144c9987fb74f0037edcd145bb7d106df400a6b3db764eb9c1d7d6> .
_:N12203a85196c46e19c6f3fd10c37e1ef <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/b888c27ebf144c9987fb74f0037edcd145bb7d106df400a6b3db764eb9c1d7d6> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/b888c27ebf144c9987fb74f0037edcd145bb7d106df400a6b3db764eb9c1d7d6> .
_:N12203a85196c46e19c6f3fd10c37e1ef <http://schema.org/answer> "0" <http://groq.org/b888c27ebf144c9987fb74f0037edcd145bb7d106df400a6b3db764eb9c1d7d6> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU030" <http://groq.org/b888c27ebf144c9987fb74f0037edcd145bb7d106df400a6b3db764eb9c1d7d6> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/has_schema_type> _:N12203a85196c46e19c6f3fd10c37e1ef <http://groq.org/b888c27ebf144c9987fb74f0037edcd145bb7d106df400a6b3db764eb9c1d7d6> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU030</page1>\n        <page2>Pages: 150-151 HOURS CS Core = 3 KA Core = 2 GIT-Fundamentals: Fundamental\nConcepts CS Core: 1\\. Overview of graphics and visualization. 2\\. Basic\ngraphics pipeline architecture. 3\\. 2D and 3D transformations. 4\\.\nRasterization and rendering techniques. 5\\. Fundamental shading models. KA\nCore: 6\\. Advanced rendering techniques. 7\\. Applications of visualization in\ndifferent fields. 8\\. Interaction methods for graphical environments.\nIllustrative Learning Outcomes: 1\\. Explain the graphics rendering pipeline.\n2\\. Differentiate between rasterization and ray tracing. 3\\. Apply\ntransformations to 2D and 3D models.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/b888c27ebf144c9987fb74f0037edcd145bb7d106df400a6b3db764eb9c1d7d6> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU040" <http://groq.org/052ef166aa68e500d06bca5221c5cf349cf565ea5caef943578b857d96818605> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/has_schema_type> _:Nfc979b3d0cc049ab91ebe569a22e7c07 <http://groq.org/052ef166aa68e500d06bca5221c5cf349cf565ea5caef943578b857d96818605> .
_:Nfc979b3d0cc049ab91ebe569a22e7c07 <http://schema.org/answer> "0" <http://groq.org/052ef166aa68e500d06bca5221c5cf349cf565ea5caef943578b857d96818605> .
_:Nfc979b3d0cc049ab91ebe569a22e7c07 <http://schema.org/explain> "Lecture covers basics (relational model, SQL) but lacks depth on normalization theory, decomposition properties, and physical design details required by KU." <http://groq.org/052ef166aa68e500d06bca5221c5cf349cf565ea5caef943578b857d96818605> .
_:Nfc979b3d0cc049ab91ebe569a22e7c07 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/052ef166aa68e500d06bca5221c5cf349cf565ea5caef943578b857d96818605> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/052ef166aa68e500d06bca5221c5cf349cf565ea5caef943578b857d96818605> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Bases de données Objectif: (résultats d'apprentissage)\n- Introduction à la modélisation Merise\n- Modèle relationnel\n- Algèbre relationnelle et SQL Course content: - Passage au relationnel\n- Définition et interrogation d'une base en sql\n- Introduction au modèle olap Course name: http://example.org/course/UE_XLG4IU040</page1>\n        <page2>Pages: 117-118 HOURS CS Core = 1 KA Core = 3 DM-Relational: Relational\nDatabases CS Core: 1\\. Entity and referential integrity: Candidate key,\nsuperkeys 2\\. Relational database design KA Core: 3\\. Mapping conceptual\nschema to a relational schema 4\\. Physical database design: file and storage\nstructures (See also: OS-Files) 5\\. Introduction to Functional dependency\ntheory 6\\. Normalization Theory a. Decomposition of a schema; lossless-join,\nand dependency-preservation properties of a decomposition b. Normal forms\n(BCNF) c. Denormalization (for efficiency) Non-core: 7\\. Functional dependency\ntheory a. Closure of a set of attributes b. Canonical Cover 8\\. Normalization\ntheory a. Multi-valued dependency (4NF) b. Join dependency (PJNF, 5NF) c.\nRepresentation theory Illustrative Learning Outcomes: CS Core: 1\\. Describe\nthe defining characteristics behind the relational data model. 2\\. Comment on\nthe difference between a foreign key and a superkey. 3\\. Enumerate the\ndifferent types of integrity constraints. KA Core: 4\\. Compose a relational\nschema from a conceptual schema which contains 1:1, 1:n, and n:m\nrelationships. 5\\. Map appropriate file structure to relations and indices.\n6\\. Describe how functional dependency theory generalizes the notion of key.\n7\\. Defend a given decomposition as lossless and or dependency preserving. 8\\.\nDetect which normal form a given decomposition yields. 9\\. Comment on reasons\nfor denormalizing a relation.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/052ef166aa68e500d06bca5221c5cf349cf565ea5caef943578b857d96818605> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Optimisation 1 et Calcul integral Objectif: (résultats d'apprentissage)\n• Course content: • Course name: http://example.org/course/UE_XLG4MU050</page1>\n        <page2>Pages: 192-194 HOURS CS Core = 0 KA Core = 40 MSF-Calculus KA Core: 1\\.\nSequences, series, limits 2\\. Single-variable derivatives: definition,\ncomputation rules (chain rule etc.), derivatives of important functions,\napplications 3\\. Single-variable integration: definition, computation rules,\nintegrals of important functions, fundamental theorem of calculus, definite vs\nindefinite, applications (including in probability) 4\\. Parametric and polar\nrepresentations 5\\. Taylor series 6\\. Multivariate calculus: partial\nderivatives, gradient, chain-rule, vector valued functions, 7\\. Optimization:\nconvexity, global vs local minima, gradient descent, constrained optimization,\nand Lagrange multipliers. 8\\. Ordinary Differential Equations (ODEs):\ndefinition, Euler method, applications to simulation, Monte Carlo integration\n9\\. CS applications: gradient descent for machine learning, forward and\ninverse kinematics, applications of calculus to probability Note: the calculus\ntopics listed above are aligned with computer science goals rather than with\ntraditional calculus courses. For example, multivariate calculus is often a\ncourse by itself, but computer science undergraduates only need parts of it\nfor machine learning. Illustrative Learning Outcomes: KA Core: 1\\. Sequences,\nseries, limits a. Explain the difference between infinite sets and sequences.\nb. Explain the formal definition of a limit. c. Derive the limit for examples\nof sequences and series. d. Explain convergence and divergence. e. Apply\nL'Hospital's rule and other approaches to resolving limits. 2\\. Single-\nvariable derivatives: definition, computation rules (chain rule etc.),\nderivatives of important functions, applications a. Explain a derivative in\nterms of limits. b. Explain derivatives as functions. c. Perform elementary\nderivative calculations from limits. d. Apply sum, product, and quotient\nrules. e. Work through examples with important functions. 3\\. Single-variable\nintegration: definition, computation rules, integrals of important functions,\nfundamental theorem of calculus, definite vs indefinite, applications\n(including in probability) a. Explain the definitions of definite and\nindefinite integrals. b. Apply integration rules to examples with important\nfunctions. c. Explore the use of the fundamental theorem of calculus. d. Apply\nintegration to problems. 4\\. Parametric and polar representations a. Apply\nparametric representations of important curves. b. Apply polar\nrepresentations. 5\\. Taylor series a. Derive Taylor series for some important\nfunctions. b. Apply the Taylor series to approximations. 6\\. Multivariate\ncalculus: partial derivatives, gradient, chain-rule, vector valued functions,\napplications to optimization, convexity, global vs local minima. a. Compute\npartial derivatives and gradients. b. Work through examples with vector-valued\nfunctions with gradient notation. c. Explain applications to optimization. 7\\.\nODEs: definition, Euler method, applications to simulation a. Apply the Euler\nmethod to integration. b. Apply the Euler method to a single-variable\ndifferential equation. c. Apply the Euler method to multiple variables in an\nODE.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/ee020ab4ec7aac220585c579e9e431a1d29ffbe45d92cb9debbe83817066c2f8> .
_:Ne916e2df92ab4c19be692f0f3322dd36 <http://schema.org/explain> "Lecture focuses narrowly on optimization and integral calculus, while KU requires broader calculus topics (sequences, derivatives, ODEs, etc.) not explicitly covered." <http://groq.org/ee020ab4ec7aac220585c579e9e431a1d29ffbe45d92cb9debbe83817066c2f8> .
_:Ne916e2df92ab4c19be692f0f3322dd36 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/ee020ab4ec7aac220585c579e9e431a1d29ffbe45d92cb9debbe83817066c2f8> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/has_schema_type> _:Ne916e2df92ab4c19be692f0f3322dd36 <http://groq.org/ee020ab4ec7aac220585c579e9e431a1d29ffbe45d92cb9debbe83817066c2f8> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/ee020ab4ec7aac220585c579e9e431a1d29ffbe45d92cb9debbe83817066c2f8> .
_:Ne916e2df92ab4c19be692f0f3322dd36 <http://schema.org/answer> "0" <http://groq.org/ee020ab4ec7aac220585c579e9e431a1d29ffbe45d92cb9debbe83817066c2f8> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4MU050" <http://groq.org/ee020ab4ec7aac220585c579e9e431a1d29ffbe45d92cb9debbe83817066c2f8> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Optimisation 1 et Calcul integral Objectif: (résultats d'apprentissage)\n• Course content: • Course name: http://example.org/course/UE_XLG4MU050</page1>\n        <page2>Pages: 192-194 HOURS CS Core = 0 KA Core = 40 MSF-Calculus KA Core: 1\\.\nSequences, series, limits 2\\. Single-variable derivatives: definition,\ncomputation rules (chain rule etc.), derivatives of important functions,\napplications 3\\. Single-variable integration: definition, computation rules,\nintegrals of important functions, fundamental theorem of calculus, definite vs\nindefinite, applications (including in probability) 4\\. Parametric and polar\nrepresentations 5\\. Taylor series 6\\. Multivariate calculus: partial\nderivatives, gradient, chain-rule, vector valued functions, 7\\. Optimization:\nconvexity, global vs local minima, gradient descent, constrained optimization,\nand Lagrange multipliers. 8\\. Ordinary Differential Equations (ODEs):\ndefinition, Euler method, applications to simulation, Monte Carlo integration\n9\\. CS applications: gradient descent for machine learning, forward and\ninverse kinematics, applications of calculus to probability Note: the calculus\ntopics listed above are aligned with computer science goals rather than with\ntraditional calculus courses. For example, multivariate calculus is often a\ncourse by itself, but computer science undergraduates only need parts of it\nfor machine learning. Illustrative Learning Outcomes: KA Core: 1\\. Sequences,\nseries, limits a. Explain the difference between infinite sets and sequences.\nb. Explain the formal definition of a limit. c. Derive the limit for examples\nof sequences and series. d. Explain convergence and divergence. e. Apply\nL'Hospital's rule and other approaches to resolving limits. 2\\. Single-\nvariable derivatives: definition, computation rules (chain rule etc.),\nderivatives of important functions, applications a. Explain a derivative in\nterms of limits. b. Explain derivatives as functions. c. Perform elementary\nderivative calculations from limits. d. Apply sum, product, and quotient\nrules. e. Work through examples with important functions. 3\\. Single-variable\nintegration: definition, computation rules, integrals of important functions,\nfundamental theorem of calculus, definite vs indefinite, applications\n(including in probability) a. Explain the definitions of definite and\nindefinite integrals. b. Apply integration rules to examples with important\nfunctions. c. Explore the use of the fundamental theorem of calculus. d. Apply\nintegration to problems. 4\\. Parametric and polar representations a. Apply\nparametric representations of important curves. b. Apply polar\nrepresentations. 5\\. Taylor series a. Derive Taylor series for some important\nfunctions. b. Apply the Taylor series to approximations. 6\\. Multivariate\ncalculus: partial derivatives, gradient, chain-rule, vector valued functions,\napplications to optimization, convexity, global vs local minima. a. Compute\npartial derivatives and gradients. b. Work through examples with vector-valued\nfunctions with gradient notation. c. Explain applications to optimization. 7\\.\nODEs: definition, Euler method, applications to simulation a. Apply the Euler\nmethod to integration. b. Apply the Euler method to a single-variable\ndifferential equation. c. Apply the Euler method to multiple variables in an\nODE.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/43464ab7c90ec43aac0a6558df29f505d240442f30ae0a8919ad4fe3f4cbacc0> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/43464ab7c90ec43aac0a6558df29f505d240442f30ae0a8919ad4fe3f4cbacc0> .
_:Ncb57fd48e1a44ed5a8a7396fa933542b <http://schema.org/answer> "0" <http://groq.org/43464ab7c90ec43aac0a6558df29f505d240442f30ae0a8919ad4fe3f4cbacc0> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/has_schema_type> _:Ncb57fd48e1a44ed5a8a7396fa933542b <http://groq.org/43464ab7c90ec43aac0a6558df29f505d240442f30ae0a8919ad4fe3f4cbacc0> .
_:Ncb57fd48e1a44ed5a8a7396fa933542b <http://schema.org/explain> "The lecture does not cover a large subset of the KU." <http://groq.org/43464ab7c90ec43aac0a6558df29f505d240442f30ae0a8919ad4fe3f4cbacc0> .
_:Ncb57fd48e1a44ed5a8a7396fa933542b <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/43464ab7c90ec43aac0a6558df29f505d240442f30ae0a8919ad4fe3f4cbacc0> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4MU050" <http://groq.org/43464ab7c90ec43aac0a6558df29f505d240442f30ae0a8919ad4fe3f4cbacc0> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Programmation à Objets Objectif: (résultats d'apprentissage) Connaître les mécanismes d’héritage et de polymorphisme Course content: Classes abstraites Course name: http://example.org/course/UE_XLG3IU030</page1>\n        <page2>Pages: 130-131 HOURS CS Core = 4 + 1 (SDF) KA Core = 1 FPL-OOP: Object-\nOriented Programming CS Core: 1\\. Imperative programming as a subset of\nobject-oriented programming. 2\\. Object-oriented design: a. Decomposition into\nobjects carrying state and having behavior. b. Class-hierarchy design for\nmodeling. 3\\. Definition of classes: fields, methods, and constructors. (See\nalso: SDF-Fundamentals) 4\\. Subclasses, inheritance (including multiple\ninheritance), and method overriding. 5\\. Dynamic dispatch: definition of\nmethod-call. 6\\. Exception handling. (See also: SDF-Fundamentals, PDC-\nCoordination, SE-Construction) 7\\. Object-oriented idioms for encapsulation:\na. Privacy, data hiding, and visibility of class members. b. Interfaces\nrevealing only method signatures. c. Abstract base classes, traits and mixins.\n8\\. Dynamic vs static properties. 9\\. Composition vs inheritance. 10\\.\nSubtyping: a. Subtype polymorphism; implicit upcasts in typed languages. b.\nNotion of behavioral replacement: subtypes acting like supertype. c.\nRelationship between subtyping and inheritance. KA Core: 11\\. Collection\nclasses, iterators, and other common library components. 12\\. Metaprogramming\nand reflection. Illustrative Learning Outcomes: CS Core: 1\\. Enumerate the\ndifferences between imperative and object-oriented programming paradigms. 2\\.\nCompose a class through design, implementation, and testing to meet behavioral\nrequirements. 3\\. Build a simple class hierarchy utilizing subclassing that\nallows code to be reused for distinct subclasses. 4\\. Predict and validate\ncontrol flow in a program using dynamic dispatch. 5\\. Compare and contrast how\ncomputational solutions to a problem differ in procedural, functional, and\nobject-oriented approaches. 6\\. Compare and contrast mechanisms to define and\nprotect data elements within procedural, functional, and object-oriented\napproaches. 7\\. Compare and contrast the benefits and costs/impact of using\ninheritance (subclasses) and composition (specifically, how to base\ncomposition on higher order functions). 8\\. Explain the relationship between\nobject-oriented inheritance (code-sharing and overriding) and subtyping (the\nidea of a subtype being usable in a context that expects the supertype). 9\\.\nUse object-oriented encapsulation mechanisms such as interfaces and private\nmembers. 10\\. Define and use iterators and other operations on aggregates,\nincluding operations that take functions as arguments, in multiple programming\nlanguages, selecting the most natural idioms for each language. (See also:\nFPL-Functional) KA Core: 11\\. Use collection classes and iterators effectively\nto solve a problem.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/becfe67cf9384ee594f139e62b1d67874201a515ef0f59596a65817acfb074cc> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/has_schema_type> _:N7ba507551c6146dc88f1a298381715f7 <http://groq.org/becfe67cf9384ee594f139e62b1d67874201a515ef0f59596a65817acfb074cc> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU030" <http://groq.org/becfe67cf9384ee594f139e62b1d67874201a515ef0f59596a65817acfb074cc> .
_:N7ba507551c6146dc88f1a298381715f7 <http://schema.org/answer> "0" <http://groq.org/becfe67cf9384ee594f139e62b1d67874201a515ef0f59596a65817acfb074cc> .
_:N7ba507551c6146dc88f1a298381715f7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/becfe67cf9384ee594f139e62b1d67874201a515ef0f59596a65817acfb074cc> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/becfe67cf9384ee594f139e62b1d67874201a515ef0f59596a65817acfb074cc> .
_:N7ba507551c6146dc88f1a298381715f7 <http://schema.org/explain> "Lecture covers inheritance/polymorphism basics but lacks broader KU topics like dynamic dispatch, encapsulation details, composition vs inheritance, and subtyping relationships." <http://groq.org/becfe67cf9384ee594f139e62b1d67874201a515ef0f59596a65817acfb074cc> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 2 Objectif: (résultats d'apprentissage)\ndonnées (itératifs et récursifs) Course content: Structures de données non-linéaires associatives (table associative, ensemble, classe-union) Course name: http://example.org/course/UE_XLG4IU010</page1>\n        <page2>Pages:88-90 HOURS CS Core = 11 KA Core = 6 AL-Foundational: Foundational Data\nStructures and Algorithms CS Core: (See also: SDF-Data-Structures, SDF-\nAlgorithms) 1\\. Abstract Data Type (ADT) and operations on an ADT (See also:\nFPL-Types) a. Dictionary operations (insert, delete, find) 2\\. Arrays a.\nNumeric vs non-numeric, character strings b. Single (vector) vs\nmultidimensional (matrix) 3\\. Records/Structs/Tuples and Objects (See also:\nFPL-OOP) 4\\. Linked lists (for historical reasons) a. Single vs Double and\nLinear vs Circular 5\\. Stacks 6\\. Queues and deques a. Heap-based priority\nqueue 7\\. Hash tables/maps a. Collision resolution and complexity (e.g.,\nprobing, chaining, rehash) 8\\. Graphs (e.g., [un]directed, [a]cyclic,\n[un]connected, and [un]weighted) (See also: MSF-Discrete) a. Graph\nrepresentation: adjacency list vs matrix 9\\. Trees (See also: MSF-Discrete) a.\nBinary, n-ary, and search trees b. Balanced (e.g., AVL, Red-Black, Heap) 10\\.\nSets (See also: MSF-Discrete) 11\\. Search algorithms a. O(n) complexity (e.g.,\nlinear/sequential array/list search) b. O(log2 n) complexity (e.g., binary\nsearch) c. O(logb n) complexity (e.g., uninformed depth/breadth-first tree\nsearch) 12\\. Sorting algorithms (e.g., stable, unstable) a. O(n2) complexity\n(e.g., insertion, selection), b. O(n log n) complexity (e.g., quicksort,\nmerge, timsort) 13\\. Graph algorithms a. Shortest path (e.g., Dijkstra's,\nFloyd's) b. Minimal spanning tree (e.g., Prim's, Kruskal's) KA Core: 14\\.\nSorting algorithms a. O(n log n) complexity heapsort b. Pseudo O(n) complexity\n(e.g., bucket, counting, radix) 15\\. Graph algorithms a. Transitive closure\n(e.g., Warshall's) b. Topological sort 16\\. Matching a. Efficient string\nmatching (e.g., Boyer-Moore, Knuth-Morris-Pratt) b. Longest common subsequence\nmatching c. Regular expression matching Non-core: 17\\. Cryptography algorithms\n(e.g., SHA-256) (See also: SEC-Crypto) 18\\. Parallel algorithms (See also:\nPDC-Algorithms, FPL-Parallel) 19\\. Consensus algorithms (e.g., Blockchain)\n(See also: SEC-Crypto) a. Proof of work vs proof of stake (See also: SEP-\nSustainability) 20\\. Quantum computing algorithms (See also: AL-Models, AR-\nQuantum) a. Oracle-based (e.g., Deutsch-Jozsa, Bernstein-Vazirani, Simon) b.\nSuperpolynomial speed-up via QFT (e.g., Shor's) c. Polynomial speed-up via\namplitude amplification (e.g., Grover's) 21\\. Fast-Fourier Transform (FFT)\nalgorithm 22\\. Differential evolution algorithm Illustrative Learning\nOutcomes: CS Core: 1\\. For each ADT/Data-Structure in this unit a. Explain its\ndefinition, properties, representation(s), and associated ADT operations. b.\nExplain step-by-step how the ADT operations associated with the data structure\ntransform it. 2\\. For each algorithm in this unit explain step-by-step how the\nalgorithm operates. 3\\. For each algorithmic approach (e.g., sorting) in this\nunit apply a prototypical example of the approach (e.g., merge sort). 90 4\\.\nGiven requirements for a problem, develop multiple solutions using various\ndata structures and algorithms. Subsequently, evaluate the suitability,\nstrengths, and weaknesses selecting an approach that best satisfies the\nrequirements. 5\\. Explain how collision avoidance and collision resolution is\nhandled in hash tables. 6\\. Explain factors beyond computational efficiency\nthat influence the choice of algorithms, such as programming time,\nmaintainability, and the use of application-specific patterns in the input\ndata. 7\\. Explain the heap property and the use of heaps as an implementation\nof a priority queue. KA Core: 8\\. For each of the algorithms and algorithmic\napproaches in the KA Core topics: a. Explain a prototypical example of the\nalgorithm, and b. Explain step-by-step how the algorithm operates. Non-core:\n9\\. An appreciation of quantum computation and its application to certain\nproblems.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/d808ab28183898da96ace8f0be8580b3e51a9963daa2e07c700573143a4fe4bc> .
_:N155ba49463f7430f9b83476ab3df48ce <http://schema.org/answer> "0" <http://groq.org/d808ab28183898da96ace8f0be8580b3e51a9963daa2e07c700573143a4fe4bc> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/d808ab28183898da96ace8f0be8580b3e51a9963daa2e07c700573143a4fe4bc> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/has_schema_type> _:N155ba49463f7430f9b83476ab3df48ce <http://groq.org/d808ab28183898da96ace8f0be8580b3e51a9963daa2e07c700573143a4fe4bc> .
_:N155ba49463f7430f9b83476ab3df48ce <http://schema.org/explain> "The lecture covers only a subset of the KU, focusing on data structures without addressing algorithms and advanced topics." <http://groq.org/d808ab28183898da96ace8f0be8580b3e51a9963daa2e07c700573143a4fe4bc> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU010" <http://groq.org/d808ab28183898da96ace8f0be8580b3e51a9963daa2e07c700573143a4fe4bc> .
_:N155ba49463f7430f9b83476ab3df48ce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/d808ab28183898da96ace8f0be8580b3e51a9963daa2e07c700573143a4fe4bc> .
_:N675b5686921a45aaba626c52efbcc8ee <http://schema.org/explain> "The lecture focuses on teaching methodologies and professional integration, not GIT-3D Modeling." <http://groq.org/1bbfaf5dfba23cfe40c9a126bc2dbb8eaa4e0b7152f93d81c25420948e485668> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD GIT-3D Modeling: Core Concepts CS\nCore: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic 3\nKA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of GIT-3D Modeling.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/1bbfaf5dfba23cfe40c9a126bc2dbb8eaa4e0b7152f93d81c25420948e485668> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU010" <http://groq.org/1bbfaf5dfba23cfe40c9a126bc2dbb8eaa4e0b7152f93d81c25420948e485668> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/1bbfaf5dfba23cfe40c9a126bc2dbb8eaa4e0b7152f93d81c25420948e485668> .
_:N675b5686921a45aaba626c52efbcc8ee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/1bbfaf5dfba23cfe40c9a126bc2dbb8eaa4e0b7152f93d81c25420948e485668> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/has_schema_type> _:N675b5686921a45aaba626c52efbcc8ee <http://groq.org/1bbfaf5dfba23cfe40c9a126bc2dbb8eaa4e0b7152f93d81c25420948e485668> .
_:N675b5686921a45aaba626c52efbcc8ee <http://schema.org/answer> "0" <http://groq.org/1bbfaf5dfba23cfe40c9a126bc2dbb8eaa4e0b7152f93d81c25420948e485668> .
_:N40ebf49bada842c99721ad81f96427ad <http://schema.org/explain> "The lecture focuses on ecological transition, while the KU covers software engineering topics." <http://groq.org/68f528c6a3fab15ab629885d24604f08d146ca24042d57b2343ca6c4cb9e8bbe> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/68f528c6a3fab15ab629885d24604f08d146ca24042d57b2343ca6c4cb9e8bbe> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/has_schema_type> _:N40ebf49bada842c99721ad81f96427ad <http://groq.org/68f528c6a3fab15ab629885d24604f08d146ca24042d57b2343ca6c4cb9e8bbe> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Enjeux de la transition écologique Objectif: (résultats d'apprentissage) Course content: Programme des 9 séances en ligne (d’environ 1h30 de travail chacune) : Course name: http://example.org/course/UE_XLG3TU020</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Maintenance and Evolution:\nCore Concepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nSE-Maintenance and Evolution. 2\\. Apply principles in practical scenarios. 3\\.\nAnalyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/68f528c6a3fab15ab629885d24604f08d146ca24042d57b2343ca6c4cb9e8bbe> .
_:N40ebf49bada842c99721ad81f96427ad <http://schema.org/answer> "0" <http://groq.org/68f528c6a3fab15ab629885d24604f08d146ca24042d57b2343ca6c4cb9e8bbe> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU020" <http://groq.org/68f528c6a3fab15ab629885d24604f08d146ca24042d57b2343ca6c4cb9e8bbe> .
_:N40ebf49bada842c99721ad81f96427ad <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/68f528c6a3fab15ab629885d24604f08d146ca24042d57b2343ca6c4cb9e8bbe> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU020" <http://groq.org/243abd18061b348ee9195fa1c5d953873a874106915659fcc81ab4934c2b9499> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/243abd18061b348ee9195fa1c5d953873a874106915659fcc81ab4934c2b9499> .
_:N74eb5914dfd74462bc6314818f723ef9 <http://schema.org/explain> "The lecture does not address the technical aspects of formal methods in software engineering." <http://groq.org/243abd18061b348ee9195fa1c5d953873a874106915659fcc81ab4934c2b9499> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/has_schema_type> _:N74eb5914dfd74462bc6314818f723ef9 <http://groq.org/243abd18061b348ee9195fa1c5d953873a874106915659fcc81ab4934c2b9499> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Enjeux de la transition écologique Objectif: (résultats d'apprentissage) Course content: Programme des 9 séances en ligne (d’environ 1h30 de travail chacune) : Course name: http://example.org/course/UE_XLG3TU020</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/243abd18061b348ee9195fa1c5d953873a874106915659fcc81ab4934c2b9499> .
_:N74eb5914dfd74462bc6314818f723ef9 <http://schema.org/answer> "0" <http://groq.org/243abd18061b348ee9195fa1c5d953873a874106915659fcc81ab4934c2b9499> .
_:N74eb5914dfd74462bc6314818f723ef9 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/243abd18061b348ee9195fa1c5d953873a874106915659fcc81ab4934c2b9499> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/has_schema_type> _:Nfdc158edc54046e88aac9ff2384cc6ec <http://groq.org/051faf7a278571726883f57ab4a2916b9dc3c4321804507c19c47c7274643ecf> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Logique pour l'informatique Objectif: (résultats d'apprentissage)\nconsistance et complétude d'un système de preuves.\n4. Représenter une preuve de la déduction naturelle sous forme d'arbre d'inférence.\n5. Utiliser les algorithmes d'unification et de résolution pour le raisonnement automatique sur les\nformules logiques.\n1) Raisonnement algébrique booléen\n• Dualités des connecteurs logiques\n• Formes normales conjonctive et disjonctive\n2) Systèmes de preuves\n• Système d'inférence associé à une définition inductive\n• Preuve d'appartenance à un ensemble inductif par un arbre de preuves\n• Règles d'inférences de la déduction naturelle pour la logique propositionnelle\n• Distinguer logique classique et logique intuitionniste\n3) Donner du sens aux langages logique Course content: • Interprétation, modèle, satisfiabilité, validité\n• Correspondance avec le système de preuve: correction et complétude\n4) Calcul des prédicats\n• Manipulation des quantificateurs\n• Skolémisation, forme clausale\n• Théorie logique\n5) Raisonner automatiquement sur les formules logique\n• Algorithme d'unification\n• Algorithme de résolution Course name: http://example.org/course/UE_XLG3IU020</page1>\n        <page2>Pages:70-70 HOURS CS Core = 2 KA Core = 2 AI-KRR: Fundamental Knowledge\nRepresentation and Reasoning CS Core: 1\\. Types of representations a.\nSymbolic, logical i. Creating a representation from a natural language problem\nstatement b. Learned subsymbolic representations c. Graphical models (e.g.,\nnaive Bayes, Bayesian network) 2\\. Review of probabilistic reasoning, Bayes\ntheorem (See also: MSF-Probability) 3\\. Bayesian reasoning a. Bayesian\ninference KA Core: 4\\. Random variables and probability distributions a.\nAxioms of probability b. Probabilistic inference c. Bayes' Rule (derivation)\nd. Bayesian inference (more complex examples) 5\\. Independence 6\\. Conditional\nIndependence 7\\. Markov chains and Markov models 8\\. Utility and decision\nmaking Illustrative Learning Outcomes: 1\\. Given a natural language problem\nstatement, encode it as a symbolic or logical representation. 2\\. Explain how\nwe can make decisions under uncertainty, using concepts such as Bayes theorem\nand utility. 3\\. Compute a probabilistic inference in a real-world problem\nusing Bayes' theorem to determine the probability of a hypothesis given\nevidence. 4\\. Apply Bayes' rule to determine the probability of a hypothesis\ngiven evidence. 5\\. Compute the probability of outcomes and test whether\noutcomes are independent. 71 AI-ML: Machine Learning CS Core: 1\\. Definition\nand examples of a broad variety of machine learning tasks a. Supervised\nlearning i. Classification ii. Regression b. Reinforcement learning c.\nUnsupervised learning i. Clustering 2\\. Fundamental ideas: a. No free lunch\ntheorem: no one learner can solve all problems; representational design\ndecisions have consequences. b. Sources of error and undecidability</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/051faf7a278571726883f57ab4a2916b9dc3c4321804507c19c47c7274643ecf> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU020" <http://groq.org/051faf7a278571726883f57ab4a2916b9dc3c4321804507c19c47c7274643ecf> .
_:Nfdc158edc54046e88aac9ff2384cc6ec <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/051faf7a278571726883f57ab4a2916b9dc3c4321804507c19c47c7274643ecf> .
_:Nfdc158edc54046e88aac9ff2384cc6ec <http://schema.org/answer> "0" <http://groq.org/051faf7a278571726883f57ab4a2916b9dc3c4321804507c19c47c7274643ecf> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/051faf7a278571726883f57ab4a2916b9dc3c4321804507c19c47c7274643ecf> .
_:Nfdc158edc54046e88aac9ff2384cc6ec <http://schema.org/explain> "Lecture focuses on logic systems and proof methods, while KU includes probabilistic reasoning, Bayesian methods, and machine learning not covered." <http://groq.org/051faf7a278571726883f57ab4a2916b9dc3c4321804507c19c47c7274643ecf> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 1 Objectif: (résultats d'apprentissage)\n•\nÉvaluer une implémentation de structure de données en temps et en place mémoire (coûts minimal,\nmaximal, amorti)\n• Course content: et mise en pratique dans l’approche de résolution de problèmes « Diviser pour régner ». Course name: http://example.org/course/UE_XLG3IU010</page1>\n        <page2>Pages:88-90 HOURS CS Core = 11 KA Core = 6 AL-Foundational: Foundational Data\nStructures and Algorithms CS Core: (See also: SDF-Data-Structures, SDF-\nAlgorithms) 1\\. Abstract Data Type (ADT) and operations on an ADT (See also:\nFPL-Types) a. Dictionary operations (insert, delete, find) 2\\. Arrays a.\nNumeric vs non-numeric, character strings b. Single (vector) vs\nmultidimensional (matrix) 3\\. Records/Structs/Tuples and Objects (See also:\nFPL-OOP) 4\\. Linked lists (for historical reasons) a. Single vs Double and\nLinear vs Circular 5\\. Stacks 6\\. Queues and deques a. Heap-based priority\nqueue 7\\. Hash tables/maps a. Collision resolution and complexity (e.g.,\nprobing, chaining, rehash) 8\\. Graphs (e.g., [un]directed, [a]cyclic,\n[un]connected, and [un]weighted) (See also: MSF-Discrete) a. Graph\nrepresentation: adjacency list vs matrix 9\\. Trees (See also: MSF-Discrete) a.\nBinary, n-ary, and search trees b. Balanced (e.g., AVL, Red-Black, Heap) 10\\.\nSets (See also: MSF-Discrete) 11\\. Search algorithms a. O(n) complexity (e.g.,\nlinear/sequential array/list search) b. O(log2 n) complexity (e.g., binary\nsearch) c. O(logb n) complexity (e.g., uninformed depth/breadth-first tree\nsearch) 12\\. Sorting algorithms (e.g., stable, unstable) a. O(n2) complexity\n(e.g., insertion, selection), b. O(n log n) complexity (e.g., quicksort,\nmerge, timsort) 13\\. Graph algorithms a. Shortest path (e.g., Dijkstra's,\nFloyd's) b. Minimal spanning tree (e.g., Prim's, Kruskal's) KA Core: 14\\.\nSorting algorithms a. O(n log n) complexity heapsort b. Pseudo O(n) complexity\n(e.g., bucket, counting, radix) 15\\. Graph algorithms a. Transitive closure\n(e.g., Warshall's) b. Topological sort 16\\. Matching a. Efficient string\nmatching (e.g., Boyer-Moore, Knuth-Morris-Pratt) b. Longest common subsequence\nmatching c. Regular expression matching Non-core: 17\\. Cryptography algorithms\n(e.g., SHA-256) (See also: SEC-Crypto) 18\\. Parallel algorithms (See also:\nPDC-Algorithms, FPL-Parallel) 19\\. Consensus algorithms (e.g., Blockchain)\n(See also: SEC-Crypto) a. Proof of work vs proof of stake (See also: SEP-\nSustainability) 20\\. Quantum computing algorithms (See also: AL-Models, AR-\nQuantum) a. Oracle-based (e.g., Deutsch-Jozsa, Bernstein-Vazirani, Simon) b.\nSuperpolynomial speed-up via QFT (e.g., Shor's) c. Polynomial speed-up via\namplitude amplification (e.g., Grover's) 21\\. Fast-Fourier Transform (FFT)\nalgorithm 22\\. Differential evolution algorithm Illustrative Learning\nOutcomes: CS Core: 1\\. For each ADT/Data-Structure in this unit a. Explain its\ndefinition, properties, representation(s), and associated ADT operations. b.\nExplain step-by-step how the ADT operations associated with the data structure\ntransform it. 2\\. For each algorithm in this unit explain step-by-step how the\nalgorithm operates. 3\\. For each algorithmic approach (e.g., sorting) in this\nunit apply a prototypical example of the approach (e.g., merge sort). 90 4\\.\nGiven requirements for a problem, develop multiple solutions using various\ndata structures and algorithms. Subsequently, evaluate the suitability,\nstrengths, and weaknesses selecting an approach that best satisfies the\nrequirements. 5\\. Explain how collision avoidance and collision resolution is\nhandled in hash tables. 6\\. Explain factors beyond computational efficiency\nthat influence the choice of algorithms, such as programming time,\nmaintainability, and the use of application-specific patterns in the input\ndata. 7\\. Explain the heap property and the use of heaps as an implementation\nof a priority queue. KA Core: 8\\. For each of the algorithms and algorithmic\napproaches in the KA Core topics: a. Explain a prototypical example of the\nalgorithm, and b. Explain step-by-step how the algorithm operates. Non-core:\n9\\. An appreciation of quantum computation and its application to certain\nproblems.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/bc79e25e330192ba5b25c59dc288cbdafb9507cbffc999aaae48e8222edaf4fd> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU010" <http://groq.org/bc79e25e330192ba5b25c59dc288cbdafb9507cbffc999aaae48e8222edaf4fd> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/bc79e25e330192ba5b25c59dc288cbdafb9507cbffc999aaae48e8222edaf4fd> .
_:N80bee087965a4a3baa75d18898b16202 <http://schema.org/answer> "0" <http://groq.org/bc79e25e330192ba5b25c59dc288cbdafb9507cbffc999aaae48e8222edaf4fd> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/has_schema_type> _:N80bee087965a4a3baa75d18898b16202 <http://groq.org/bc79e25e330192ba5b25c59dc288cbdafb9507cbffc999aaae48e8222edaf4fd> .
_:N80bee087965a4a3baa75d18898b16202 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/bc79e25e330192ba5b25c59dc288cbdafb9507cbffc999aaae48e8222edaf4fd> .
_:N80bee087965a4a3baa75d18898b16202 <http://schema.org/explain> "The lecture focuses on a subset of the KU, primarily evaluation of data structures and the divide and conquer approach, without covering the broader range of topics outlined in the KU." <http://groq.org/bc79e25e330192ba5b25c59dc288cbdafb9507cbffc999aaae48e8222edaf4fd> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/fb03c2d226f60779e7552e398ea5598cc945e35505ca1fd1cdc21cd779d2f5d6> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU030" <http://groq.org/fb03c2d226f60779e7552e398ea5598cc945e35505ca1fd1cdc21cd779d2f5d6> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Programmation à Objets Objectif: (résultats d'apprentissage) Connaître les mécanismes d’héritage et de polymorphisme Course content: Classes abstraites Course name: http://example.org/course/UE_XLG3IU030</page1>\n        <page2>Pages: 133 HOURS CS Core = 0 KA Core = 2 + 1 (MSF) FPL-Logic: Logic\nProgramming KA Core: 1\\. Universal vs existential quantifiers. (See also: AI-\nLRR, MSF-Discrete) 2\\. First order predicate logic vs higher order logic. (See\nalso: AI-LRR, MSF-Discrete) 3\\. Expressing complex relations using logical\nconnectives and simpler relations. 4\\. Definitions of Horn clause, facts,\ngoals and subgoals. 5\\. Unification and unification algorithm; unification vs\nassertion vs expression evaluation. 6\\. Mixing relations with functions. (See\nalso: MSF-Discrete) 7\\. Cuts, backtracking, and non-determinism. 8\\. Closed-\nworld vs open-world assumptions. Non-core: 9\\. Memory overhead of variable\ncopying in handling iterative programs. 10\\. Programming constructs to store\npartial computation and pruning search trees. 11\\. Mixing functional\nprogramming and logic programming using concepts such as equational logic,\nnarrowing, residuation, and semantic unification. (See also: FPL-Functional)\n12\\. Higher-order, constraint, and inductive logic programming. (See also: AI-\nLRR) 13\\. Integration with other programming paradigms such as object-oriented\nprogramming. 14\\. Advance programming constructs such as difference-lists,\ncreating user defined data structures, set of, etc. Illustrative learning\noutcomes: KA Core: 1\\. Use a logic language to implement a conventional\nalgorithm. 2\\. Use a logic language to implement an algorithm employing\nimplicit search using clauses, relations, and cuts. 3\\. Use a simple\nillustrative example to show correspondence between First Order Predicate\nLogic (FOPL) and logic programs using Horn clauses. 4\\. Use examples to\nillustrate the unification algorithm and its role of parameter-passing in\nquery reduction. 5\\. Use simple logic programs interleaving relations,\nfunctions, and recursive programming such as factorial and Fibonacci numbers\nand simple complex relationships between entities and illustrate execution and\nparameter-passing using unification and backtracking. Non-core: 6\\. Illustrate\ncomputation of simple programs such as Fibonacci and show overhead of\nrecomputation, and then show how to improve execution overhead.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/fb03c2d226f60779e7552e398ea5598cc945e35505ca1fd1cdc21cd779d2f5d6> .
_:N084f8f3cfc16461f9b84e01eef692fc4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/fb03c2d226f60779e7552e398ea5598cc945e35505ca1fd1cdc21cd779d2f5d6> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/has_schema_type> _:N084f8f3cfc16461f9b84e01eef692fc4 <http://groq.org/fb03c2d226f60779e7552e398ea5598cc945e35505ca1fd1cdc21cd779d2f5d6> .
_:N084f8f3cfc16461f9b84e01eef692fc4 <http://schema.org/answer> "0" <http://groq.org/fb03c2d226f60779e7552e398ea5598cc945e35505ca1fd1cdc21cd779d2f5d6> .
_:N084f8f3cfc16461f9b84e01eef692fc4 <http://schema.org/explain> "The lecture focuses on object-oriented programming, while the KU covers logic programming." <http://groq.org/fb03c2d226f60779e7552e398ea5598cc945e35505ca1fd1cdc21cd779d2f5d6> .
_:N1eef512795124eebb628feb01ef2902b <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/d5b798c3cde7c48f6cd81e23cc236345cbd209dcd4caad7df50bdaa925e8735a> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Systèmes d'exploitation Objectif: (résultats d'apprentissage)\nsynchronisation/communication (Application)\n• Etre capable d'utiliser les mécanismes de synchronisation usuels sous Linux (sémaphores,\nmutexes, signaux) (Application)\n• Comprendre le principe de mémoire virtuelle (Initiation)\n• Savoir gérer les entrées/sorties sous Linux (Initiation) Course content: par le système d'exploitation y sont exposées : comment les processus se partagent-ils l'accès au\nprocesseur ? Comment se synchronisent-ils et quels mécanismes leur permettent d'échanger des\ndonnées ? Comment sont gérés la mémoire et les entrées/sorties ? Course name: http://example.org/course/UE_XLG4IU030</page1>\n        <page2>Pages: 139-140 HOURS CS Core = 2 KA Core = 3 FPL-Translation: Language\nTranslation and Execution CS Core: 1\\. Execution models for JIT (Just-In-\nTime), compiler, interpreter 2\\. Use of intermediate code, e.g., bytecode 3\\.\nLimitations and benefits of JIT, compiler, and interpreter 4\\. Cross\ncompilers/transpilers 5\\. BNF and extended BNF representation of context-free\ngrammar 6\\. Parse tree using a simple sentence such as arithmetic expression\nor if-then-else statement 7\\. Execution as native code or within a virtual\nmachine 8\\. Language translation pipeline: syntax analysis, parsing, optional\ntype-checking, translation/code generation and optimization, linking, loading,\nexecution KA Core: 9\\. Run-time representation of core language constructs\nsuch as objects (method tables) and functions that can be passed as parameters\nto and returned from functions (closures) 10\\. Secure compiler development\n(See also: SEC-Foundations, SEC-Coding) Illustrative learning outcomes: CS\nCore: 1\\. Explain and understand the differences between compiled, JIT, and\ninterpreted language implementations, including the benefits and limitations\nof each. 2\\. Differentiate syntax and parsing from semantics and evaluation.\n3\\. Use BNF and extended BNF to specify the syntax of simple constructs such\nas if-then-else, type declaration and iterative constructs for known languages\nsuch as C++ or Python. 4\\. Illustrate the parse tree using a simple\nsentence/arithmetic expression. 5\\. Illustrate translation of syntax diagrams\nto BNF/extended BNF for simple constructs such as if-thenelse, type\ndeclaration, iterative constructs, etc. 6\\. Illustrate ambiguity in parsing\nusing nested if-then-else/arithmetic expression and show resolution using\nprecedence order. KA-Core: 7\\. Discuss the benefits and limitations of garbage\ncollection, including the notion of reachability.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/d5b798c3cde7c48f6cd81e23cc236345cbd209dcd4caad7df50bdaa925e8735a> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/d5b798c3cde7c48f6cd81e23cc236345cbd209dcd4caad7df50bdaa925e8735a> .
_:N1eef512795124eebb628feb01ef2902b <http://schema.org/explain> "The lecture covers operating systems topics, while the KU focuses on language translation and execution, which are distinct areas." <http://groq.org/d5b798c3cde7c48f6cd81e23cc236345cbd209dcd4caad7df50bdaa925e8735a> .
_:N1eef512795124eebb628feb01ef2902b <http://schema.org/answer> "0" <http://groq.org/d5b798c3cde7c48f6cd81e23cc236345cbd209dcd4caad7df50bdaa925e8735a> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/has_schema_type> _:N1eef512795124eebb628feb01ef2902b <http://groq.org/d5b798c3cde7c48f6cd81e23cc236345cbd209dcd4caad7df50bdaa925e8735a> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU030" <http://groq.org/d5b798c3cde7c48f6cd81e23cc236345cbd209dcd4caad7df50bdaa925e8735a> .
_:N5c8d842134c84cee93cf5e332aa578e7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/25f50326d6b8444bee3a01e6f8be624e2ecc4c5f707486f5703b3c03c3b60fda> .
_:N5c8d842134c84cee93cf5e332aa578e7 <http://schema.org/answer> "1" <http://groq.org/25f50326d6b8444bee3a01e6f8be624e2ecc4c5f707486f5703b3c03c3b60fda> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/has_schema_type> _:N5c8d842134c84cee93cf5e332aa578e7 <http://groq.org/25f50326d6b8444bee3a01e6f8be624e2ecc4c5f707486f5703b3c03c3b60fda> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Systèmes d'exploitation Objectif: (résultats d'apprentissage)\nsynchronisation/communication (Application)\n• Etre capable d'utiliser les mécanismes de synchronisation usuels sous Linux (sémaphores,\nmutexes, signaux) (Application)\n• Comprendre le principe de mémoire virtuelle (Initiation)\n• Savoir gérer les entrées/sorties sous Linux (Initiation) Course content: par le système d'exploitation y sont exposées : comment les processus se partagent-ils l'accès au\nprocesseur ? Comment se synchronisent-ils et quels mécanismes leur permettent d'échanger des\ndonnées ? Comment sont gérés la mémoire et les entrées/sorties ? Course name: http://example.org/course/UE_XLG4IU030</page1>\n        <page2>Pages: 139-140 HOURS CS Core = 2 KA Core = 3 FPL-Translation: Language\nTranslation and Execution CS Core: 1\\. Execution models for JIT (Just-In-\nTime), compiler, interpreter 2\\. Use of intermediate code, e.g., bytecode 3\\.\nLimitations and benefits of JIT, compiler, and interpreter 4\\. Cross\ncompilers/transpilers 5\\. BNF and extended BNF representation of context-free\ngrammar 6\\. Parse tree using a simple sentence such as arithmetic expression\nor if-then-else statement 7\\. Execution as native code or within a virtual\nmachine 8\\. Language translation pipeline: syntax analysis, parsing, optional\ntype-checking, translation/code generation and optimization, linking, loading,\nexecution KA Core: 9\\. Run-time representation of core language constructs\nsuch as objects (method tables) and functions that can be passed as parameters\nto and returned from functions (closures) 10\\. Secure compiler development\n(See also: SEC-Foundations, SEC-Coding) Illustrative learning outcomes: CS\nCore: 1\\. Explain and understand the differences between compiled, JIT, and\ninterpreted language implementations, including the benefits and limitations\nof each. 2\\. Differentiate syntax and parsing from semantics and evaluation.\n3\\. Use BNF and extended BNF to specify the syntax of simple constructs such\nas if-then-else, type declaration and iterative constructs for known languages\nsuch as C++ or Python. 4\\. Illustrate the parse tree using a simple\nsentence/arithmetic expression. 5\\. Illustrate translation of syntax diagrams\nto BNF/extended BNF for simple constructs such as if-thenelse, type\ndeclaration, iterative constructs, etc. 6\\. Illustrate ambiguity in parsing\nusing nested if-then-else/arithmetic expression and show resolution using\nprecedence order. KA-Core: 7\\. Discuss the benefits and limitations of garbage\ncollection, including the notion of reachability.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/25f50326d6b8444bee3a01e6f8be624e2ecc4c5f707486f5703b3c03c3b60fda> .
_:N5c8d842134c84cee93cf5e332aa578e7 <http://schema.org/explain> "The lecture covers topics such as process synchronization, memory management, and I/O management, which are also covered in the KU, indicating a substantial overlap." <http://groq.org/25f50326d6b8444bee3a01e6f8be624e2ecc4c5f707486f5703b3c03c3b60fda> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/25f50326d6b8444bee3a01e6f8be624e2ecc4c5f707486f5703b3c03c3b60fda> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU030" <http://groq.org/25f50326d6b8444bee3a01e6f8be624e2ecc4c5f707486f5703b3c03c3b60fda> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Logique pour l'informatique Objectif: (résultats d'apprentissage)\nconsistance et complétude d'un système de preuves.\n4. Représenter une preuve de la déduction naturelle sous forme d'arbre d'inférence.\n5. Utiliser les algorithmes d'unification et de résolution pour le raisonnement automatique sur les\nformules logiques.\n1) Raisonnement algébrique booléen\n• Dualités des connecteurs logiques\n• Formes normales conjonctive et disjonctive\n2) Systèmes de preuves\n• Système d'inférence associé à une définition inductive\n• Preuve d'appartenance à un ensemble inductif par un arbre de preuves\n• Règles d'inférences de la déduction naturelle pour la logique propositionnelle\n• Distinguer logique classique et logique intuitionniste\n3) Donner du sens aux langages logique Course content: • Interprétation, modèle, satisfiabilité, validité\n• Correspondance avec le système de preuve: correction et complétude\n4) Calcul des prédicats\n• Manipulation des quantificateurs\n• Skolémisation, forme clausale\n• Théorie logique\n5) Raisonner automatiquement sur les formules logique\n• Algorithme d'unification\n• Algorithme de résolution Course name: http://example.org/course/UE_XLG3IU020</page1>\n        <page2>Pages: 145-146 HOURS CS Core = 0 KA Core = 0 FPL-Formalism: Formal Semantics\nNon-core: 1\\. Syntax vs semantics 2\\. Approaches to semantics: axiomatic,\noperational, denotational, type-based 3\\. Axiomatic semantics of abstract\nconstructs such as assignment, selection, iteration using precondition, post-\nconditions, and loop invariant 4\\. Operational semantics analysis of abstract\nconstructs and sequence of such as assignment, expression evaluation,\nselection, iteration using environment and store a. Symbolic execution b.\nConstraint checkers 5\\. Denotational semantics a. Lambda Calculus. (See also:\nAL-Models, FPL-Functional) 6\\. Proofs by induction over language semantics 7\\.\nFormal definitions and proofs for type systems (See also: FPL-Types) a.\nPropositions as types (implication as a function, conjunction as a product,\ndisjunction as a sum) b. Dependent types (universal quantification as\ndependent function, existential quantification as dependent product) c.\nParametricity Illustrative learning outcomes: Non-core: 1\\. Construct formal\nsemantics for a small language. 2\\. Write a lambda-calculus program and show\nits evaluation to a normal form. 3\\. Discuss the different approaches of\noperational, denotational, and axiomatic semantics. 4\\. Use induction to prove\nproperties of all programs in a language. 5\\. Use induction to prove\nproperties of all programs in a language that is well-typed according to a\nformally defined type system. 6\\. Use parametricity to establish the behavior\nof code given only its type.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/de869c34ec02ace0b4cba78be49d4571bd73b5ba289763b960106fb30302d6a6> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/de869c34ec02ace0b4cba78be49d4571bd73b5ba289763b960106fb30302d6a6> .
_:N0a9b17b6ae2241e3bcf20817591df797 <http://schema.org/answer> "0" <http://groq.org/de869c34ec02ace0b4cba78be49d4571bd73b5ba289763b960106fb30302d6a6> .
_:N0a9b17b6ae2241e3bcf20817591df797 <http://schema.org/explain> "The lecture focuses on logic and proof systems, while the KU covers formal semantics and type systems, with minimal overlap." <http://groq.org/de869c34ec02ace0b4cba78be49d4571bd73b5ba289763b960106fb30302d6a6> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU020" <http://groq.org/de869c34ec02ace0b4cba78be49d4571bd73b5ba289763b960106fb30302d6a6> .
_:N0a9b17b6ae2241e3bcf20817591df797 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/de869c34ec02ace0b4cba78be49d4571bd73b5ba289763b960106fb30302d6a6> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/has_schema_type> _:N0a9b17b6ae2241e3bcf20817591df797 <http://groq.org/de869c34ec02ace0b4cba78be49d4571bd73b5ba289763b960106fb30302d6a6> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Analyse et Algebre lineaire 2 Objectif: (résultats d'apprentissage) • Course content: • Course name: http://example.org/course/UE_XLG3MU030</page1>\n        <page2>Pages: 150-151 HOURS CS Core = 3 KA Core = 2 GIT-Fundamentals: Fundamental\nConcepts CS Core: 1\\. Overview of graphics and visualization. 2\\. Basic\ngraphics pipeline architecture. 3\\. 2D and 3D transformations. 4\\.\nRasterization and rendering techniques. 5\\. Fundamental shading models. KA\nCore: 6\\. Advanced rendering techniques. 7\\. Applications of visualization in\ndifferent fields. 8\\. Interaction methods for graphical environments.\nIllustrative Learning Outcomes: 1\\. Explain the graphics rendering pipeline.\n2\\. Differentiate between rasterization and ray tracing. 3\\. Apply\ntransformations to 2D and 3D models.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/a8557f5cd9c8593794252b03af44204663851d797c936f5730910aca184c18e9> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/has_schema_type> _:Nd9f42d6932ad431b94dbb97f39a355a1 <http://groq.org/a8557f5cd9c8593794252b03af44204663851d797c936f5730910aca184c18e9> .
_:Nd9f42d6932ad431b94dbb97f39a355a1 <http://schema.org/answer> "0" <http://groq.org/a8557f5cd9c8593794252b03af44204663851d797c936f5730910aca184c18e9> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3MU030" <http://groq.org/a8557f5cd9c8593794252b03af44204663851d797c936f5730910aca184c18e9> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/a8557f5cd9c8593794252b03af44204663851d797c936f5730910aca184c18e9> .
_:Nd9f42d6932ad431b94dbb97f39a355a1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/a8557f5cd9c8593794252b03af44204663851d797c936f5730910aca184c18e9> .
_:Nd9f42d6932ad431b94dbb97f39a355a1 <http://schema.org/explain> "Lecture focuses on analysis/linear algebra, not graphics/visualization topics in KU." <http://groq.org/a8557f5cd9c8593794252b03af44204663851d797c936f5730910aca184c18e9> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/course/parcours> "Parcours Scientifique Renforcé" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/obtention> "une ou plusieurs composantes orales." <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU040> <http://example.org/course/semester> "3" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU030> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/code> "XLG3TU030" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU030> <http://www.w3.org/2000/01/rdf-schema#label> "Stage libre" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/language> "Français" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/location> "Lombarderie" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU020> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4AU010> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/parcours> "Physique-" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/responsible> "RUSU Irena" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/prerequisite> "(s) • Informatique fondamentale 1 (913 17 LG 3 INF UE 814)\n• Programmation orientée objets (913 17 LG 3 INF UE 1160)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU020> <http://www.w3.org/2000/01/rdf-schema#label> "Enjeux de la transition écologique" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3AU010> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU030> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/semester> "3" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/parcours> "L2 LAS Mathématiques option Santé" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/course/parcours> "" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/content> "Méthodes d’enseignement" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/parcours> "option santé" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU040> <http://example.org/course/hours> "TOTAL : 40h Répartition : CM : 16h TD : 24h CI : 0h TP : 0h EAD : 0h" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/bibliography> "" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU040> <http://example.org/course/obtention> "Programme" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/obtention> "• une évaluation de la restitution de leur poster métier (suite à un entretien avec un professionnel,\nles étudiants, en groupe de 3 à 4, doivent en faire une restitution avec support et présentation\norale)." <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/course/obtention> "Programme" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/content> "et mise en pratique dans l’approche de résolution de problèmes « Diviser pour régner »." <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/hours> "TOTAL : 40h Répartition : CM : 10.67h TD : 16h CI : 0h TP : 13.33h EAD : 0h" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/course/level> "Licence" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/code> "XLG3IU010" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/code> "XLG3TU020" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/methods> "Langue d’enseignement Français" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/parcours> "Info-Maths" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/course/hours> "TOTAL : 60h Répartition : CM : 24h TD : 36h CI : 0h TP : 0h EAD : 0h" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/code> "XLG4IU020" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/bibliography> "" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/parcours> "L2 MIASHS" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/course/location> "Lombarderie" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU040> <http://www.w3.org/2000/01/rdf-schema#label> "Bases de données" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/objective> "(résultats d'apprentissage)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU030> <http://www.w3.org/2000/01/rdf-schema#label> "Stage libre" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/bibliography> "and Tools) de Alfred V. Aho, Ravi Sethi, Jeffrey D. Ullman et Monica S. Lam (2ème édition)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/course/content> "•" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/language> "Français\n- Jaume, M., Journault M., Lésot M.-J., Manoury P., Mounier I. (2020) Logique pour l'informatique." <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU030> <http://www.w3.org/2000/01/rdf-schema#label> "Systèmes d'exploitation" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/obtention> "Programme" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/content> "par le système d'exploitation y sont exposées : comment les processus se partagent-ils l'accès au\nprocesseur ? Comment se synchronisent-ils et quels mécanismes leur permettent d'échanger des\ndonnées ? Comment sont gérés la mémoire et les entrées/sorties ?" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/code> "XLG4IU010" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/level> "Licence" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/obtention> "La note de CCE peut contenir une ou plusieurs composantes pratiques et éventuellement une ou\nplusieurs composantes orales." <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/parcours> "L2 Informatique" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/bibliography> "XLG4TE012 Methodologie et insertion professionnelle : PPE 2" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/parcours> "Sciences de l'environnement" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/language> "Français" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/level> "Licence" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/parcours> "L2 Physique" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/parcours> "L2 Physique CMI Physique-Mécanique" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/course/parcours> "L2 Info-Maths" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/methods> "Enseignement en présentiel" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4MU050> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/evaluation> "Systèmes d'exploitation 100%" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/prerequisite> "(s)\n• Introduction au développement logiciel (913 17 LG 2 INF UE 1495)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU040> <http://example.org/course/language> "Français" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/parcours> "Economie" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/semester> "3" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/objective> "(résultats d'apprentissage)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/course/obtention> "Programme" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/responsible> "GRANVILLIERS LAURENT" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/code> "XLG3TU010" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU040> <http://example.org/course/location> "Nantes" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/parcours> "L2" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/location> "Niveau Licence" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/responsible> "DUMAY JUSTINE" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/prerequisite> "(s) Fonctionnement des ordinateurs (X12I020)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/methods> "Langue d’enseignement Français" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/course/bibliography> "" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/obtention> "Programme\n- UED (XLG4TE020)\n- Sport (XLG4TE101)\n- Danse et maths (XLG4TE102)\n- L'environnement est ma santé (XLG4TE103)\n- Science, culture, société (XLG4TE104)\n- Techniques d’imagerie de l’infiniment petit (XLG4TE105)\n- Présentation de l'UFR Sciences et Techniques (XLG4TE106)\n- Publication scientifique et mécaniques du livre (XLG4TE107)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/methods> "Langue d’enseignement Français" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/responsible> "PERRIN MATTHIEU" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/responsible> "LABBE LUCILE" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/parcours> "L2 MIASHS" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3AU010> <http://www.w3.org/2000/01/rdf-schema#label> "2nd year English S3" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/semester> "3" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/bibliography> "Cf page Madoc du module" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/content> "Méthodes d’enseignement" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/language> "Français" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/parcours> "L2 Info-Maths CMI OPT/IM" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/course/parcours> "L2 Informatique" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/evaluation> "Methodologie et insertion professionnelle : PPE 2 0%" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/evaluation> "Algorithmique et Structures de données 2 100%" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/language> "Français" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/evaluation> "2nd year English S4 100%" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/level> "Licence" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU010> <http://www.w3.org/2000/01/rdf-schema#label> "Algorithmique et Structures de données 1" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/course/hours> "TOTAL : 36h Répartition : CM : 12h TD : 12h CI : 0h TP : 12h EAD : 0h" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/parcours> "L2 LAS Physique option Santé" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/objective> "(résultats d'apprentissage)\nconsistance et complétude d'un système de preuves.\n4. Représenter une preuve de la déduction naturelle sous forme d'arbre d'inférence.\n5. Utiliser les algorithmes d'unification et de résolution pour le raisonnement automatique sur les\nformules logiques.\n1) Raisonnement algébrique booléen\n• Dualités des connecteurs logiques\n• Formes normales conjonctive et disjonctive\n2) Systèmes de preuves\n• Système d'inférence associé à une définition inductive\n• Preuve d'appartenance à un ensemble inductif par un arbre de preuves\n• Règles d'inférences de la déduction naturelle pour la logique propositionnelle\n• Distinguer logique classique et logique intuitionniste\n3) Donner du sens aux langages logique" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/evaluation> "Programmation à Objets 100%" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/parcours> "Info-Maths" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/parcours> "L2 LAS Informatique option santé" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/obtention> "Programme" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU030> <http://www.w3.org/2000/01/rdf-schema#label> "Analyse et Algebre lineaire 2" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/language> "Français\n•" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/parcours> "L2 Physique" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/objective> "(résultats d'apprentissage)\nfaire et savoir-être) et d'un plan d'actions sur les prochaines années : à l'écrit et à l'oral\n- d'identitier et d'animer son réseau (professionnel et élargi)\n- de créer et de faire vivre ses profils numériques professionnels\n- de mener une enquête métier auprès d'un professionnel et de la restituer" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/methods> "Bibliographie" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/parcours> "OPT/IM" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/parcours> "L2 LAS Informatique\noption santé" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU040> <http://www.w3.org/2000/01/rdf-schema#label> "Probabilites discretes" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/objective> "(résultats d'apprentissage)\n5." <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/semester> "3" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/code> "XLG4TU010" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/evaluation> "Controverses scient. et techniques dans l’histoire 0%" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU040> <http://example.org/course/level> "Licence" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/content> "Programme des 9 séances en ligne (d’environ 1h30 de travail chacune) :" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/bibliography> "XLG4TE101 Sport" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/semester> "4" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU040> <http://example.org/course/objective> "(résultats d'apprentissage) •" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/evaluation> "Logique pour l'informatique 100%" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU040> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU020> <http://www.w3.org/2000/01/rdf-schema#label> "Logique pour l'informatique" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/level> "Licence" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/bibliography> "Matt Weisfeld. The Object-Oriented Thought Process. Addison-Wesley, 5th edition, 2019." <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/semester> "4" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/semester> "4" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/semester> "3" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/semester> "3" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/course/parcours> "Ingénierie Statistique" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/responsible> "LABBE LUCILE" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/location> "Lombarderie" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU040> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/code> "XLG3AU010" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/language> "Français" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/content> "• Interprétation, modèle, satisfiabilité, validité\n• Correspondance avec le système de preuve: correction et complétude\n4) Calcul des prédicats\n• Manipulation des quantificateurs\n• Skolémisation, forme clausale\n• Théorie logique\n5) Raisonner automatiquement sur les formules logique\n• Algorithme d'unification\n• Algorithme de résolution" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/parcours> "L2 LAS SVT Biologie Ecologie option" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU010> <http://www.w3.org/2000/01/rdf-schema#label> "Methodologie et insertion professionnelle S4" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/content> "- présentation orale de la restitution de l'enquête et des recherches sur le métier\n- équivalent de 8 TD + présentation orale des enquêtes:\n- identication de ses valeurs\n- indentification de ses compétences\n- consrtruction de son projet professionnel et personnel\n- présentation de son projet" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/level> "Licence" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/parcours> "L2 MIASHS" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU030> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/evaluation> "Algorithmique et Structures de données 1 100%" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/hours> "TOTAL : 16h Répartition : CM : 0h TD : 0h CI : 16h TP : 0h EAD : 0h" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/course/evaluation> "Analyse et Algebre lineaire 2 100%" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/level> "Licence" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/course/evaluation> "Bases de données 100%" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/location> "Lombarderie" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/language> "Français" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/course/parcours> "Info-Maths" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU010> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/course/parcours> "Parcours Scientifique Renforcé" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/parcours> "L2 Chimie" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/location> "Niveau Licence" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/parcours> "MIASHS" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/evaluation> "Stage libre 100%" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/level> "Licence" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/objective> "(résultats d'apprentissage) Connaître les mécanismes d’héritage et de polymorphisme" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/course/content> "•" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/code> "XLG4TU030" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/bibliography> "Collection Sciences Sup, janvier 2016, 384 pages." <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/methods> "Enseignement en présentiel" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU010> <http://www.w3.org/2000/01/rdf-schema#label> "Algorithmique et Structures de données 2" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/hours> "TOTAL : 0h Répartition : CM : 0h TD : 0h CI : 0h TP : 0h EAD : 0h" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/methods> "Distanciel : Apprentissage en autonomie d'éléments complémentaires aux cours en présentiel." <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/code> "XLG3IU030" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/hours> "TOTAL : 40h Répartition : CM : 16h TD : 24h CI : 0h TP : 0h EAD : 0h" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/methods> "Langue d’enseignement Français" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/responsible> "Volume horaire total TOTAL : 16h Répartition : CM : 0h TD : 0h CI : 16h TP : 0h EAD : 0h" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/content> "• Langages algébriques\n- Grammaire algébrique\n- Arbre de dérivation\n- Automates à pile\n• Hiérarchie de Chomsky\n- Classification des grammaires;\n- Algorithmes de reconnaissance pour les grammaires de type 1 et 2\n• Analyse lexicale et syntaxique\n- TP de flex et bison" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU040> <http://example.org/course/content> "- Couple de variables aléatoires discrètes (conditionnement, indépendance, corrélation).\n- Lois uniforme, Bernoulli, binomiale et hypergéométrique.\n•" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/course/content> "- Passage au relationnel\n- Définition et interrogation d'une base en sql\n- Introduction au modèle olap" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/course/code> "XLG4IU040" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU010> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/parcours> "L2 Informatique" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU030> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/course/semester> "4" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/obtention> "Programme" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/parcours> "Informatique" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/hours> "TOTAL : 40h Répartition : CM : 13.33h TD : 18.67h CI : 0h TP : 8h EAD : 0h" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/level> "Licence" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/parcours> "" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/course/bibliography> "" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/course/responsible> "PETIT ROBERT" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU040> <http://example.org/course/code> "XLG3MU040" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/semester> "4" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/hours> "TOTAL : 40h Répartition : CM : 8h TD : 20h CI : 0h TP : 12h EAD : 0h" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/content> "Méthodes d’enseignement" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/parcours> "" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/course/code> "XLG4MU050" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU020> <http://www.w3.org/2000/01/rdf-schema#label> "Unité Enseignement de Découverte" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/content> "Méthodes d’enseignement" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/content> "Méthodes d’enseignement" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/semester> "3" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/parcours> "option Santé" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/course/methods> "Présentiel" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/objective> "(résultats d'apprentissage)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/course/objective> "(résultats d'apprentissage) •" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU030> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU040> <http://example.org/course/parcours> "Economie" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/course/objective> "(résultats d'apprentissage)\n•" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU030> <http://www.w3.org/2000/01/rdf-schema#label> "Programmation à Objets" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU020> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/obtention> "La note de CCE peut contenir une ou plusieurs composantes pratiques et éventuellement une ou\nplusieurs composantes orales." <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/course/parcours> "L2 Physique" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/evaluation> "2nd year English S3 100%" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/content> "Structures de données non-linéaires associatives (table associative, ensemble, classe-union)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/bibliography> "Donald E. Knuth. The Art of Programming - Volume 1: Fundamental Algorithms. Addison-Wesley,\n1997." <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/evaluation> "Langages et automates 100%" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/code> "XLG3IU020" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/responsible> "Volume horaire total TOTAL : 0h Répartition : CM : 0h TD : 0h CI : 0h TP : 0h EAD : 0h" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/parcours> "L2 LAS Chimie option Santé" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/parcours> "option santé" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/course/parcours> "Mécanique" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/evaluation> "Methodologie et insertion professsionelle : PPE 100%" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/obtention> "une ou plusieurs composantes orales." <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/course/evaluation> "Optimisation 1 et Calcul intégral 100%" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/responsible> "GRANVILLIERS LAURENT" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/methods> "Enseignement en présentiel" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/parcours> "Info-Maths" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/methods> "Langue d’enseignement Français" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/level> "Licence" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/language> "Français" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/course/methods> "Cours – TD en îlot – TP" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/course/bibliography> "" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/parcours> "Physique-Mathématiques" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/methods> "skills)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/evaluation> "Stage libre 100%" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/language> "Français" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/language> "Français" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU040> <http://example.org/course/parcours> "L2 Informatique" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/course/semester> "4" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/course/code> "XLG3MU030" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU010> <http://www.w3.org/2000/01/rdf-schema#label> "Methodologie et insertion professionnelle S3" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/course/location> "Nantes" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/course/parcours> "L2 Informatique" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/location> "Niveau Licence" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/objective> "(résultats d'apprentissage)\ndonnées (itératifs et récursifs)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/objective> "(résultats d'apprentissage)\n•\nÉvaluer une implémentation de structure de données en temps et en place mémoire (coûts minimal,\nmaximal, amorti)\n•" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/responsible> "JABER GUILHEM" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/hours> "TOTAL : 0h Répartition : CM : 0h TD : 0h CI : 0h TP : 0h EAD : 0h" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU040> <http://example.org/course/responsible> "PETIT ROBERT" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/location> "Niveau Licence" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/location> "Niveau Licence" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/semester> "4" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/responsible> "BECHET Denis" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU040> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/course/language> "Français" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/semester> "4" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU040> <http://example.org/course/evaluation> "Probabilités discretes 100%" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/bibliography> "- David, R., Nour K., and Raffalli, (2001) C. Introduction à la Logique, Théorie de la démonstration." <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/parcours> "L2" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/hours> "TOTAL : 18h Répartition : CM : 12.667h TD : 5.333h CI : 0h TP : 0h EAD : 0h" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/parcours> "Economie" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/evaluation> "Enjeux de la transition écologique 100%" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/objective> "(résultats d'apprentissage)\nsynchronisation/communication (Application)\n• Etre capable d'utiliser les mécanismes de synchronisation usuels sous Linux (sémaphores,\nmutexes, signaux) (Application)\n• Comprendre le principe de mémoire virtuelle (Initiation)\n• Savoir gérer les entrées/sorties sous Linux (Initiation)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/obtention> "Programme" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/course/location> "Nantes" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU010> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/parcours> "L2 LAS Informatique option santé" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/level> "Licence" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU040> <http://example.org/course/bibliography> "" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/obtention> "Programme" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/course/semester> "3" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/course/parcours> "Physique CMI Physique-Mécanique" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/obtention> "Programme" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/obtention> "Programme" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/location> "Lombarderie" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/location> "Niveau Licence" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/hours> "TOTAL : 10.67h Répartition : CM : 0h TD : 10.67h CI : 0h TP : 0h EAD : 0h" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/course/language> "Français" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/hours> "TOTAL : 16h Répartition : CM : 0h TD : 16h CI : 0h TP : 0h EAD : 0h" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU040> <http://example.org/course/parcours> "L2 Info-Maths CMI OPT/IM" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/level> "Licence" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/parcours> "OPT/IM" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/parcours> "LAS SVT Biologie Ecologie option Santé" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/code> "XLG4TU020" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/bibliography> "•" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/parcours> "Chimie" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/course/objective> "(résultats d'apprentissage)\n- Introduction à la modélisation Merise\n- Modèle relationnel\n- Algèbre relationnelle et SQL" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/parcours> "Chimie-Biologie" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/language> "Français" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU040> <http://example.org/course/parcours> "Info-Maths" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/code> "XLG4IU030" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/parcours> "L2 SVT" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/course/hours> "TOTAL : 80h Répartition : CM : 32h TD : 48h CI : 0h TP : 0h EAD : 0h" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/language> "Français" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/prerequisite> "(s)\n• Fonctionnement des ordinateurs (913 17 LG 2 INF UE 1266)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/objective> "(résultats d'apprentissage)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/methods> "Langue d’enseignement Français" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/obtention> "une ou plusieurs composantes orales." <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/objective> "(résultats d'apprentissage)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/methods> "- 9 séances de cours en ligne\n- 3 séances de TD en fin de module, spécifiques à chaque parcours" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/parcours> "OPT/IM" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/parcours> "option Santé" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/parcours> "L2 Informatique" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/level> "Licence" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/methods> "Langue d’enseignement Français\n•" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/course/level> "Licence" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU040> <http://example.org/course/methods> "Présentiel" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/hours> "TOTAL : 40h Répartition : CM : 9.33h TD : 14.67h CI : 0h TP : 16h EAD : 0h" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/location> "Lombarderie" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/course/methods> "Présentiel" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/semester> "4" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/bibliography> "" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/code> "XLG4AU010" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/parcours> "Economie" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/location> "Niveau Licence" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/content> "Méthodes d’enseignement" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/parcours> "L2 Maths CMI Ingénierie Statistique" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/parcours> "Physique-" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/language> "Français" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/hours> "TOTAL : 40h Répartition : CM : 8h TD : 20h CI : 0h TP : 12h EAD : 0h" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU020> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/hours> "TOTAL : 4h Répartition : CM : 0h TD : 4h CI : 0h TP : 0h EAD : 0h" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU010> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU020> <http://www.w3.org/2000/01/rdf-schema#label> "Langages et automates" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/course/obtention> "Programme" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/course/level> "Licence" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/responsible> "KERVISION SYLVIE" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU040> <http://example.org/course/parcours> "L2 MIASHS" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/location> "Niveau Licence" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/parcours> "OPT/IM" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/bibliography> "Dernière modification par PATRICIA BERTONCINI, le 2024-08-23 12:44:57" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/responsible> "Volume horaire total TOTAL : 0h Répartition : CM : 0h TD : 0h CI : 0h TP : 0h EAD : 0h" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/course/responsible> "PETIT ROBERT" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/level> "Licence" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/parcours> "Chimie" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/responsible> "KERVISION SYLVIE" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/level> "Licence" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/location> "Lombarderie" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/content> "Classes abstraites" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/hours> "TOTAL : 16h Répartition : CM : 0h TD : 16h CI : 0h TP : 0h EAD : 0h" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/course/responsible> "DAILLE BEATRICE" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/bibliography> "" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/objective> "(résultats d'apprentissage)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/objective> "(résultats d'apprentissage)" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3IU020> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/course/language> "Français" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/parcours> "L2 Info-Maths CMI" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4MU050> <http://www.w3.org/2000/01/rdf-schema#label> "Optimisation 1 et Calcul integral" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/parcours> "L2 Maths CMI Ingénierie Statistique" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/course/parcours> "L2 Physique" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/parcours> "L2 Informatique" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
<http://example.org/course/UE_XLG4AU010> <http://www.w3.org/2000/01/rdf-schema#label> "2nd year English S4" <http://readrdf.org/f889fbe81301736cb80e41fca2b31d8bbefd7f63f9cb77f466828c13f61ec5a3> .
_:N4fc5a1ca18124d48b551bf9d64c1ff89 <http://schema.org/answer> "1" <http://groq.org/c079105a6b724e8e3f47a8ef51ecb7be1c3662a7252ad17f179699e45c8e9bb2> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/has_schema_type> _:N4fc5a1ca18124d48b551bf9d64c1ff89 <http://groq.org/c079105a6b724e8e3f47a8ef51ecb7be1c3662a7252ad17f179699e45c8e9bb2> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S4 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4AU010</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/c079105a6b724e8e3f47a8ef51ecb7be1c3662a7252ad17f179699e45c8e9bb2> .
_:N4fc5a1ca18124d48b551bf9d64c1ff89 <http://schema.org/explain> "The lecture covers topics such as development platforms, programming languages, and platform constraints, which align with the Knowledge Unit's content." <http://groq.org/c079105a6b724e8e3f47a8ef51ecb7be1c3662a7252ad17f179699e45c8e9bb2> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4AU010" <http://groq.org/c079105a6b724e8e3f47a8ef51ecb7be1c3662a7252ad17f179699e45c8e9bb2> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/c079105a6b724e8e3f47a8ef51ecb7be1c3662a7252ad17f179699e45c8e9bb2> .
_:N4fc5a1ca18124d48b551bf9d64c1ff89 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/c079105a6b724e8e3f47a8ef51ecb7be1c3662a7252ad17f179699e45c8e9bb2> .
_:Ndba0b7f93b48499eb3b5a5ba07c42875 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/4c9999c0044cab957c7186dcca7d3bfef36c6b4d06cfbd55c6c699a08865a53a> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU040" <http://groq.org/4c9999c0044cab957c7186dcca7d3bfef36c6b4d06cfbd55c6c699a08865a53a> .
_:Ndba0b7f93b48499eb3b5a5ba07c42875 <http://schema.org/explain> "The lecture covers some aspects of the KU but misses key components like conceptual models and semi-structured data." <http://groq.org/4c9999c0044cab957c7186dcca7d3bfef36c6b4d06cfbd55c6c699a08865a53a> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/4c9999c0044cab957c7186dcca7d3bfef36c6b4d06cfbd55c6c699a08865a53a> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Bases de données Objectif: (résultats d'apprentissage)\n- Introduction à la modélisation Merise\n- Modèle relationnel\n- Algèbre relationnelle et SQL Course content: - Passage au relationnel\n- Définition et interrogation d'une base en sql\n- Introduction au modèle olap Course name: http://example.org/course/UE_XLG4IU040</page1>\n        <page2>Pages: 116-117 HOURS CS Core = 2 KA Core = 3 DM-Modeling: Data Modeling CS\nCore: 1\\. Data modeling (See also: SE-Requirements) 2\\. Relational data model\n(See also: MSF-Discrete) KA Core: 3\\. Conceptual models (e.g., entity-\nrelationship, UML diagrams) 4\\. Semi-structured data models (expressed using\nDTD, XML, or JSON Schema, for example) Non-core: 5\\. Spreadsheet models 6\\.\nObject-oriented models (See also: FPL-OOP) a. GraphQL 7\\. New features in SQL\n8\\. Specialized Data Modeling topics a. Time series data (aggregation, join)\nb. Graph data (link traversal) c. Techniques for avoiding inefficient raw data\naccess (e.g., \"avg daily price\"): materialized views and special data\nstructures (e.g., Hyperloglog, bitmap) d. Geo-Spatial data (e.g., GIS\ndatabases) (See also: SPD-Interactive) Illustrative Learning Outcomes: CS\nCore: 1\\. Describe the components of the relational data model. 2\\. Model 1:1,\n1:n, and n:m relationships using the relational data model. KA Core: 3\\.\nDescribe the components of the E-R (or some other non-relational) data model.\n4\\. Model a given environment using a conceptual data model. 5\\. Model a given\nenvironment using the document-based or key-value store-based data model.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/4c9999c0044cab957c7186dcca7d3bfef36c6b4d06cfbd55c6c699a08865a53a> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/has_schema_type> _:Ndba0b7f93b48499eb3b5a5ba07c42875 <http://groq.org/4c9999c0044cab957c7186dcca7d3bfef36c6b4d06cfbd55c6c699a08865a53a> .
_:Ndba0b7f93b48499eb3b5a5ba07c42875 <http://schema.org/answer> "0" <http://groq.org/4c9999c0044cab957c7186dcca7d3bfef36c6b4d06cfbd55c6c699a08865a53a> .
_:Nf949334fb72a4fb9a94ff945b2b7e2b7 <http://schema.org/explain> "The lecture covers a significant portion of the KU, including topics such as logic, sets, relations, functions, and graph theory, with some overlap in the course content." <http://groq.org/a573c980ab91ce0972d5dac31cdf6d19e54852d4fbcb86e20423c7aa88222d8d> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU020" <http://groq.org/a573c980ab91ce0972d5dac31cdf6d19e54852d4fbcb86e20423c7aa88222d8d> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Logique pour l'informatique Objectif: (résultats d'apprentissage)\nconsistance et complétude d'un système de preuves.\n4. Représenter une preuve de la déduction naturelle sous forme d'arbre d'inférence.\n5. Utiliser les algorithmes d'unification et de résolution pour le raisonnement automatique sur les\nformules logiques.\n1) Raisonnement algébrique booléen\n• Dualités des connecteurs logiques\n• Formes normales conjonctive et disjonctive\n2) Systèmes de preuves\n• Système d'inférence associé à une définition inductive\n• Preuve d'appartenance à un ensemble inductif par un arbre de preuves\n• Règles d'inférences de la déduction naturelle pour la logique propositionnelle\n• Distinguer logique classique et logique intuitionniste\n3) Donner du sens aux langages logique Course content: • Interprétation, modèle, satisfiabilité, validité\n• Correspondance avec le système de preuve: correction et complétude\n4) Calcul des prédicats\n• Manipulation des quantificateurs\n• Skolémisation, forme clausale\n• Théorie logique\n5) Raisonner automatiquement sur les formules logique\n• Algorithme d'unification\n• Algorithme de résolution Course name: http://example.org/course/UE_XLG3IU020</page1>\n        <page2>Pages: 187-188 HOURS CS Core = 29 KA Core = 11 MSF-Discrete: Discrete\nMathematics CS Core: 1\\. Sets, relations, functions, cardinality 2\\. Recursive\nmathematical definitions 3\\. Proof techniques (induction, proof by\ncontradiction) 4\\. Permutations, combinations, counting, pigeonhole principle\n5\\. Modular arithmetic 6\\. Logic: truth tables, connectives (operators),\ninference rules, formulas, normal forms, simple predicate logic 7\\. Graphs:\nbasic definitions 8\\. Order notation Illustrative Learning Outcomes: CS Core:\n1\\. Sets, Relations, and Functions, Cardinality a. Explain with examples the\nbasic terminology of functions, relations, and sets. b. Perform the operations\nassociated with sets, functions, and relations. c. Relate practical examples\nto the appropriate set, function, or relation model, and interpret the\nassociated operations and terminology in context. d. Calculate the size of a\nfinite set, including making use of the sum and product rules and inclusion-\nexclusion principle. e. Explain the difference between finite, countable, and\nuncountable sets. 2\\. Recursive mathematical definitions a. Apply recursive\ndefinitions of sequences or structures (e.g., Fibonacci numbers, linked lists,\nparse trees, fractals). b. Formulate inductive proofs of statements about\nrecursive definitions. c. Solve a variety of basic recurrence relations. d.\nAnalyze a problem to determine underlying recurrence relations. e. Given a\nrecursive/iterative code snippet, describe its underlying recurrence relation,\nhypothesize a closed form for the recurrence relation, and prove the\nhypothesis correct (usually, using induction). 3\\. Proof Techniques a.\nIdentify the proof technique used in a given proof. b. Outline the basic\nstructure of each proof technique (direct proof, proof by contradiction, and\ninduction) described in this unit. c. Apply each of the proof techniques\n(direct proof, proof by contradiction, and induction) correctly in the\nconstruction of a sound argument. d. Determine which type of proof is best for\na given problem. e. Explain the parallels between ideas of mathematical and/or\nstructural induction to recursion and recursively defined structures. f.\nExplain the relationship between weak and strong induction and give examples\nof the appropriate use of each. 4\\. Permutations, combinations, and counting\na. Apply counting arguments, including sum and product rules, inclusion-\nexclusion principle, and arithmetic/geometric progressions. b. Apply the\npigeonhole principle in the context of a formal proof. c. Compute permutations\nand combinations of a set, and interpret the meaning in the context of the\nspecific application. d. Map real-world applications to appropriate counting\nformalisms, such as determining the number of ways to arrange people around a\ntable, subject to constraints on the seating arrangement, or the number of\nways to determine certain hands in cards (e.g., a full house). 5\\. Modular\narithmetic a. Perform computations involving modular arithmetic. b. Explain\nthe notion of the greatest common divisor and apply Euclid's algorithm to\ncompute it. 6\\. Logic a. Convert logical statements from informal language to\npropositional and predicate logic expressions. b. Apply formal methods of\nsymbolic propositional and predicate logic, such as calculating validity of\nformulae, computing normal forms, or negating a logical statement. c. Use the\nrules of inference to construct proofs in propositional and predicate logic.\nd. Describe how symbolic logic can be used to model real-life situations or\napplications, including those arising in computing contexts such as software\nanalysis (e.g., program correctness), database queries, and algorithms. e.\nApply formal logic proofs and/or informal, but rigorous, logical reasoning to\nreal problems, such as predicting the behavior of software or solving problems\nsuch as puzzles. f. Describe the strengths and limitations of propositional\nand predicate logic. g. Explain what it means for a proof in propositional (or\npredicate) logic to be valid. 7\\. Graphs a. Illustrate by example the basic\nterminology of graph theory, and some of the properties and special cases of\ntypes of graphs, including trees. b. Demonstrate different traversal methods\nfor trees and graphs, including pre-, post-, and in-order traversal of trees,\nalong with breadth-first and depth-first search for graphs. c. Model a variety\nof real-world problems in computer science using appropriate forms of graphs\nand trees, such as representing a network topology, the organization of a\nhierarchical file system, or a social network. d. Show how concepts from\ngraphs and trees appear in data structures, algorithms, proof techniques\n(structural induction), and counting. KA Core: The recommended topics are the\nsame between CS core and KA-core, but with far more hours, the KA-core can\ncover these topics in depth and might include more computing-related\napplications.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/a573c980ab91ce0972d5dac31cdf6d19e54852d4fbcb86e20423c7aa88222d8d> .
_:Nf949334fb72a4fb9a94ff945b2b7e2b7 <http://schema.org/answer> "1" <http://groq.org/a573c980ab91ce0972d5dac31cdf6d19e54852d4fbcb86e20423c7aa88222d8d> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/a573c980ab91ce0972d5dac31cdf6d19e54852d4fbcb86e20423c7aa88222d8d> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/has_schema_type> _:Nf949334fb72a4fb9a94ff945b2b7e2b7 <http://groq.org/a573c980ab91ce0972d5dac31cdf6d19e54852d4fbcb86e20423c7aa88222d8d> .
_:Nf949334fb72a4fb9a94ff945b2b7e2b7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/a573c980ab91ce0972d5dac31cdf6d19e54852d4fbcb86e20423c7aa88222d8d> .
_:N51be0f6f2b144fd39dfb8c7f2936ee58 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/79ee1dd94f7f5986f33889b4b1fce3779c2d3a575451a512da17d2a3dd5e627c> .
_:N51be0f6f2b144fd39dfb8c7f2936ee58 <http://schema.org/answer> "0" <http://groq.org/79ee1dd94f7f5986f33889b4b1fce3779c2d3a575451a512da17d2a3dd5e627c> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/has_schema_type> _:N51be0f6f2b144fd39dfb8c7f2936ee58 <http://groq.org/79ee1dd94f7f5986f33889b4b1fce3779c2d3a575451a512da17d2a3dd5e627c> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU030" <http://groq.org/79ee1dd94f7f5986f33889b4b1fce3779c2d3a575451a512da17d2a3dd5e627c> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU030</page1>\n        <page2>Pages: 150-151 HOURS CS Core = 3 KA Core = 2 GIT-Fundamentals: Fundamental\nConcepts CS Core: 1\\. Overview of graphics and visualization. 2\\. Basic\ngraphics pipeline architecture. 3\\. 2D and 3D transformations. 4\\.\nRasterization and rendering techniques. 5\\. Fundamental shading models. KA\nCore: 6\\. Advanced rendering techniques. 7\\. Applications of visualization in\ndifferent fields. 8\\. Interaction methods for graphical environments.\nIllustrative Learning Outcomes: 1\\. Explain the graphics rendering pipeline.\n2\\. Differentiate between rasterization and ray tracing. 3\\. Apply\ntransformations to 2D and 3D models.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/79ee1dd94f7f5986f33889b4b1fce3779c2d3a575451a512da17d2a3dd5e627c> .
_:N51be0f6f2b144fd39dfb8c7f2936ee58 <http://schema.org/explain> "No overlap in content; lecture focuses on teaching methods while KU is technical graphics." <http://groq.org/79ee1dd94f7f5986f33889b4b1fce3779c2d3a575451a512da17d2a3dd5e627c> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/79ee1dd94f7f5986f33889b4b1fce3779c2d3a575451a512da17d2a3dd5e627c> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/b78c7991790946aca2887a2a1c6d93854fbcc3fb101b8a731f8095ac580cc5e4> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU030</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/b78c7991790946aca2887a2a1c6d93854fbcc3fb101b8a731f8095ac580cc5e4> .
_:N3e79a92b43a541e5b3a9af90a546e496 <http://schema.org/answer> "0" <http://groq.org/b78c7991790946aca2887a2a1c6d93854fbcc3fb101b8a731f8095ac580cc5e4> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU030" <http://groq.org/b78c7991790946aca2887a2a1c6d93854fbcc3fb101b8a731f8095ac580cc5e4> .
_:N3e79a92b43a541e5b3a9af90a546e496 <http://schema.org/explain> "The lecture does not cover the detailed technical content of the Knowledge Unit." <http://groq.org/b78c7991790946aca2887a2a1c6d93854fbcc3fb101b8a731f8095ac580cc5e4> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/has_schema_type> _:N3e79a92b43a541e5b3a9af90a546e496 <http://groq.org/b78c7991790946aca2887a2a1c6d93854fbcc3fb101b8a731f8095ac580cc5e4> .
_:N3e79a92b43a541e5b3a9af90a546e496 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/b78c7991790946aca2887a2a1c6d93854fbcc3fb101b8a731f8095ac580cc5e4> .
_:N618d1e0441ff4e8db8579427215303cc <http://schema.org/answer> "0" <http://groq.org/fbb997269ec99c59c8364ac35d9a0a30ee9fc9c38f6dcb9a8bb1ca54b2e38396> .
_:N618d1e0441ff4e8db8579427215303cc <http://schema.org/explain> "No overlap in topics; ecological transition vs formal methods." <http://groq.org/fbb997269ec99c59c8364ac35d9a0a30ee9fc9c38f6dcb9a8bb1ca54b2e38396> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/has_schema_type> _:N618d1e0441ff4e8db8579427215303cc <http://groq.org/fbb997269ec99c59c8364ac35d9a0a30ee9fc9c38f6dcb9a8bb1ca54b2e38396> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU020" <http://groq.org/fbb997269ec99c59c8364ac35d9a0a30ee9fc9c38f6dcb9a8bb1ca54b2e38396> .
_:N618d1e0441ff4e8db8579427215303cc <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/fbb997269ec99c59c8364ac35d9a0a30ee9fc9c38f6dcb9a8bb1ca54b2e38396> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/fbb997269ec99c59c8364ac35d9a0a30ee9fc9c38f6dcb9a8bb1ca54b2e38396> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Enjeux de la transition écologique Objectif: (résultats d'apprentissage) Course content: Programme des 9 séances en ligne (d’environ 1h30 de travail chacune) : Course name: http://example.org/course/UE_XLG3TU020</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/fbb997269ec99c59c8364ac35d9a0a30ee9fc9c38f6dcb9a8bb1ca54b2e38396> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU040" <http://groq.org/9c6517ba477da8fa2eda99696e2cf40d158c025df1c94e9ebe7594137092e337> .
_:Ndb48119af85e4acdb248c1d6db409596 <http://schema.org/explain> "The lecture covers the basics of relational databases, including entity and referential integrity, relational database design, and normalization theory, which aligns with the Knowledge Unit's content." <http://groq.org/9c6517ba477da8fa2eda99696e2cf40d158c025df1c94e9ebe7594137092e337> .
_:Ndb48119af85e4acdb248c1d6db409596 <http://schema.org/answer> "1" <http://groq.org/9c6517ba477da8fa2eda99696e2cf40d158c025df1c94e9ebe7594137092e337> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/has_schema_type> _:Ndb48119af85e4acdb248c1d6db409596 <http://groq.org/9c6517ba477da8fa2eda99696e2cf40d158c025df1c94e9ebe7594137092e337> .
_:Ndb48119af85e4acdb248c1d6db409596 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/9c6517ba477da8fa2eda99696e2cf40d158c025df1c94e9ebe7594137092e337> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/9c6517ba477da8fa2eda99696e2cf40d158c025df1c94e9ebe7594137092e337> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Bases de données Objectif: (résultats d'apprentissage)\n- Introduction à la modélisation Merise\n- Modèle relationnel\n- Algèbre relationnelle et SQL Course content: - Passage au relationnel\n- Définition et interrogation d'une base en sql\n- Introduction au modèle olap Course name: http://example.org/course/UE_XLG4IU040</page1>\n        <page2>Pages: 117-118 HOURS CS Core = 1 KA Core = 3 DM-Relational: Relational\nDatabases CS Core: 1\\. Entity and referential integrity: Candidate key,\nsuperkeys 2\\. Relational database design KA Core: 3\\. Mapping conceptual\nschema to a relational schema 4\\. Physical database design: file and storage\nstructures (See also: OS-Files) 5\\. Introduction to Functional dependency\ntheory 6\\. Normalization Theory a. Decomposition of a schema; lossless-join,\nand dependency-preservation properties of a decomposition b. Normal forms\n(BCNF) c. Denormalization (for efficiency) Non-core: 7\\. Functional dependency\ntheory a. Closure of a set of attributes b. Canonical Cover 8\\. Normalization\ntheory a. Multi-valued dependency (4NF) b. Join dependency (PJNF, 5NF) c.\nRepresentation theory Illustrative Learning Outcomes: CS Core: 1\\. Describe\nthe defining characteristics behind the relational data model. 2\\. Comment on\nthe difference between a foreign key and a superkey. 3\\. Enumerate the\ndifferent types of integrity constraints. KA Core: 4\\. Compose a relational\nschema from a conceptual schema which contains 1:1, 1:n, and n:m\nrelationships. 5\\. Map appropriate file structure to relations and indices.\n6\\. Describe how functional dependency theory generalizes the notion of key.\n7\\. Defend a given decomposition as lossless and or dependency preserving. 8\\.\nDetect which normal form a given decomposition yields. 9\\. Comment on reasons\nfor denormalizing a relation.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/9c6517ba477da8fa2eda99696e2cf40d158c025df1c94e9ebe7594137092e337> .
_:Nb02337fce463435095c75fbd71a149bc <http://schema.org/explain> "The lecture content does not substantially cover the knowledge unit described." <http://groq.org/c2fdf94e95b66ed5022c7ef30504a6e88012404a50a8a5fe118d7ca0eff08fe3> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Analyse et Algebre lineaire 2 Objectif: (résultats d'apprentissage) • Course content: • Course name: http://example.org/course/UE_XLG3MU030</page1>\n        <page2>Pages: 178-179 HOURS CS Core = 1 KA Core = 2 HCI-Evaluation: Evaluating the\nDesign CS Core: 1\\. Methods for evaluation with users a. Formative (e.g.,\nneeds-finding, exploratory analysis) and summative assessment (e.g.,\nfunctionality and usability testing) b. Elements to evaluate (e.g., utility,\nefficiency, learnability, user satisfaction, affective elements such as\npleasure and engagement) c. Understanding ethical approval requirements before\nengaging in user research (See also: SETools, SEP-Ethical-Analysis, SEP-\nSecurity, SEP-Privacy, SEP-Professional-Ethics) KA Core: 2\\. Methods for\nevaluation with users (See also: SE-Validation) a. Qualitative methods\n(qualitative coding and thematic analysis) b. Quantitative methods\n(statistical tests) c. Mixed methods (e.g., observation, think-aloud,\ninterview, survey, experiment) d. Presentation requirements (e.g., reports,\npersonas) e. User-centered testing f. Heuristic evaluation g. Challenges and\nshortcomings to effective evaluation (e.g., sampling, generalization) 3\\.\nStudy planning a. How to set study goals b. Hypothesis design c. Approvals\nfrom Institutional Research Boards and ethics committees (See also: SEP-\nEthicalAnalysis, SEP-Security, SEP-Privacy) d. How to pre-register a study e.\nWithin-subjects vs between-subjects design 4\\. Implications and impacts of\ndesign with respect to the environment, material, society, security, privacy,\nethics, and broader impacts. (See also: SEC-Foundations) a. The environment b.\nMaterial c. Society d. Security e. Privacy f. Ethics g. Broader impacts Non-\ncore: 5\\. Techniques and tools for quantitative analysis a. Statistical\npackages b. Visualization tools c. Statistical tests (e.g., ANOVA, t-tests,\npost-hoc analysis, parametric vs non-parametric tests) d. Data exploration and\nvisual analytics; how to calculate effect size. 6\\. Data management a. Data\nstorage and data sharing (open science) b. Sensitivity and identifiability.\nIllustrative Learning Outcomes: CS Core: 1\\. Discuss the differences between\nformative and summative assessment and their role in evaluating design KA\nCore: 2\\. Select appropriate formative or summative evaluation methods at\ndifferent points throughout the development of a design. 3\\. Discuss the\nbenefits of using both qualitative and quantitative methods for evaluation.\n4\\. Evaluate the implications and broader impacts of a given design. 5\\. Plan\na usability evaluation for a given user interface, and justify its study\ngoals, hypothesis design, and study design. 6\\. Conduct a usability evaluation\nof a given user interface and draw defensible conclusions given the study\ndesign. Non-core: 7\\. Select and run appropriate statistical tests on provided\nstudy data to test for significance in the results. 8\\. Pre-register a study\ndesign, with planned statistical tests</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/c2fdf94e95b66ed5022c7ef30504a6e88012404a50a8a5fe118d7ca0eff08fe3> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/c2fdf94e95b66ed5022c7ef30504a6e88012404a50a8a5fe118d7ca0eff08fe3> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/has_schema_type> _:Nb02337fce463435095c75fbd71a149bc <http://groq.org/c2fdf94e95b66ed5022c7ef30504a6e88012404a50a8a5fe118d7ca0eff08fe3> .
_:Nb02337fce463435095c75fbd71a149bc <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/c2fdf94e95b66ed5022c7ef30504a6e88012404a50a8a5fe118d7ca0eff08fe3> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3MU030" <http://groq.org/c2fdf94e95b66ed5022c7ef30504a6e88012404a50a8a5fe118d7ca0eff08fe3> .
_:Nb02337fce463435095c75fbd71a149bc <http://schema.org/answer> "0" <http://groq.org/c2fdf94e95b66ed5022c7ef30504a6e88012404a50a8a5fe118d7ca0eff08fe3> .
_:N830e625dd1bc4ec0977b5163eff74dd1 <http://schema.org/explain> "The lecture covers most of the topics mentioned in the KU, including classes, inheritance, polymorphism, and object-oriented design." <http://groq.org/de3a074f5910d369dd3644c8a7e785f3b0faba183d1b7804fd022e6d26491de9> .
_:N830e625dd1bc4ec0977b5163eff74dd1 <http://schema.org/answer> "1" <http://groq.org/de3a074f5910d369dd3644c8a7e785f3b0faba183d1b7804fd022e6d26491de9> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Programmation à Objets Objectif: (résultats d'apprentissage) Connaître les mécanismes d’héritage et de polymorphisme Course content: Classes abstraites Course name: http://example.org/course/UE_XLG3IU030</page1>\n        <page2>Pages: 130-131 HOURS CS Core = 4 + 1 (SDF) KA Core = 1 FPL-OOP: Object-\nOriented Programming CS Core: 1\\. Imperative programming as a subset of\nobject-oriented programming. 2\\. Object-oriented design: a. Decomposition into\nobjects carrying state and having behavior. b. Class-hierarchy design for\nmodeling. 3\\. Definition of classes: fields, methods, and constructors. (See\nalso: SDF-Fundamentals) 4\\. Subclasses, inheritance (including multiple\ninheritance), and method overriding. 5\\. Dynamic dispatch: definition of\nmethod-call. 6\\. Exception handling. (See also: SDF-Fundamentals, PDC-\nCoordination, SE-Construction) 7\\. Object-oriented idioms for encapsulation:\na. Privacy, data hiding, and visibility of class members. b. Interfaces\nrevealing only method signatures. c. Abstract base classes, traits and mixins.\n8\\. Dynamic vs static properties. 9\\. Composition vs inheritance. 10\\.\nSubtyping: a. Subtype polymorphism; implicit upcasts in typed languages. b.\nNotion of behavioral replacement: subtypes acting like supertype. c.\nRelationship between subtyping and inheritance. KA Core: 11\\. Collection\nclasses, iterators, and other common library components. 12\\. Metaprogramming\nand reflection. Illustrative Learning Outcomes: CS Core: 1\\. Enumerate the\ndifferences between imperative and object-oriented programming paradigms. 2\\.\nCompose a class through design, implementation, and testing to meet behavioral\nrequirements. 3\\. Build a simple class hierarchy utilizing subclassing that\nallows code to be reused for distinct subclasses. 4\\. Predict and validate\ncontrol flow in a program using dynamic dispatch. 5\\. Compare and contrast how\ncomputational solutions to a problem differ in procedural, functional, and\nobject-oriented approaches. 6\\. Compare and contrast mechanisms to define and\nprotect data elements within procedural, functional, and object-oriented\napproaches. 7\\. Compare and contrast the benefits and costs/impact of using\ninheritance (subclasses) and composition (specifically, how to base\ncomposition on higher order functions). 8\\. Explain the relationship between\nobject-oriented inheritance (code-sharing and overriding) and subtyping (the\nidea of a subtype being usable in a context that expects the supertype). 9\\.\nUse object-oriented encapsulation mechanisms such as interfaces and private\nmembers. 10\\. Define and use iterators and other operations on aggregates,\nincluding operations that take functions as arguments, in multiple programming\nlanguages, selecting the most natural idioms for each language. (See also:\nFPL-Functional) KA Core: 11\\. Use collection classes and iterators effectively\nto solve a problem.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/de3a074f5910d369dd3644c8a7e785f3b0faba183d1b7804fd022e6d26491de9> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU030" <http://groq.org/de3a074f5910d369dd3644c8a7e785f3b0faba183d1b7804fd022e6d26491de9> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/has_schema_type> _:N830e625dd1bc4ec0977b5163eff74dd1 <http://groq.org/de3a074f5910d369dd3644c8a7e785f3b0faba183d1b7804fd022e6d26491de9> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/de3a074f5910d369dd3644c8a7e785f3b0faba183d1b7804fd022e6d26491de9> .
_:N830e625dd1bc4ec0977b5163eff74dd1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/de3a074f5910d369dd3644c8a7e785f3b0faba183d1b7804fd022e6d26491de9> .
_:N3b8dd3626b1546eebb50aaf14748b117 <http://schema.org/explain> "Lecture focuses on optimization and calculus, while KU covers functional programming concepts." <http://groq.org/15a5a2d1dc83707068abf7f52f5976e4d4e154006483579e0ed7d918892ee308> .
_:N3b8dd3626b1546eebb50aaf14748b117 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/15a5a2d1dc83707068abf7f52f5976e4d4e154006483579e0ed7d918892ee308> .
_:N3b8dd3626b1546eebb50aaf14748b117 <http://schema.org/answer> "0" <http://groq.org/15a5a2d1dc83707068abf7f52f5976e4d4e154006483579e0ed7d918892ee308> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Optimisation 1 et Calcul integral Objectif: (résultats d'apprentissage)\n• Course content: • Course name: http://example.org/course/UE_XLG4MU050</page1>\n        <page2>Pages: 131-132-133 HOURS CS Core = 4 KA Core = 3 FPL-Functional: Functional\nProgramming CS Core: 1\\. Lambda expressions and evaluation: (See also: AL-\nModels, FPL-Formalism) a. Variable binding and scope rules. (See also: SDF-\nFundamentals) b. Parameter-passing. (See also: SDF-Fundamentals) c. Nested\nlambda expressions and reduction order. 2\\. Effect-free programming: a.\nFunction calls have no side effects, facilitating compositional reasoning. b.\nImmutable variables and data copying vs reduction. c. Use of recursion vs\nloops vs pipelining (map/reduce). 3\\. Processing structured data (e.g., trees)\nvia functions with cases for each data variant: a. Functions defined over\ncompound data in terms of functions applied to the constituent pieces. b.\nPersistent data structures. 4\\. Using higher-order functions (taking,\nreturning, and storing functions). KA Core: 5\\. Metaprogramming and\nreflection. 6\\. Function closures (functions using variables in the enclosing\nlexical environment). a. Basic meaning and definition - creating closures at\nrun-time by capturing the environment. b. Canonical idioms: call-backs,\narguments to iterators, reusable code via function arguments. c. Using a\nclosure to encapsulate data in its environment. d. Delayed versus eager\nevaluation. Non-core: 7\\. Graph reduction machine and call-by-need. 8\\.\nImplementing delayed evaluation. 9\\. Integration with logic programming\nparadigm using concepts such as equational logic, narrowing, residuation and\nsemantic unification. (See also: FPL-Logic) 10\\. Integration with other\nprogramming paradigms such as imperative and object-oriented. Illustrative\nlearning outcomes: CS Core: 1\\. Develop basic algorithms that avoid assigning\nto mutable states or considering reference equality. 2\\. Develop useful\nfunctions that take and return other functions. 3\\. Compare and contrast how\ncomputational solutions to a problem differ in procedural, functional, and\nobject-oriented approaches. 4\\. Compare and contrast mechanisms to define and\nprotect data elements within procedural, functional, and object-oriented\napproaches. KA Core: 5\\. Explain a simple example of lambda expression being\nimplemented using a virtual machine, such as a SECD machine, showing storage\nand reclaim of the environment. 6\\. Correctly interpret variables and lexical\nscope in a program using function closures. 7\\. Use functional encapsulation\nmechanisms such as closures and modular interfaces. 8\\. Compare and contrast\nstateful vs stateless execution. 9\\. Define and use iterators and other\noperations on aggregates, including operations that take functions as\narguments, in multiple programming languages, selecting the most natural\nidioms for each language. (See also: FPL-OOP) Non-core: 10\\. Illustrate graph\nreduction using a l-expression using a shared subexpression. 11\\. Illustrate\nthe execution of a simple nested l-expression using an abstract machine, such\nas an ABC machine. 12\\. Illustrate narrowing, residuation, and semantic\nunification using simple illustrative examples. 13\\. Illustrate the\nconcurrency constructs using simple programming examples of known concepts\nsuch as a buffer being read and written concurrently or sequentially. (See\nalso: FPL-OOP)</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/15a5a2d1dc83707068abf7f52f5976e4d4e154006483579e0ed7d918892ee308> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/15a5a2d1dc83707068abf7f52f5976e4d4e154006483579e0ed7d918892ee308> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4MU050" <http://groq.org/15a5a2d1dc83707068abf7f52f5976e4d4e154006483579e0ed7d918892ee308> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/has_schema_type> _:N3b8dd3626b1546eebb50aaf14748b117 <http://groq.org/15a5a2d1dc83707068abf7f52f5976e4d4e154006483579e0ed7d918892ee308> .
_:Na5f10b4f4b674d4ab7da6fa18a303fcf <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/fd956d042fe40bd86bb76817d4cca8c22b8aa88093c40d9e0038f53468297e50> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Logique pour l'informatique Objectif: (résultats d'apprentissage)\nconsistance et complétude d'un système de preuves.\n4. Représenter une preuve de la déduction naturelle sous forme d'arbre d'inférence.\n5. Utiliser les algorithmes d'unification et de résolution pour le raisonnement automatique sur les\nformules logiques.\n1) Raisonnement algébrique booléen\n• Dualités des connecteurs logiques\n• Formes normales conjonctive et disjonctive\n2) Systèmes de preuves\n• Système d'inférence associé à une définition inductive\n• Preuve d'appartenance à un ensemble inductif par un arbre de preuves\n• Règles d'inférences de la déduction naturelle pour la logique propositionnelle\n• Distinguer logique classique et logique intuitionniste\n3) Donner du sens aux langages logique Course content: • Interprétation, modèle, satisfiabilité, validité\n• Correspondance avec le système de preuve: correction et complétude\n4) Calcul des prédicats\n• Manipulation des quantificateurs\n• Skolémisation, forme clausale\n• Théorie logique\n5) Raisonner automatiquement sur les formules logique\n• Algorithme d'unification\n• Algorithme de résolution Course name: http://example.org/course/UE_XLG3IU020</page1>\n        <page2>Pages: 145-146 HOURS CS Core = 0 KA Core = 0 FPL-Formalism: Formal Semantics\nNon-core: 1\\. Syntax vs semantics 2\\. Approaches to semantics: axiomatic,\noperational, denotational, type-based 3\\. Axiomatic semantics of abstract\nconstructs such as assignment, selection, iteration using precondition, post-\nconditions, and loop invariant 4\\. Operational semantics analysis of abstract\nconstructs and sequence of such as assignment, expression evaluation,\nselection, iteration using environment and store a. Symbolic execution b.\nConstraint checkers 5\\. Denotational semantics a. Lambda Calculus. (See also:\nAL-Models, FPL-Functional) 6\\. Proofs by induction over language semantics 7\\.\nFormal definitions and proofs for type systems (See also: FPL-Types) a.\nPropositions as types (implication as a function, conjunction as a product,\ndisjunction as a sum) b. Dependent types (universal quantification as\ndependent function, existential quantification as dependent product) c.\nParametricity Illustrative learning outcomes: Non-core: 1\\. Construct formal\nsemantics for a small language. 2\\. Write a lambda-calculus program and show\nits evaluation to a normal form. 3\\. Discuss the different approaches of\noperational, denotational, and axiomatic semantics. 4\\. Use induction to prove\nproperties of all programs in a language. 5\\. Use induction to prove\nproperties of all programs in a language that is well-typed according to a\nformally defined type system. 6\\. Use parametricity to establish the behavior\nof code given only its type.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/fd956d042fe40bd86bb76817d4cca8c22b8aa88093c40d9e0038f53468297e50> .
_:Na5f10b4f4b674d4ab7da6fa18a303fcf <http://schema.org/answer> "1" <http://groq.org/fd956d042fe40bd86bb76817d4cca8c22b8aa88093c40d9e0038f53468297e50> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/has_schema_type> _:Na5f10b4f4b674d4ab7da6fa18a303fcf <http://groq.org/fd956d042fe40bd86bb76817d4cca8c22b8aa88093c40d9e0038f53468297e50> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU020" <http://groq.org/fd956d042fe40bd86bb76817d4cca8c22b8aa88093c40d9e0038f53468297e50> .
_:Na5f10b4f4b674d4ab7da6fa18a303fcf <http://schema.org/explain> "The lecture covers topics such as logical deduction, proof systems, and formal semantics, which are all relevant to the Knowledge Unit's content." <http://groq.org/fd956d042fe40bd86bb76817d4cca8c22b8aa88093c40d9e0038f53468297e50> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/fd956d042fe40bd86bb76817d4cca8c22b8aa88093c40d9e0038f53468297e50> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/has_schema_type> _:N507e1b6b572d44488d0e883a9e4b06ae <http://groq.org/fe6a168ee7c0cfd698a956003a874f1d17ee839d2d03f7643a05e01f2d16fa0b> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU020" <http://groq.org/fe6a168ee7c0cfd698a956003a874f1d17ee839d2d03f7643a05e01f2d16fa0b> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/fe6a168ee7c0cfd698a956003a874f1d17ee839d2d03f7643a05e01f2d16fa0b> .
_:N507e1b6b572d44488d0e883a9e4b06ae <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/fe6a168ee7c0cfd698a956003a874f1d17ee839d2d03f7643a05e01f2d16fa0b> .
_:N507e1b6b572d44488d0e883a9e4b06ae <http://schema.org/answer> "0" <http://groq.org/fe6a168ee7c0cfd698a956003a874f1d17ee839d2d03f7643a05e01f2d16fa0b> .
_:N507e1b6b572d44488d0e883a9e4b06ae <http://schema.org/explain> "The lecture covers some related topics but lacks detailed coverage of parsing strategies and error recovery." <http://groq.org/fe6a168ee7c0cfd698a956003a874f1d17ee839d2d03f7643a05e01f2d16fa0b> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Langages et automates Objectif: (résultats d'apprentissage)\n5. Course content: • Langages algébriques\n- Grammaire algébrique\n- Arbre de dérivation\n- Automates à pile\n• Hiérarchie de Chomsky\n- Classification des grammaires;\n- Algorithmes de reconnaissance pour les grammaires de type 1 et 2\n• Analyse lexicale et syntaxique\n- TP de flex et bison Course name: http://example.org/course/UE_XLG4IU020</page1>\n        <page2>Pages: 141 HOURS CS Core = 0 KA Core = 0 FPL-Syntax: Syntax Analysis Non-core:\n1\\. Regular grammars vs context-free grammars (See also: AL-Models) 2\\.\nScanning and parsing based on language specifications 3\\. Lexical analysis\nusing regular expressions 4\\. Tokens and their use 5\\. Parsing strategies\nincluding top-down (e.g., recursive descent, or LL) and bottom-up (e.g., LR or\nGLR) techniques a. Lookahead tables and their application to parsing 6\\.\nLanguage theory: a. Chomsky hierarchy (See also: AL-Models) b. Left-\nmost/right-most derivation and ambiguity c. Grammar transformation 7\\. Parser\nerror recovery mechanisms 8\\. Generating scanners and parsers from declarative\nspecifications Illustrative learning outcomes: Non-core: 1\\. Use formal\ngrammars to specify the syntax of languages. 2\\. Illustrate the role of\nlookahead tables in parsing. 3\\. Use declarative tools to generate parsers and\nscanners. 4\\. Recognize key issues in syntax definitions: ambiguity,\nassociativity, precedence.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/fe6a168ee7c0cfd698a956003a874f1d17ee839d2d03f7643a05e01f2d16fa0b> .
_:Nbb9d36cf49fc4cef895e58af55470dce <http://schema.org/explain> "The lecture focuses on linear algebra, not data modeling." <http://groq.org/770359799089837e462534ae548830ea9ebab366d752a2aeabd56235e7d292af> .
_:Nbb9d36cf49fc4cef895e58af55470dce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/770359799089837e462534ae548830ea9ebab366d752a2aeabd56235e7d292af> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3MU030" <http://groq.org/770359799089837e462534ae548830ea9ebab366d752a2aeabd56235e7d292af> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/770359799089837e462534ae548830ea9ebab366d752a2aeabd56235e7d292af> .
_:Nbb9d36cf49fc4cef895e58af55470dce <http://schema.org/answer> "0" <http://groq.org/770359799089837e462534ae548830ea9ebab366d752a2aeabd56235e7d292af> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Analyse et Algebre lineaire 2 Objectif: (résultats d'apprentissage) • Course content: • Course name: http://example.org/course/UE_XLG3MU030</page1>\n        <page2>Pages: 116-117 HOURS CS Core = 2 KA Core = 3 DM-Modeling: Data Modeling CS\nCore: 1\\. Data modeling (See also: SE-Requirements) 2\\. Relational data model\n(See also: MSF-Discrete) KA Core: 3\\. Conceptual models (e.g., entity-\nrelationship, UML diagrams) 4\\. Semi-structured data models (expressed using\nDTD, XML, or JSON Schema, for example) Non-core: 5\\. Spreadsheet models 6\\.\nObject-oriented models (See also: FPL-OOP) a. GraphQL 7\\. New features in SQL\n8\\. Specialized Data Modeling topics a. Time series data (aggregation, join)\nb. Graph data (link traversal) c. Techniques for avoiding inefficient raw data\naccess (e.g., \"avg daily price\"): materialized views and special data\nstructures (e.g., Hyperloglog, bitmap) d. Geo-Spatial data (e.g., GIS\ndatabases) (See also: SPD-Interactive) Illustrative Learning Outcomes: CS\nCore: 1\\. Describe the components of the relational data model. 2\\. Model 1:1,\n1:n, and n:m relationships using the relational data model. KA Core: 3\\.\nDescribe the components of the E-R (or some other non-relational) data model.\n4\\. Model a given environment using a conceptual data model. 5\\. Model a given\nenvironment using the document-based or key-value store-based data model.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/770359799089837e462534ae548830ea9ebab366d752a2aeabd56235e7d292af> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/has_schema_type> _:Nbb9d36cf49fc4cef895e58af55470dce <http://groq.org/770359799089837e462534ae548830ea9ebab366d752a2aeabd56235e7d292af> .
_:N5f8117f7bc664a608e9c69fa92cee598 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/daa1e9d4ad3832fed893cc14794a11c650eceeaa0a0b59b50dd3027c2320da15> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU040" <http://groq.org/daa1e9d4ad3832fed893cc14794a11c650eceeaa0a0b59b50dd3027c2320da15> .
_:N5f8117f7bc664a608e9c69fa92cee598 <http://schema.org/answer> "1" <http://groq.org/daa1e9d4ad3832fed893cc14794a11c650eceeaa0a0b59b50dd3027c2320da15> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/has_schema_type> _:N5f8117f7bc664a608e9c69fa92cee598 <http://groq.org/daa1e9d4ad3832fed893cc14794a11c650eceeaa0a0b59b50dd3027c2320da15> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Bases de données Objectif: (résultats d'apprentissage)\n- Introduction à la modélisation Merise\n- Modèle relationnel\n- Algèbre relationnelle et SQL Course content: - Passage au relationnel\n- Définition et interrogation d'une base en sql\n- Introduction au modèle olap Course name: http://example.org/course/UE_XLG4IU040</page1>\n        <page2>Pages: 116-117 HOURS CS Core = 2 KA Core = 3 DM-Modeling: Data Modeling CS\nCore: 1\\. Data modeling (See also: SE-Requirements) 2\\. Relational data model\n(See also: MSF-Discrete) KA Core: 3\\. Conceptual models (e.g., entity-\nrelationship, UML diagrams) 4\\. Semi-structured data models (expressed using\nDTD, XML, or JSON Schema, for example) Non-core: 5\\. Spreadsheet models 6\\.\nObject-oriented models (See also: FPL-OOP) a. GraphQL 7\\. New features in SQL\n8\\. Specialized Data Modeling topics a. Time series data (aggregation, join)\nb. Graph data (link traversal) c. Techniques for avoiding inefficient raw data\naccess (e.g., \"avg daily price\"): materialized views and special data\nstructures (e.g., Hyperloglog, bitmap) d. Geo-Spatial data (e.g., GIS\ndatabases) (See also: SPD-Interactive) Illustrative Learning Outcomes: CS\nCore: 1\\. Describe the components of the relational data model. 2\\. Model 1:1,\n1:n, and n:m relationships using the relational data model. KA Core: 3\\.\nDescribe the components of the E-R (or some other non-relational) data model.\n4\\. Model a given environment using a conceptual data model. 5\\. Model a given\nenvironment using the document-based or key-value store-based data model.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/daa1e9d4ad3832fed893cc14794a11c650eceeaa0a0b59b50dd3027c2320da15> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/daa1e9d4ad3832fed893cc14794a11c650eceeaa0a0b59b50dd3027c2320da15> .
_:N5f8117f7bc664a608e9c69fa92cee598 <http://schema.org/explain> "Covers relational model, SQL, and Merise (conceptual modeling), but lacks semi-structured/data models (XML/JSON)" <http://groq.org/daa1e9d4ad3832fed893cc14794a11c650eceeaa0a0b59b50dd3027c2320da15> .
_:Nc6425d54e8c74ff69cfbeb7798acbd23 <http://schema.org/explain> "Lecture focuses on ecological transition, while KU covers programming language design principles with minimal overlap (only green computing)." <http://groq.org/326a44462582b2d8d5ae67bb2bb5833e5465125d3e713833fa24b504da2c6346> .
_:Nc6425d54e8c74ff69cfbeb7798acbd23 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/326a44462582b2d8d5ae67bb2bb5833e5465125d3e713833fa24b504da2c6346> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Enjeux de la transition écologique Objectif: (résultats d'apprentissage) Course content: Programme des 9 séances en ligne (d’environ 1h30 de travail chacune) : Course name: http://example.org/course/UE_XLG3TU020</page1>\n        <page2>Pages: 146-147 HOURS CS Core = 0 KA Core = 0 FPL-Design: Design Principles of\nProgramming Languages Non-core: 1\\. Language design principles a. Simplicity\nb. Security (See also: SEC-Coding) c. Fast translation d. Efficient object\ncode e. Orthogonality f. Readability g. Completeness h. Implementation\nstrategies 2\\. Designing a language to fit a specific domain or problem 3\\.\nInteroperability between programming languages 4\\. Language portability 5\\.\nFormal description of a programming language 6\\. Green computing principles\n(See also: SEP-Sustainability) Illustrative Learning Outcomes: Non-core: 1\\.\nUnderstand what constitutes good language design and apply that knowledge to\nevaluate a real programming language.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/326a44462582b2d8d5ae67bb2bb5833e5465125d3e713833fa24b504da2c6346> .
_:Nc6425d54e8c74ff69cfbeb7798acbd23 <http://schema.org/answer> "0" <http://groq.org/326a44462582b2d8d5ae67bb2bb5833e5465125d3e713833fa24b504da2c6346> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU020" <http://groq.org/326a44462582b2d8d5ae67bb2bb5833e5465125d3e713833fa24b504da2c6346> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/326a44462582b2d8d5ae67bb2bb5833e5465125d3e713833fa24b504da2c6346> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/has_schema_type> _:Nc6425d54e8c74ff69cfbeb7798acbd23 <http://groq.org/326a44462582b2d8d5ae67bb2bb5833e5465125d3e713833fa24b504da2c6346> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/has_schema_type> _:N3d25c729fc03423b830aea2f0f261b53 <http://groq.org/ed6e701b0b0c94841f720989f8026b097a317f25ba07c90a570f65f4e1e5f2d8> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3AU010</page1>\n        <page2>Pages:79-80 HOURS CS Core = 0 KA Core = 0 AI-NLP: Natural Language Processing\nNon-core: 1\\. Deterministic and stochastic grammars 2\\. Parsing algorithms a.\nCFGs and chart parsers (e.g., CYK) b. Probabilistic CFGs and weighted CYK 3\\.\nRepresenting meaning/Semantics a. Logic-based knowledge representations b.\nSemantic roles c. Temporal representations d. Beliefs, desires, and intentions\n4\\. Corpus-based methods 5\\. N-grams and HMMs 6\\. Smoothing and backoff 7\\.\nExamples of use: POS tagging and morphology 8\\. Information retrieval (See\nalso: DM-Unstructured) a. Vector space model i. TF & IDF b. Precision and\nrecall 9\\. Information extraction 10\\. Language translation 11\\. Text\nclassification, categorization a. Bag of words model 12\\. Deep learning for\nNLP (See also: AI-ML) a. RNNs b. Transformers c. Multi-modal embeddings (e.g.,\nimages + text) d. Generative language models Illustrative Learning Outcomes:\n1\\. Define and contrast deterministic and stochastic grammars, providing\nexamples to show the adequacy of each. 2\\. Simulate, apply, or implement\nclassic and stochastic algorithms for parsing natural language. 3\\. Identify\nthe challenges of representing meaning. 4\\. List the advantages of using\nstandard corpora. Identify examples of current corpora for a variety of NLP\ntasks. 5\\. Identify techniques for information retrieval, language\ntranslation, and text classification. 6\\. Implement a TF/IDF transform, use it\nto extract features from a corpus, and train an off-the-shelf machine learning\nalgorithm using those features to do text classification.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/ed6e701b0b0c94841f720989f8026b097a317f25ba07c90a570f65f4e1e5f2d8> .
_:N3d25c729fc03423b830aea2f0f261b53 <http://schema.org/answer> "1" <http://groq.org/ed6e701b0b0c94841f720989f8026b097a317f25ba07c90a570f65f4e1e5f2d8> .
_:N3d25c729fc03423b830aea2f0f261b53 <http://schema.org/explain> "The lecture covers a significant portion of the KU, including topics such as deterministic and stochastic grammars, parsing algorithms, and natural language processing." <http://groq.org/ed6e701b0b0c94841f720989f8026b097a317f25ba07c90a570f65f4e1e5f2d8> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3AU010" <http://groq.org/ed6e701b0b0c94841f720989f8026b097a317f25ba07c90a570f65f4e1e5f2d8> .
_:N3d25c729fc03423b830aea2f0f261b53 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/ed6e701b0b0c94841f720989f8026b097a317f25ba07c90a570f65f4e1e5f2d8> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/ed6e701b0b0c94841f720989f8026b097a317f25ba07c90a570f65f4e1e5f2d8> .
_:Nc863674735654289b7cd63ca2df0989e <http://example.org/has_score> "0.6454415"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/44106c1fdce2201b86969cbb0eb5d92ee12489fd17975a4f83018d1b93bb5d78> .
_:N209e6c416f314c9eb3f0576963d36017 <http://example.org/has_score> "0.6372254"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/44106c1fdce2201b86969cbb0eb5d92ee12489fd17975a4f83018d1b93bb5d78> .
_:N209e6c416f314c9eb3f0576963d36017 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/44106c1fdce2201b86969cbb0eb5d92ee12489fd17975a4f83018d1b93bb5d78> .
_:Nc863674735654289b7cd63ca2df0989e <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://faiss.org/44106c1fdce2201b86969cbb0eb5d92ee12489fd17975a4f83018d1b93bb5d78> .
<http://example.org/faiss> <http://example.org/input> "Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU030" <http://faiss.org/44106c1fdce2201b86969cbb0eb5d92ee12489fd17975a4f83018d1b93bb5d78> .
_:Ndc379a028fbc422d81c634132a342b01 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Graphics_and_Interactive_Techniques_GIT/GIT-Fundamentals.txt> <http://faiss.org/44106c1fdce2201b86969cbb0eb5d92ee12489fd17975a4f83018d1b93bb5d78> .
_:Ndc379a028fbc422d81c634132a342b01 <http://example.org/has_chunk> "Illustrative Learning Outcomes:\n1. Explain the graphics rendering pipeline.\n2. Differentiate between rasterization and ray tracing.\n3. Apply transformations to 2D and 3D models." <http://faiss.org/44106c1fdce2201b86969cbb0eb5d92ee12489fd17975a4f83018d1b93bb5d78> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/is_aligned_with> _:N209e6c416f314c9eb3f0576963d36017 <http://faiss.org/44106c1fdce2201b86969cbb0eb5d92ee12489fd17975a4f83018d1b93bb5d78> .
_:N209e6c416f314c9eb3f0576963d36017 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://faiss.org/44106c1fdce2201b86969cbb0eb5d92ee12489fd17975a4f83018d1b93bb5d78> .
_:Ndc379a028fbc422d81c634132a342b01 <http://example.org/has_score> "0.6342715"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/44106c1fdce2201b86969cbb0eb5d92ee12489fd17975a4f83018d1b93bb5d78> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/is_aligned_with> _:Nc863674735654289b7cd63ca2df0989e <http://faiss.org/44106c1fdce2201b86969cbb0eb5d92ee12489fd17975a4f83018d1b93bb5d78> .
_:Nc863674735654289b7cd63ca2df0989e <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://faiss.org/44106c1fdce2201b86969cbb0eb5d92ee12489fd17975a4f83018d1b93bb5d78> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/is_aligned_with> _:Ndc379a028fbc422d81c634132a342b01 <http://faiss.org/44106c1fdce2201b86969cbb0eb5d92ee12489fd17975a4f83018d1b93bb5d78> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU010" <http://groq.org/91f234c8d1c9b66dd2e401717aad01c367db8fe6bf1d1cc8d4b75725a01a3457> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 1 Objectif: (résultats d'apprentissage)\n•\nÉvaluer une implémentation de structure de données en temps et en place mémoire (coûts minimal,\nmaximal, amorti)\n• Course content: et mise en pratique dans l’approche de résolution de problèmes « Diviser pour régner ». Course name: http://example.org/course/UE_XLG3IU010</page1>\n        <page2>Pages:91-93 HOURS CS Core = 6 KA Core = 3 AL-Complexity: Complexity CS Core:\n1\\. Complexity Analysis Framework a. Best, average, and worst-case performance\nof an algorithm b. Empirical and relative (Order of Growth) measurements c.\nInput size and primitive operations d. Time and space efficiency 2\\.\nAsymptotic complexity analysis (average and worst-case bounds) a. Big-O, Big-\nOmega, and Big-Theta formal notations b. Foundational Complexity Classes and\nRepresentative Examples/Problems i. O(1) Constant (e.g., array access) ii.\nO(log2 n) Logarithmic (e.g., binary search) iii. O(n) Linear (e.g., linear\nsearch) iv. O(n log2 n) Log Linear (e.g., mergesort) v. O(n2) Quadratic (e.g.,\nselection sort) vi. O(nc) Polynomial (e.g., O(n3) Gaussian elimination) vii.\nO(2n) Exponential (e.g., Knapsack, Satisfiability (SAT), Traveling Sales-\nPerson (TSP), all subsets) viii. O(n!) Factorial (e.g., Hamiltonian circuit,\nall permutations) 3\\. Empirical measurements of performance 4\\. Tractability\nand intractability a. P, NP, and NP-Complete Complexity Classes b. NP-Complete\nProblems (e.g., SAT, Knapsack, TSP) c. Reductions 5\\. Time and space tradeoffs\nin algorithms 92 KA Core: 6\\. Little-o, Little-Omega, and Little Theta\nnotations 7\\. Formal recursive analysis 8\\. Amortized analysis 9\\. Turing\nMachine-based models of complexity a. Time complexity i. P, NP, NP-C, and EXP\nclasses ii. Cook-Levin theorem b. Space Complexity i. NSpace and PSpace ii.\nSavitch's theorem Illustrative Learning Outcomes: CS Core: 1\\. Prepare a\npresentation that explains to first year students the basic concepts of\nalgorithmic complexity including best, average, and worst-case algorithm\nbehavior, Big- O, Omega, and Theta notations, complexity classes, time and\nspace tradeoffs, empirical measurement, and impact on practical problems. 2\\.\nUsing examples, explain each of the foundational complexity classes in this\nunit. 3\\. For each foundational complexity class in this unit, explain an\nalgorithm that demonstrates the associated runtime complexity. 4\\. For each\nalgorithm in the AL-Foundational unit, explain its runtime complexity class\nand why it belongs to this class. 5\\. Informally evaluate the foundational\ncomplexity class of simple algorithms. 6\\. Given a problem to program for\nwhich there may be several algorithmic approaches, evaluate them and determine\nwhich are feasible, and select one that is optimal in implementation and run-\ntime behavior. 7\\. Develop empirical studies to determine and validate\nhypotheses about the runtime complexity of various algorithms by running\nalgorithms on input of various sizes and comparing actual performance to the\ntheoretical analysis. 8\\. Explain examples that illustrate time-space\ntradeoffs of algorithms. 9\\. Explain how tree balance affects the efficiency\nof binary search tree operations. 10\\. Explain to a non-technical audience the\nsignificance of tractable versus intractable algorithms using an intuitive\nexplanation of Big-O complexity. 11\\. Explain the significance of NP-\nCompleteness. 12\\. Explain how NP-Hard is a lower bound and NP is an upper\nbound for NP-Completeness. 13\\. Explain examples of NP-complete problems. KA\nCore: 14\\. Use recurrence relations to evaluate the time complexity of\nrecursively defined algorithms. 15\\. Apply elementary recurrence relations\nusing a form of the Master Theorem. 16\\. Apply Big-O notation to give upper\ncase bounds on time/space complexity of algorithms. 17\\. Explain the Cook-\nLevin Theorem and the NP-Completeness of SAT. 93 18\\. Explain the classes P\nand NP. 19\\. Prove that a problem is NP-Complete by reducing a classic known\nNP-C problem to it (e.g., 3SAT and Clique). 20\\. Explain the P-space class and\nits relation to the EXP class.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/91f234c8d1c9b66dd2e401717aad01c367db8fe6bf1d1cc8d4b75725a01a3457> .
_:Nf8a376454a464e63b4b37db2c5f0f325 <http://schema.org/explain> "The lecture covers a significant portion of the KU, including algorithmic complexity, Big-O notation, and time-space tradeoffs, but does not exhaustively cover all topics." <http://groq.org/91f234c8d1c9b66dd2e401717aad01c367db8fe6bf1d1cc8d4b75725a01a3457> .
_:Nf8a376454a464e63b4b37db2c5f0f325 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/91f234c8d1c9b66dd2e401717aad01c367db8fe6bf1d1cc8d4b75725a01a3457> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/has_schema_type> _:Nf8a376454a464e63b4b37db2c5f0f325 <http://groq.org/91f234c8d1c9b66dd2e401717aad01c367db8fe6bf1d1cc8d4b75725a01a3457> .
_:Nf8a376454a464e63b4b37db2c5f0f325 <http://schema.org/answer> "1" <http://groq.org/91f234c8d1c9b66dd2e401717aad01c367db8fe6bf1d1cc8d4b75725a01a3457> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/91f234c8d1c9b66dd2e401717aad01c367db8fe6bf1d1cc8d4b75725a01a3457> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Langages et automates Objectif: (résultats d'apprentissage)\n5. Course content: • Langages algébriques\n- Grammaire algébrique\n- Arbre de dérivation\n- Automates à pile\n• Hiérarchie de Chomsky\n- Classification des grammaires;\n- Algorithmes de reconnaissance pour les grammaires de type 1 et 2\n• Analyse lexicale et syntaxique\n- TP de flex et bison Course name: http://example.org/course/UE_XLG4IU020</page1>\n        <page2>Pages:79-80 HOURS CS Core = 0 KA Core = 0 AI-NLP: Natural Language Processing\nNon-core: 1\\. Deterministic and stochastic grammars 2\\. Parsing algorithms a.\nCFGs and chart parsers (e.g., CYK) b. Probabilistic CFGs and weighted CYK 3\\.\nRepresenting meaning/Semantics a. Logic-based knowledge representations b.\nSemantic roles c. Temporal representations d. Beliefs, desires, and intentions\n4\\. Corpus-based methods 5\\. N-grams and HMMs 6\\. Smoothing and backoff 7\\.\nExamples of use: POS tagging and morphology 8\\. Information retrieval (See\nalso: DM-Unstructured) a. Vector space model i. TF & IDF b. Precision and\nrecall 9\\. Information extraction 10\\. Language translation 11\\. Text\nclassification, categorization a. Bag of words model 12\\. Deep learning for\nNLP (See also: AI-ML) a. RNNs b. Transformers c. Multi-modal embeddings (e.g.,\nimages + text) d. Generative language models Illustrative Learning Outcomes:\n1\\. Define and contrast deterministic and stochastic grammars, providing\nexamples to show the adequacy of each. 2\\. Simulate, apply, or implement\nclassic and stochastic algorithms for parsing natural language. 3\\. Identify\nthe challenges of representing meaning. 4\\. List the advantages of using\nstandard corpora. Identify examples of current corpora for a variety of NLP\ntasks. 5\\. Identify techniques for information retrieval, language\ntranslation, and text classification. 6\\. Implement a TF/IDF transform, use it\nto extract features from a corpus, and train an off-the-shelf machine learning\nalgorithm using those features to do text classification.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/289034ec686ad3e69f2d48839a3c85df96adb40d2aa79de05a6b7fe70c0fd045> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/has_schema_type> _:N5db039d0d0704d34ab4c626a6155f2f2 <http://groq.org/289034ec686ad3e69f2d48839a3c85df96adb40d2aa79de05a6b7fe70c0fd045> .
_:N5db039d0d0704d34ab4c626a6155f2f2 <http://schema.org/answer> "0" <http://groq.org/289034ec686ad3e69f2d48839a3c85df96adb40d2aa79de05a6b7fe70c0fd045> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU020" <http://groq.org/289034ec686ad3e69f2d48839a3c85df96adb40d2aa79de05a6b7fe70c0fd045> .
_:N5db039d0d0704d34ab4c626a6155f2f2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/289034ec686ad3e69f2d48839a3c85df96adb40d2aa79de05a6b7fe70c0fd045> .
_:N5db039d0d0704d34ab4c626a6155f2f2 <http://schema.org/explain> "Lecture covers grammars and parsing basics but lacks NLP-specific topics like stochastic algorithms, semantics, and modern techniques" <http://groq.org/289034ec686ad3e69f2d48839a3c85df96adb40d2aa79de05a6b7fe70c0fd045> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/289034ec686ad3e69f2d48839a3c85df96adb40d2aa79de05a6b7fe70c0fd045> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU040" <http://groq.org/fae6140bff196b7afe6ac724f72a25bff42bd2fe1e3f1c23f74c2d2c9d6b486b> .
_:Ne221bd32b0e64ae9b1bc53494e60fb43 <http://schema.org/answer> "0" <http://groq.org/fae6140bff196b7afe6ac724f72a25bff42bd2fe1e3f1c23f74c2d2c9d6b486b> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/has_schema_type> _:Ne221bd32b0e64ae9b1bc53494e60fb43 <http://groq.org/fae6140bff196b7afe6ac724f72a25bff42bd2fe1e3f1c23f74c2d2c9d6b486b> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/fae6140bff196b7afe6ac724f72a25bff42bd2fe1e3f1c23f74c2d2c9d6b486b> .
_:Ne221bd32b0e64ae9b1bc53494e60fb43 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/fae6140bff196b7afe6ac724f72a25bff42bd2fe1e3f1c23f74c2d2c9d6b486b> .
_:Ne221bd32b0e64ae9b1bc53494e60fb43 <http://schema.org/explain> "The lecture covers some basic elements like SQL and relational algebra but lacks depth in query construction and advanced topics." <http://groq.org/fae6140bff196b7afe6ac724f72a25bff42bd2fe1e3f1c23f74c2d2c9d6b486b> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Bases de données Objectif: (résultats d'apprentissage)\n- Introduction à la modélisation Merise\n- Modèle relationnel\n- Algèbre relationnelle et SQL Course content: - Passage au relationnel\n- Définition et interrogation d'une base en sql\n- Introduction au modèle olap Course name: http://example.org/course/UE_XLG4IU040</page1>\n        <page2>Pages: 118 HOURS CS Core = 2 KA Core = 4 DM-Querying: Query Construction CS\nCore: 1\\. SQL Query Formation a. Interactive SQL execution b. Programmatic\nexecution of an SQL query KA Core: 2\\. Relational Algebra 3\\. SQL a. Data\ndefinition including integrity and other constraint specifications b. Update\nsublanguage Non-core: 4\\. Relational Calculus 5\\. QBE and 4th-generation\nenvironments 6\\. Different ways to invoke non-procedural queries in\nconventional languages 7\\. Introduction to other major query languages (e.g.,\nXPATH, SPARQL) 8\\. Stored procedures Illustrative Learning Outcomes: CS Core:\n1\\. Compose SQL queries that incorporate select, project, join, union,\nintersection, set difference, and set division. 2\\. Determine when a nested\nSQL query is correlated or not. 3\\. Iterate over data retrieved\nprogrammatically from a database via an SQL query. KA Core: 4\\. Define, in\nSQL, a relation schema, including all integrity constraints and delete/update\ntriggers. 5\\. Compose an SQL query to update a tuple in a relation.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/fae6140bff196b7afe6ac724f72a25bff42bd2fe1e3f1c23f74c2d2c9d6b486b> .
_:N25689be9fbf7482fa4a10fc90a06777a <http://schema.org/answer> "0" <http://groq.org/01802c73f0c85e618851f9e493db0b36cd0b1093889cf1b9037cd9cd9e4d6dcd> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/01802c73f0c85e618851f9e493db0b36cd0b1093889cf1b9037cd9cd9e4d6dcd> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU030</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/01802c73f0c85e618851f9e493db0b36cd0b1093889cf1b9037cd9cd9e4d6dcd> .
_:N25689be9fbf7482fa4a10fc90a06777a <http://schema.org/explain> "The lecture focuses on teaching methods, not formal methods." <http://groq.org/01802c73f0c85e618851f9e493db0b36cd0b1093889cf1b9037cd9cd9e4d6dcd> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU030" <http://groq.org/01802c73f0c85e618851f9e493db0b36cd0b1093889cf1b9037cd9cd9e4d6dcd> .
_:N25689be9fbf7482fa4a10fc90a06777a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/01802c73f0c85e618851f9e493db0b36cd0b1093889cf1b9037cd9cd9e4d6dcd> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/has_schema_type> _:N25689be9fbf7482fa4a10fc90a06777a <http://groq.org/01802c73f0c85e618851f9e493db0b36cd0b1093889cf1b9037cd9cd9e4d6dcd> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/has_schema_type> _:N2eecf26ed6b145c88ed0d79d43bf5924 <http://groq.org/b6445cc4e5a760c4862de841f451812e5e96df648478d55a64b5b6874b66d92c> .
_:N2eecf26ed6b145c88ed0d79d43bf5924 <http://schema.org/answer> "0" <http://groq.org/b6445cc4e5a760c4862de841f451812e5e96df648478d55a64b5b6874b66d92c> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/b6445cc4e5a760c4862de841f451812e5e96df648478d55a64b5b6874b66d92c> .
_:N2eecf26ed6b145c88ed0d79d43bf5924 <http://schema.org/explain> "The lecture focuses on optimization and integral calculus, which does not align with the KU's content on development platforms and programming constraints." <http://groq.org/b6445cc4e5a760c4862de841f451812e5e96df648478d55a64b5b6874b66d92c> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Optimisation 1 et Calcul integral Objectif: (résultats d'apprentissage)\n• Course content: • Course name: http://example.org/course/UE_XLG4MU050</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/b6445cc4e5a760c4862de841f451812e5e96df648478d55a64b5b6874b66d92c> .
_:N2eecf26ed6b145c88ed0d79d43bf5924 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/b6445cc4e5a760c4862de841f451812e5e96df648478d55a64b5b6874b66d92c> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4MU050" <http://groq.org/b6445cc4e5a760c4862de841f451812e5e96df648478d55a64b5b6874b66d92c> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU010" <http://groq.org/664209bd2d4b9b34ac17d4c2c52a4f2bdf68a89b86c4d491b0aefc7e50e63736> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 1 Objectif: (résultats d'apprentissage)\n•\nÉvaluer une implémentation de structure de données en temps et en place mémoire (coûts minimal,\nmaximal, amorti)\n• Course content: et mise en pratique dans l’approche de résolution de problèmes « Diviser pour régner ». Course name: http://example.org/course/UE_XLG3IU010</page1>\n        <page2>Pages:91-93 HOURS CS Core = 6 KA Core = 3 AL-Complexity: Complexity CS Core:\n1\\. Complexity Analysis Framework a. Best, average, and worst-case performance\nof an algorithm b. Empirical and relative (Order of Growth) measurements c.\nInput size and primitive operations d. Time and space efficiency 2\\.\nAsymptotic complexity analysis (average and worst-case bounds) a. Big-O, Big-\nOmega, and Big-Theta formal notations b. Foundational Complexity Classes and\nRepresentative Examples/Problems i. O(1) Constant (e.g., array access) ii.\nO(log2 n) Logarithmic (e.g., binary search) iii. O(n) Linear (e.g., linear\nsearch) iv. O(n log2 n) Log Linear (e.g., mergesort) v. O(n2) Quadratic (e.g.,\nselection sort) vi. O(nc) Polynomial (e.g., O(n3) Gaussian elimination) vii.\nO(2n) Exponential (e.g., Knapsack, Satisfiability (SAT), Traveling Sales-\nPerson (TSP), all subsets) viii. O(n!) Factorial (e.g., Hamiltonian circuit,\nall permutations) 3\\. Empirical measurements of performance 4\\. Tractability\nand intractability a. P, NP, and NP-Complete Complexity Classes b. NP-Complete\nProblems (e.g., SAT, Knapsack, TSP) c. Reductions 5\\. Time and space tradeoffs\nin algorithms 92 KA Core: 6\\. Little-o, Little-Omega, and Little Theta\nnotations 7\\. Formal recursive analysis 8\\. Amortized analysis 9\\. Turing\nMachine-based models of complexity a. Time complexity i. P, NP, NP-C, and EXP\nclasses ii. Cook-Levin theorem b. Space Complexity i. NSpace and PSpace ii.\nSavitch's theorem Illustrative Learning Outcomes: CS Core: 1\\. Prepare a\npresentation that explains to first year students the basic concepts of\nalgorithmic complexity including best, average, and worst-case algorithm\nbehavior, Big- O, Omega, and Theta notations, complexity classes, time and\nspace tradeoffs, empirical measurement, and impact on practical problems. 2\\.\nUsing examples, explain each of the foundational complexity classes in this\nunit. 3\\. For each foundational complexity class in this unit, explain an\nalgorithm that demonstrates the associated runtime complexity. 4\\. For each\nalgorithm in the AL-Foundational unit, explain its runtime complexity class\nand why it belongs to this class. 5\\. Informally evaluate the foundational\ncomplexity class of simple algorithms. 6\\. Given a problem to program for\nwhich there may be several algorithmic approaches, evaluate them and determine\nwhich are feasible, and select one that is optimal in implementation and run-\ntime behavior. 7\\. Develop empirical studies to determine and validate\nhypotheses about the runtime complexity of various algorithms by running\nalgorithms on input of various sizes and comparing actual performance to the\ntheoretical analysis. 8\\. Explain examples that illustrate time-space\ntradeoffs of algorithms. 9\\. Explain how tree balance affects the efficiency\nof binary search tree operations. 10\\. Explain to a non-technical audience the\nsignificance of tractable versus intractable algorithms using an intuitive\nexplanation of Big-O complexity. 11\\. Explain the significance of NP-\nCompleteness. 12\\. Explain how NP-Hard is a lower bound and NP is an upper\nbound for NP-Completeness. 13\\. Explain examples of NP-complete problems. KA\nCore: 14\\. Use recurrence relations to evaluate the time complexity of\nrecursively defined algorithms. 15\\. Apply elementary recurrence relations\nusing a form of the Master Theorem. 16\\. Apply Big-O notation to give upper\ncase bounds on time/space complexity of algorithms. 17\\. Explain the Cook-\nLevin Theorem and the NP-Completeness of SAT. 93 18\\. Explain the classes P\nand NP. 19\\. Prove that a problem is NP-Complete by reducing a classic known\nNP-C problem to it (e.g., 3SAT and Clique). 20\\. Explain the P-space class and\nits relation to the EXP class.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/664209bd2d4b9b34ac17d4c2c52a4f2bdf68a89b86c4d491b0aefc7e50e63736> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/664209bd2d4b9b34ac17d4c2c52a4f2bdf68a89b86c4d491b0aefc7e50e63736> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/has_schema_type> _:Nba5ff7d575cc46b6be3940778792a0fb <http://groq.org/664209bd2d4b9b34ac17d4c2c52a4f2bdf68a89b86c4d491b0aefc7e50e63736> .
_:Nba5ff7d575cc46b6be3940778792a0fb <http://schema.org/explain> "Lecture focuses on evaluation of data structures and Divide and Conquer, but KU requires broader coverage of complexity theory, asymptotic notations, P/NP, and formal proofs which are not explicitly addressed." <http://groq.org/664209bd2d4b9b34ac17d4c2c52a4f2bdf68a89b86c4d491b0aefc7e50e63736> .
_:Nba5ff7d575cc46b6be3940778792a0fb <http://schema.org/answer> "0" <http://groq.org/664209bd2d4b9b34ac17d4c2c52a4f2bdf68a89b86c4d491b0aefc7e50e63736> .
_:Nba5ff7d575cc46b6be3940778792a0fb <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/664209bd2d4b9b34ac17d4c2c52a4f2bdf68a89b86c4d491b0aefc7e50e63736> .
_:N783ec590cc3f47e4bc9767812bc090e1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/ebd92e0492237886f197563898f37a0cc0129f3e50f741d63cfbfa10465fd5ce> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/has_schema_type> _:N783ec590cc3f47e4bc9767812bc090e1 <http://groq.org/ebd92e0492237886f197563898f37a0cc0129f3e50f741d63cfbfa10465fd5ce> .
_:N783ec590cc3f47e4bc9767812bc090e1 <http://schema.org/answer> "1" <http://groq.org/ebd92e0492237886f197563898f37a0cc0129f3e50f741d63cfbfa10465fd5ce> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU030" <http://groq.org/ebd92e0492237886f197563898f37a0cc0129f3e50f741d63cfbfa10465fd5ce> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/ebd92e0492237886f197563898f37a0cc0129f3e50f741d63cfbfa10465fd5ce> .
_:N783ec590cc3f47e4bc9767812bc090e1 <http://schema.org/explain> "The lecture covers 7 out of 8 learning outcomes and 4 out of 5 fundamental concepts, substantially covering the knowledge described in the KU." <http://groq.org/ebd92e0492237886f197563898f37a0cc0129f3e50f741d63cfbfa10465fd5ce> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU030</page1>\n        <page2>Pages: 150-151 HOURS CS Core = 3 KA Core = 2 GIT-Fundamentals: Fundamental\nConcepts CS Core: 1\\. Overview of graphics and visualization. 2\\. Basic\ngraphics pipeline architecture. 3\\. 2D and 3D transformations. 4\\.\nRasterization and rendering techniques. 5\\. Fundamental shading models. KA\nCore: 6\\. Advanced rendering techniques. 7\\. Applications of visualization in\ndifferent fields. 8\\. Interaction methods for graphical environments.\nIllustrative Learning Outcomes: 1\\. Explain the graphics rendering pipeline.\n2\\. Differentiate between rasterization and ray tracing. 3\\. Apply\ntransformations to 2D and 3D models.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/ebd92e0492237886f197563898f37a0cc0129f3e50f741d63cfbfa10465fd5ce> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU040" <http://groq.org/c9e48bf75fd6815aafc402036eb6558a75846a8a9c66f465e1f28fe53ea17ebf> .
_:N23391d02f66a425393dad57e6d16b4b6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/c9e48bf75fd6815aafc402036eb6558a75846a8a9c66f465e1f28fe53ea17ebf> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/c9e48bf75fd6815aafc402036eb6558a75846a8a9c66f465e1f28fe53ea17ebf> .
_:N23391d02f66a425393dad57e6d16b4b6 <http://schema.org/answer> "1" <http://groq.org/c9e48bf75fd6815aafc402036eb6558a75846a8a9c66f465e1f28fe53ea17ebf> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/has_schema_type> _:N23391d02f66a425393dad57e6d16b4b6 <http://groq.org/c9e48bf75fd6815aafc402036eb6558a75846a8a9c66f465e1f28fe53ea17ebf> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Bases de données Objectif: (résultats d'apprentissage)\n- Introduction à la modélisation Merise\n- Modèle relationnel\n- Algèbre relationnelle et SQL Course content: - Passage au relationnel\n- Définition et interrogation d'une base en sql\n- Introduction au modèle olap Course name: http://example.org/course/UE_XLG4IU040</page1>\n        <page2>Pages: 118 HOURS CS Core = 2 KA Core = 4 DM-Querying: Query Construction CS\nCore: 1\\. SQL Query Formation a. Interactive SQL execution b. Programmatic\nexecution of an SQL query KA Core: 2\\. Relational Algebra 3\\. SQL a. Data\ndefinition including integrity and other constraint specifications b. Update\nsublanguage Non-core: 4\\. Relational Calculus 5\\. QBE and 4th-generation\nenvironments 6\\. Different ways to invoke non-procedural queries in\nconventional languages 7\\. Introduction to other major query languages (e.g.,\nXPATH, SPARQL) 8\\. Stored procedures Illustrative Learning Outcomes: CS Core:\n1\\. Compose SQL queries that incorporate select, project, join, union,\nintersection, set difference, and set division. 2\\. Determine when a nested\nSQL query is correlated or not. 3\\. Iterate over data retrieved\nprogrammatically from a database via an SQL query. KA Core: 4\\. Define, in\nSQL, a relation schema, including all integrity constraints and delete/update\ntriggers. 5\\. Compose an SQL query to update a tuple in a relation.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/c9e48bf75fd6815aafc402036eb6558a75846a8a9c66f465e1f28fe53ea17ebf> .
_:N23391d02f66a425393dad57e6d16b4b6 <http://schema.org/explain> "Covers SQL, relational model, and relational algebra, aligning with core KU requirements." <http://groq.org/c9e48bf75fd6815aafc402036eb6558a75846a8a9c66f465e1f28fe53ea17ebf> .
_:N5877a54d7ac84f5c92eba9fb52cb4a21 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/54598c934b69e6e39da12e093574ee34aaef9597290d7b5ba99826deaa38727c> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/has_schema_type> _:N5877a54d7ac84f5c92eba9fb52cb4a21 <http://groq.org/54598c934b69e6e39da12e093574ee34aaef9597290d7b5ba99826deaa38727c> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3MU030" <http://groq.org/54598c934b69e6e39da12e093574ee34aaef9597290d7b5ba99826deaa38727c> .
_:N5877a54d7ac84f5c92eba9fb52cb4a21 <http://schema.org/explain> "The lecture covers the relational data model, data modeling, and conceptual models, which are a significant subset of the Knowledge Unit's content." <http://groq.org/54598c934b69e6e39da12e093574ee34aaef9597290d7b5ba99826deaa38727c> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Analyse et Algebre lineaire 2 Objectif: (résultats d'apprentissage) • Course content: • Course name: http://example.org/course/UE_XLG3MU030</page1>\n        <page2>Pages: 116-117 HOURS CS Core = 2 KA Core = 3 DM-Modeling: Data Modeling CS\nCore: 1\\. Data modeling (See also: SE-Requirements) 2\\. Relational data model\n(See also: MSF-Discrete) KA Core: 3\\. Conceptual models (e.g., entity-\nrelationship, UML diagrams) 4\\. Semi-structured data models (expressed using\nDTD, XML, or JSON Schema, for example) Non-core: 5\\. Spreadsheet models 6\\.\nObject-oriented models (See also: FPL-OOP) a. GraphQL 7\\. New features in SQL\n8\\. Specialized Data Modeling topics a. Time series data (aggregation, join)\nb. Graph data (link traversal) c. Techniques for avoiding inefficient raw data\naccess (e.g., \"avg daily price\"): materialized views and special data\nstructures (e.g., Hyperloglog, bitmap) d. Geo-Spatial data (e.g., GIS\ndatabases) (See also: SPD-Interactive) Illustrative Learning Outcomes: CS\nCore: 1\\. Describe the components of the relational data model. 2\\. Model 1:1,\n1:n, and n:m relationships using the relational data model. KA Core: 3\\.\nDescribe the components of the E-R (or some other non-relational) data model.\n4\\. Model a given environment using a conceptual data model. 5\\. Model a given\nenvironment using the document-based or key-value store-based data model.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/54598c934b69e6e39da12e093574ee34aaef9597290d7b5ba99826deaa38727c> .
_:N5877a54d7ac84f5c92eba9fb52cb4a21 <http://schema.org/answer> "1" <http://groq.org/54598c934b69e6e39da12e093574ee34aaef9597290d7b5ba99826deaa38727c> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/54598c934b69e6e39da12e093574ee34aaef9597290d7b5ba99826deaa38727c> .
_:Ne7d1011648d94535becceaaaabd282b0 <http://schema.org/explain> "Lecture focuses on analysis and divide/conquer, but KU covers broader DS/Algos not fully addressed." <http://groq.org/de73e3d9b04b1067a7d868a11db308e7661083307bfbcd04e07f15dfd04d6422> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 1 Objectif: (résultats d'apprentissage)\n•\nÉvaluer une implémentation de structure de données en temps et en place mémoire (coûts minimal,\nmaximal, amorti)\n• Course content: et mise en pratique dans l’approche de résolution de problèmes « Diviser pour régner ». Course name: http://example.org/course/UE_XLG3IU010</page1>\n        <page2>Pages:88-90 HOURS CS Core = 11 KA Core = 6 AL-Foundational: Foundational Data\nStructures and Algorithms CS Core: (See also: SDF-Data-Structures, SDF-\nAlgorithms) 1\\. Abstract Data Type (ADT) and operations on an ADT (See also:\nFPL-Types) a. Dictionary operations (insert, delete, find) 2\\. Arrays a.\nNumeric vs non-numeric, character strings b. Single (vector) vs\nmultidimensional (matrix) 3\\. Records/Structs/Tuples and Objects (See also:\nFPL-OOP) 4\\. Linked lists (for historical reasons) a. Single vs Double and\nLinear vs Circular 5\\. Stacks 6\\. Queues and deques a. Heap-based priority\nqueue 7\\. Hash tables/maps a. Collision resolution and complexity (e.g.,\nprobing, chaining, rehash) 8\\. Graphs (e.g., [un]directed, [a]cyclic,\n[un]connected, and [un]weighted) (See also: MSF-Discrete) a. Graph\nrepresentation: adjacency list vs matrix 9\\. Trees (See also: MSF-Discrete) a.\nBinary, n-ary, and search trees b. Balanced (e.g., AVL, Red-Black, Heap) 10\\.\nSets (See also: MSF-Discrete) 11\\. Search algorithms a. O(n) complexity (e.g.,\nlinear/sequential array/list search) b. O(log2 n) complexity (e.g., binary\nsearch) c. O(logb n) complexity (e.g., uninformed depth/breadth-first tree\nsearch) 12\\. Sorting algorithms (e.g., stable, unstable) a. O(n2) complexity\n(e.g., insertion, selection), b. O(n log n) complexity (e.g., quicksort,\nmerge, timsort) 13\\. Graph algorithms a. Shortest path (e.g., Dijkstra's,\nFloyd's) b. Minimal spanning tree (e.g., Prim's, Kruskal's) KA Core: 14\\.\nSorting algorithms a. O(n log n) complexity heapsort b. Pseudo O(n) complexity\n(e.g., bucket, counting, radix) 15\\. Graph algorithms a. Transitive closure\n(e.g., Warshall's) b. Topological sort 16\\. Matching a. Efficient string\nmatching (e.g., Boyer-Moore, Knuth-Morris-Pratt) b. Longest common subsequence\nmatching c. Regular expression matching Non-core: 17\\. Cryptography algorithms\n(e.g., SHA-256) (See also: SEC-Crypto) 18\\. Parallel algorithms (See also:\nPDC-Algorithms, FPL-Parallel) 19\\. Consensus algorithms (e.g., Blockchain)\n(See also: SEC-Crypto) a. Proof of work vs proof of stake (See also: SEP-\nSustainability) 20\\. Quantum computing algorithms (See also: AL-Models, AR-\nQuantum) a. Oracle-based (e.g., Deutsch-Jozsa, Bernstein-Vazirani, Simon) b.\nSuperpolynomial speed-up via QFT (e.g., Shor's) c. Polynomial speed-up via\namplitude amplification (e.g., Grover's) 21\\. Fast-Fourier Transform (FFT)\nalgorithm 22\\. Differential evolution algorithm Illustrative Learning\nOutcomes: CS Core: 1\\. For each ADT/Data-Structure in this unit a. Explain its\ndefinition, properties, representation(s), and associated ADT operations. b.\nExplain step-by-step how the ADT operations associated with the data structure\ntransform it. 2\\. For each algorithm in this unit explain step-by-step how the\nalgorithm operates. 3\\. For each algorithmic approach (e.g., sorting) in this\nunit apply a prototypical example of the approach (e.g., merge sort). 90 4\\.\nGiven requirements for a problem, develop multiple solutions using various\ndata structures and algorithms. Subsequently, evaluate the suitability,\nstrengths, and weaknesses selecting an approach that best satisfies the\nrequirements. 5\\. Explain how collision avoidance and collision resolution is\nhandled in hash tables. 6\\. Explain factors beyond computational efficiency\nthat influence the choice of algorithms, such as programming time,\nmaintainability, and the use of application-specific patterns in the input\ndata. 7\\. Explain the heap property and the use of heaps as an implementation\nof a priority queue. KA Core: 8\\. For each of the algorithms and algorithmic\napproaches in the KA Core topics: a. Explain a prototypical example of the\nalgorithm, and b. Explain step-by-step how the algorithm operates. Non-core:\n9\\. An appreciation of quantum computation and its application to certain\nproblems.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/de73e3d9b04b1067a7d868a11db308e7661083307bfbcd04e07f15dfd04d6422> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU010" <http://groq.org/de73e3d9b04b1067a7d868a11db308e7661083307bfbcd04e07f15dfd04d6422> .
_:Ne7d1011648d94535becceaaaabd282b0 <http://schema.org/answer> "0" <http://groq.org/de73e3d9b04b1067a7d868a11db308e7661083307bfbcd04e07f15dfd04d6422> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/has_schema_type> _:Ne7d1011648d94535becceaaaabd282b0 <http://groq.org/de73e3d9b04b1067a7d868a11db308e7661083307bfbcd04e07f15dfd04d6422> .
_:Ne7d1011648d94535becceaaaabd282b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/de73e3d9b04b1067a7d868a11db308e7661083307bfbcd04e07f15dfd04d6422> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/de73e3d9b04b1067a7d868a11db308e7661083307bfbcd04e07f15dfd04d6422> .
_:N25203cf1904f4a81b742980b07330bb8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/f2f25135caa653dbbd499ec19cbd598adecf3a677e7b5838676e231778543ed9> .
_:N25203cf1904f4a81b742980b07330bb8 <http://schema.org/explain> "The lecture covers topics such as grammatical hierarchy, parsing strategies, and language theory, which are substantially covered in the KU." <http://groq.org/f2f25135caa653dbbd499ec19cbd598adecf3a677e7b5838676e231778543ed9> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU020" <http://groq.org/f2f25135caa653dbbd499ec19cbd598adecf3a677e7b5838676e231778543ed9> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/has_schema_type> _:N25203cf1904f4a81b742980b07330bb8 <http://groq.org/f2f25135caa653dbbd499ec19cbd598adecf3a677e7b5838676e231778543ed9> .
_:N25203cf1904f4a81b742980b07330bb8 <http://schema.org/answer> "1" <http://groq.org/f2f25135caa653dbbd499ec19cbd598adecf3a677e7b5838676e231778543ed9> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/f2f25135caa653dbbd499ec19cbd598adecf3a677e7b5838676e231778543ed9> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Langages et automates Objectif: (résultats d'apprentissage)\n5. Course content: • Langages algébriques\n- Grammaire algébrique\n- Arbre de dérivation\n- Automates à pile\n• Hiérarchie de Chomsky\n- Classification des grammaires;\n- Algorithmes de reconnaissance pour les grammaires de type 1 et 2\n• Analyse lexicale et syntaxique\n- TP de flex et bison Course name: http://example.org/course/UE_XLG4IU020</page1>\n        <page2>Pages: 141 HOURS CS Core = 0 KA Core = 0 FPL-Syntax: Syntax Analysis Non-core:\n1\\. Regular grammars vs context-free grammars (See also: AL-Models) 2\\.\nScanning and parsing based on language specifications 3\\. Lexical analysis\nusing regular expressions 4\\. Tokens and their use 5\\. Parsing strategies\nincluding top-down (e.g., recursive descent, or LL) and bottom-up (e.g., LR or\nGLR) techniques a. Lookahead tables and their application to parsing 6\\.\nLanguage theory: a. Chomsky hierarchy (See also: AL-Models) b. Left-\nmost/right-most derivation and ambiguity c. Grammar transformation 7\\. Parser\nerror recovery mechanisms 8\\. Generating scanners and parsers from declarative\nspecifications Illustrative learning outcomes: Non-core: 1\\. Use formal\ngrammars to specify the syntax of languages. 2\\. Illustrate the role of\nlookahead tables in parsing. 3\\. Use declarative tools to generate parsers and\nscanners. 4\\. Recognize key issues in syntax definitions: ambiguity,\nassociativity, precedence.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/f2f25135caa653dbbd499ec19cbd598adecf3a677e7b5838676e231778543ed9> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Logique pour l'informatique Objectif: (résultats d'apprentissage)\nconsistance et complétude d'un système de preuves.\n4. Représenter une preuve de la déduction naturelle sous forme d'arbre d'inférence.\n5. Utiliser les algorithmes d'unification et de résolution pour le raisonnement automatique sur les\nformules logiques.\n1) Raisonnement algébrique booléen\n• Dualités des connecteurs logiques\n• Formes normales conjonctive et disjonctive\n2) Systèmes de preuves\n• Système d'inférence associé à une définition inductive\n• Preuve d'appartenance à un ensemble inductif par un arbre de preuves\n• Règles d'inférences de la déduction naturelle pour la logique propositionnelle\n• Distinguer logique classique et logique intuitionniste\n3) Donner du sens aux langages logique Course content: • Interprétation, modèle, satisfiabilité, validité\n• Correspondance avec le système de preuve: correction et complétude\n4) Calcul des prédicats\n• Manipulation des quantificateurs\n• Skolémisation, forme clausale\n• Théorie logique\n5) Raisonner automatiquement sur les formules logique\n• Algorithme d'unification\n• Algorithme de résolution Course name: http://example.org/course/UE_XLG3IU020</page1>\n        <page2>Pages: 145-146 HOURS CS Core = 0 KA Core = 0 FPL-Formalism: Formal Semantics\nNon-core: 1\\. Syntax vs semantics 2\\. Approaches to semantics: axiomatic,\noperational, denotational, type-based 3\\. Axiomatic semantics of abstract\nconstructs such as assignment, selection, iteration using precondition, post-\nconditions, and loop invariant 4\\. Operational semantics analysis of abstract\nconstructs and sequence of such as assignment, expression evaluation,\nselection, iteration using environment and store a. Symbolic execution b.\nConstraint checkers 5\\. Denotational semantics a. Lambda Calculus. (See also:\nAL-Models, FPL-Functional) 6\\. Proofs by induction over language semantics 7\\.\nFormal definitions and proofs for type systems (See also: FPL-Types) a.\nPropositions as types (implication as a function, conjunction as a product,\ndisjunction as a sum) b. Dependent types (universal quantification as\ndependent function, existential quantification as dependent product) c.\nParametricity Illustrative learning outcomes: Non-core: 1\\. Construct formal\nsemantics for a small language. 2\\. Write a lambda-calculus program and show\nits evaluation to a normal form. 3\\. Discuss the different approaches of\noperational, denotational, and axiomatic semantics. 4\\. Use induction to prove\nproperties of all programs in a language. 5\\. Use induction to prove\nproperties of all programs in a language that is well-typed according to a\nformally defined type system. 6\\. Use parametricity to establish the behavior\nof code given only its type.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/f292375689906037c456b47aa30c2ffd4eaf8234b74920bb365e2ea6b655640e> .
_:Ndbc333c987384f63843eb91722f5d647 <http://schema.org/explain> "Lecture covers logic systems and proofs but lacks focus on axiomatic/operational/denotational semantics and type systems central to the KU." <http://groq.org/f292375689906037c456b47aa30c2ffd4eaf8234b74920bb365e2ea6b655640e> .
_:Ndbc333c987384f63843eb91722f5d647 <http://schema.org/answer> "0" <http://groq.org/f292375689906037c456b47aa30c2ffd4eaf8234b74920bb365e2ea6b655640e> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU020" <http://groq.org/f292375689906037c456b47aa30c2ffd4eaf8234b74920bb365e2ea6b655640e> .
_:Ndbc333c987384f63843eb91722f5d647 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/f292375689906037c456b47aa30c2ffd4eaf8234b74920bb365e2ea6b655640e> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/f292375689906037c456b47aa30c2ffd4eaf8234b74920bb365e2ea6b655640e> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/has_schema_type> _:Ndbc333c987384f63843eb91722f5d647 <http://groq.org/f292375689906037c456b47aa30c2ffd4eaf8234b74920bb365e2ea6b655640e> .
_:N1650074da4104a108e0972938484a5d7 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Software Architecture: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Software Architecture.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/2d5a0938a752a8353e2178adddf9d6f52410768200676d81e4448670625d1161> .
_:N87109981f04f4ffc899c6d420d9453ed <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/2d5a0938a752a8353e2178adddf9d6f52410768200676d81e4448670625d1161> .
_:Nff6c6dea4ce5468fa42cc8c24048f192 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://faiss.org/2d5a0938a752a8353e2178adddf9d6f52410768200676d81e4448670625d1161> .
_:N87109981f04f4ffc899c6d420d9453ed <http://example.org/has_score> "0.65662575"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/2d5a0938a752a8353e2178adddf9d6f52410768200676d81e4448670625d1161> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/is_aligned_with> _:Nff6c6dea4ce5468fa42cc8c24048f192 <http://faiss.org/2d5a0938a752a8353e2178adddf9d6f52410768200676d81e4448670625d1161> .
<http://example.org/faiss> <http://example.org/input> "Label: 2nd year English S4 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4AU010" <http://faiss.org/2d5a0938a752a8353e2178adddf9d6f52410768200676d81e4448670625d1161> .
_:Nff6c6dea4ce5468fa42cc8c24048f192 <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://faiss.org/2d5a0938a752a8353e2178adddf9d6f52410768200676d81e4448670625d1161> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/is_aligned_with> _:N87109981f04f4ffc899c6d420d9453ed <http://faiss.org/2d5a0938a752a8353e2178adddf9d6f52410768200676d81e4448670625d1161> .
_:N87109981f04f4ffc899c6d420d9453ed <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://faiss.org/2d5a0938a752a8353e2178adddf9d6f52410768200676d81e4448670625d1161> .
_:N1650074da4104a108e0972938484a5d7 <http://example.org/has_score> "0.6397157"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/2d5a0938a752a8353e2178adddf9d6f52410768200676d81e4448670625d1161> .
_:Nff6c6dea4ce5468fa42cc8c24048f192 <http://example.org/has_score> "0.6588453"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/2d5a0938a752a8353e2178adddf9d6f52410768200676d81e4448670625d1161> .
_:N1650074da4104a108e0972938484a5d7 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Software_Architecture.txt> <http://faiss.org/2d5a0938a752a8353e2178adddf9d6f52410768200676d81e4448670625d1161> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/is_aligned_with> _:N1650074da4104a108e0972938484a5d7 <http://faiss.org/2d5a0938a752a8353e2178adddf9d6f52410768200676d81e4448670625d1161> .
_:N5b9e31391ffa42a3a165e22dec6bf80d <http://example.org/has_score> "0.66148436"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/38fd26253f71d4a064cb5e74d55c786a93b719c78c738a0c704c17df2030b5ac> .
_:N5b9e31391ffa42a3a165e22dec6bf80d <http://example.org/has_chunk> ". (See also: FPL-Logic)\n10. Integration with other programming paradigms such as imperative and object-oriented.\nIllustrative learning outcomes:\nCS Core:\n1. Develop basic algorithms that avoid assigning to mutable states or considering reference equality.\n2. Develop useful functions that take and return other functions.\n3. Compare and contrast how computational solutions to a problem differ in procedural, functional,\nand object-oriented approaches.\n4" <http://faiss.org/38fd26253f71d4a064cb5e74d55c786a93b719c78c738a0c704c17df2030b5ac> .
<http://example.org/faiss> <http://example.org/input> "Label: Optimisation 1 et Calcul integral Objectif: (résultats d'apprentissage)\n• Course content: • Course name: http://example.org/course/UE_XLG4MU050" <http://faiss.org/38fd26253f71d4a064cb5e74d55c786a93b719c78c738a0c704c17df2030b5ac> .
_:N5b9e31391ffa42a3a165e22dec6bf80d <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Functional_Functional_Programming.txt> <http://faiss.org/38fd26253f71d4a064cb5e74d55c786a93b719c78c738a0c704c17df2030b5ac> .
_:N1bbd9cb1f1c6486ca1d8e3453e993e34 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://faiss.org/38fd26253f71d4a064cb5e74d55c786a93b719c78c738a0c704c17df2030b5ac> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/is_aligned_with> _:N5b9e31391ffa42a3a165e22dec6bf80d <http://faiss.org/38fd26253f71d4a064cb5e74d55c786a93b719c78c738a0c704c17df2030b5ac> .
_:N1bbd9cb1f1c6486ca1d8e3453e993e34 <http://example.org/has_score> "0.6495097"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/38fd26253f71d4a064cb5e74d55c786a93b719c78c738a0c704c17df2030b5ac> .
_:N2f4df952a0e042d1a45d81c9160d0e24 <http://example.org/has_score> "0.6604698"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/38fd26253f71d4a064cb5e74d55c786a93b719c78c738a0c704c17df2030b5ac> .
_:N1bbd9cb1f1c6486ca1d8e3453e993e34 <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://faiss.org/38fd26253f71d4a064cb5e74d55c786a93b719c78c738a0c704c17df2030b5ac> .
_:N2f4df952a0e042d1a45d81c9160d0e24 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Calculus.txt> <http://faiss.org/38fd26253f71d4a064cb5e74d55c786a93b719c78c738a0c704c17df2030b5ac> .
_:N2f4df952a0e042d1a45d81c9160d0e24 <http://example.org/has_chunk> ". CS applications: gradient descent for machine learning, forward and inverse kinematics,\napplications of calculus to probability\nNote: the calculus topics listed above are aligned with computer science goals rather than with\ntraditional calculus courses. For example, multivariate calculus is often a course by itself, but computer\nscience undergraduates only need parts of it for machine learning.\nIllustrative Learning Outcomes:\nKA Core:\n1. Sequences, series, limits\na" <http://faiss.org/38fd26253f71d4a064cb5e74d55c786a93b719c78c738a0c704c17df2030b5ac> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/is_aligned_with> _:N2f4df952a0e042d1a45d81c9160d0e24 <http://faiss.org/38fd26253f71d4a064cb5e74d55c786a93b719c78c738a0c704c17df2030b5ac> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/is_aligned_with> _:N1bbd9cb1f1c6486ca1d8e3453e993e34 <http://faiss.org/38fd26253f71d4a064cb5e74d55c786a93b719c78c738a0c704c17df2030b5ac> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU020" <http://groq.org/b7b24f77918c2e8ddd1aab3e427aa64ecce8d8bbc80484d467c669d910b973ff> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Unité Enseignement de Découverte Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU020</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/b7b24f77918c2e8ddd1aab3e427aa64ecce8d8bbc80484d467c669d910b973ff> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/has_schema_type> _:N765c307a01de42fd99674c391ee5aab5 <http://groq.org/b7b24f77918c2e8ddd1aab3e427aa64ecce8d8bbc80484d467c669d910b973ff> .
_:N765c307a01de42fd99674c391ee5aab5 <http://schema.org/answer> "1" <http://groq.org/b7b24f77918c2e8ddd1aab3e427aa64ecce8d8bbc80484d467c669d910b973ff> .
_:N765c307a01de42fd99674c391ee5aab5 <http://schema.org/explain> "The lecture covers the overview of development platforms, programming via platform-specific API, platform languages, and programming under platform constraints, which aligns with the KU's content." <http://groq.org/b7b24f77918c2e8ddd1aab3e427aa64ecce8d8bbc80484d467c669d910b973ff> .
_:N765c307a01de42fd99674c391ee5aab5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/b7b24f77918c2e8ddd1aab3e427aa64ecce8d8bbc80484d467c669d910b973ff> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/b7b24f77918c2e8ddd1aab3e427aa64ecce8d8bbc80484d467c669d910b973ff> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/has_schema_type> _:Nd2d5d737f4b84406a479823b6a78c2e4 <http://groq.org/f751523f76e35aa3d54599f58f58a73f17a54958ea038a5e57b7df747699384f> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3MU030" <http://groq.org/f751523f76e35aa3d54599f58f58a73f17a54958ea038a5e57b7df747699384f> .
_:Nd2d5d737f4b84406a479823b6a78c2e4 <http://schema.org/explain> "Lecture focuses on mathematics (analysis/linear algebra), while KU covers data modeling concepts unrelated to math topics." <http://groq.org/f751523f76e35aa3d54599f58f58a73f17a54958ea038a5e57b7df747699384f> .
_:Nd2d5d737f4b84406a479823b6a78c2e4 <http://schema.org/answer> "0" <http://groq.org/f751523f76e35aa3d54599f58f58a73f17a54958ea038a5e57b7df747699384f> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Analyse et Algebre lineaire 2 Objectif: (résultats d'apprentissage) • Course content: • Course name: http://example.org/course/UE_XLG3MU030</page1>\n        <page2>Pages: 116-117 HOURS CS Core = 2 KA Core = 3 DM-Modeling: Data Modeling CS\nCore: 1\\. Data modeling (See also: SE-Requirements) 2\\. Relational data model\n(See also: MSF-Discrete) KA Core: 3\\. Conceptual models (e.g., entity-\nrelationship, UML diagrams) 4\\. Semi-structured data models (expressed using\nDTD, XML, or JSON Schema, for example) Non-core: 5\\. Spreadsheet models 6\\.\nObject-oriented models (See also: FPL-OOP) a. GraphQL 7\\. New features in SQL\n8\\. Specialized Data Modeling topics a. Time series data (aggregation, join)\nb. Graph data (link traversal) c. Techniques for avoiding inefficient raw data\naccess (e.g., \"avg daily price\"): materialized views and special data\nstructures (e.g., Hyperloglog, bitmap) d. Geo-Spatial data (e.g., GIS\ndatabases) (See also: SPD-Interactive) Illustrative Learning Outcomes: CS\nCore: 1\\. Describe the components of the relational data model. 2\\. Model 1:1,\n1:n, and n:m relationships using the relational data model. KA Core: 3\\.\nDescribe the components of the E-R (or some other non-relational) data model.\n4\\. Model a given environment using a conceptual data model. 5\\. Model a given\nenvironment using the document-based or key-value store-based data model.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/f751523f76e35aa3d54599f58f58a73f17a54958ea038a5e57b7df747699384f> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/f751523f76e35aa3d54599f58f58a73f17a54958ea038a5e57b7df747699384f> .
_:Nd2d5d737f4b84406a479823b6a78c2e4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/f751523f76e35aa3d54599f58f58a73f17a54958ea038a5e57b7df747699384f> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S4 Objectif: (résultats d'apprentissage)\nfaire et savoir-être) et d'un plan d'actions sur les prochaines années : à l'écrit et à l'oral\n- d'identitier et d'animer son réseau (professionnel et élargi)\n- de créer et de faire vivre ses profils numériques professionnels\n- de mener une enquête métier auprès d'un professionnel et de la restituer Course content: - présentation orale de la restitution de l'enquête et des recherches sur le métier\n- équivalent de 8 TD + présentation orale des enquêtes:\n- identication de ses valeurs\n- indentification de ses compétences\n- consrtruction de son projet professionnel et personnel\n- présentation de son projet Course name: http://example.org/course/UE_XLG4TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Testing and Quality Assurance:\nCore Concepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nSE-Testing and Quality Assurance. 2\\. Apply principles in practical scenarios.\n3\\. Analyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/21dc11f08b027a3caa068209b75297730cb5563b76b42e3a4ebf662f9190fc58> .
_:N3cf8b40969e34e4a984c2ac958475a90 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/21dc11f08b027a3caa068209b75297730cb5563b76b42e3a4ebf662f9190fc58> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/has_schema_type> _:N3cf8b40969e34e4a984c2ac958475a90 <http://groq.org/21dc11f08b027a3caa068209b75297730cb5563b76b42e3a4ebf662f9190fc58> .
_:N3cf8b40969e34e4a984c2ac958475a90 <http://schema.org/explain> "The lecture focuses on methodology and professional insertion, whereas the KU covers SE-Testing and Quality Assurance, which are unrelated topics." <http://groq.org/21dc11f08b027a3caa068209b75297730cb5563b76b42e3a4ebf662f9190fc58> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU010" <http://groq.org/21dc11f08b027a3caa068209b75297730cb5563b76b42e3a4ebf662f9190fc58> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/21dc11f08b027a3caa068209b75297730cb5563b76b42e3a4ebf662f9190fc58> .
_:N3cf8b40969e34e4a984c2ac958475a90 <http://schema.org/answer> "0" <http://groq.org/21dc11f08b027a3caa068209b75297730cb5563b76b42e3a4ebf662f9190fc58> .
_:N807e65dc6afb4195bae60cecce9e4573 <http://schema.org/answer> "0" <http://groq.org/283e53fdc2ed1200cd5e0bd2d046f2daa2d8ce4bc22a81192c9f5e11d88754c9> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/283e53fdc2ed1200cd5e0bd2d046f2daa2d8ce4bc22a81192c9f5e11d88754c9> .
_:N807e65dc6afb4195bae60cecce9e4573 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/283e53fdc2ed1200cd5e0bd2d046f2daa2d8ce4bc22a81192c9f5e11d88754c9> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Enjeux de la transition écologique Objectif: (résultats d'apprentissage) Course content: Programme des 9 séances en ligne (d’environ 1h30 de travail chacune) : Course name: http://example.org/course/UE_XLG3TU020</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Maintenance and Evolution:\nCore Concepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nSE-Maintenance and Evolution. 2\\. Apply principles in practical scenarios. 3\\.\nAnalyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/283e53fdc2ed1200cd5e0bd2d046f2daa2d8ce4bc22a81192c9f5e11d88754c9> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU020" <http://groq.org/283e53fdc2ed1200cd5e0bd2d046f2daa2d8ce4bc22a81192c9f5e11d88754c9> .
_:N807e65dc6afb4195bae60cecce9e4573 <http://schema.org/explain> "No overlap in topics (ecological transition vs. SE-Maintenance concepts)" <http://groq.org/283e53fdc2ed1200cd5e0bd2d046f2daa2d8ce4bc22a81192c9f5e11d88754c9> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/has_schema_type> _:N807e65dc6afb4195bae60cecce9e4573 <http://groq.org/283e53fdc2ed1200cd5e0bd2d046f2daa2d8ce4bc22a81192c9f5e11d88754c9> .
_:Na03c1dfc7870460aab598c9e29c6b249 <http://schema.org/explain> "Lecture focuses on teaching methods and professional insertion, not programming platforms or languages." <http://groq.org/f54806f59f4526352f5e31bfe9c5e7c694c4c5416b0bcb4292fee0a7a106e690> .
_:Na03c1dfc7870460aab598c9e29c6b249 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/f54806f59f4526352f5e31bfe9c5e7c694c4c5416b0bcb4292fee0a7a106e690> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/has_schema_type> _:Na03c1dfc7870460aab598c9e29c6b249 <http://groq.org/f54806f59f4526352f5e31bfe9c5e7c694c4c5416b0bcb4292fee0a7a106e690> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU010" <http://groq.org/f54806f59f4526352f5e31bfe9c5e7c694c4c5416b0bcb4292fee0a7a106e690> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU010</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/f54806f59f4526352f5e31bfe9c5e7c694c4c5416b0bcb4292fee0a7a106e690> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/f54806f59f4526352f5e31bfe9c5e7c694c4c5416b0bcb4292fee0a7a106e690> .
_:Na03c1dfc7870460aab598c9e29c6b249 <http://schema.org/answer> "0" <http://groq.org/f54806f59f4526352f5e31bfe9c5e7c694c4c5416b0bcb4292fee0a7a106e690> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3AU010</page1>\n        <page2>Pages:79-80 HOURS CS Core = 0 KA Core = 0 AI-NLP: Natural Language Processing\nNon-core: 1\\. Deterministic and stochastic grammars 2\\. Parsing algorithms a.\nCFGs and chart parsers (e.g., CYK) b. Probabilistic CFGs and weighted CYK 3\\.\nRepresenting meaning/Semantics a. Logic-based knowledge representations b.\nSemantic roles c. Temporal representations d. Beliefs, desires, and intentions\n4\\. Corpus-based methods 5\\. N-grams and HMMs 6\\. Smoothing and backoff 7\\.\nExamples of use: POS tagging and morphology 8\\. Information retrieval (See\nalso: DM-Unstructured) a. Vector space model i. TF & IDF b. Precision and\nrecall 9\\. Information extraction 10\\. Language translation 11\\. Text\nclassification, categorization a. Bag of words model 12\\. Deep learning for\nNLP (See also: AI-ML) a. RNNs b. Transformers c. Multi-modal embeddings (e.g.,\nimages + text) d. Generative language models Illustrative Learning Outcomes:\n1\\. Define and contrast deterministic and stochastic grammars, providing\nexamples to show the adequacy of each. 2\\. Simulate, apply, or implement\nclassic and stochastic algorithms for parsing natural language. 3\\. Identify\nthe challenges of representing meaning. 4\\. List the advantages of using\nstandard corpora. Identify examples of current corpora for a variety of NLP\ntasks. 5\\. Identify techniques for information retrieval, language\ntranslation, and text classification. 6\\. Implement a TF/IDF transform, use it\nto extract features from a corpus, and train an off-the-shelf machine learning\nalgorithm using those features to do text classification.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/62c4dc11fed30220ade68d357f5a9694a0fa6d74394c108bad82659434067b0d> .
_:N634e36d6d9fc4483bb5c299444230f26 <http://schema.org/answer> "0" <http://groq.org/62c4dc11fed30220ade68d357f5a9694a0fa6d74394c108bad82659434067b0d> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/has_schema_type> _:N634e36d6d9fc4483bb5c299444230f26 <http://groq.org/62c4dc11fed30220ade68d357f5a9694a0fa6d74394c108bad82659434067b0d> .
_:N634e36d6d9fc4483bb5c299444230f26 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/62c4dc11fed30220ade68d357f5a9694a0fa6d74394c108bad82659434067b0d> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3AU010" <http://groq.org/62c4dc11fed30220ade68d357f5a9694a0fa6d74394c108bad82659434067b0d> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/62c4dc11fed30220ade68d357f5a9694a0fa6d74394c108bad82659434067b0d> .
_:N634e36d6d9fc4483bb5c299444230f26 <http://schema.org/explain> "Lecture focuses on teaching methods, while KU covers NLP technical topics." <http://groq.org/62c4dc11fed30220ade68d357f5a9694a0fa6d74394c108bad82659434067b0d> .
_:Na72aacfe472740949996eaced58890ba <http://schema.org/answer> "0" <http://groq.org/bfb29f83a910b4a28b4c07a4d683a71891b8d6f4828d7228768267fddc24c1d0> .
_:Na72aacfe472740949996eaced58890ba <http://schema.org/explain> "Topics unrelated: teaching methods vs 3D modeling/GIT concepts" <http://groq.org/bfb29f83a910b4a28b4c07a4d683a71891b8d6f4828d7228768267fddc24c1d0> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD GIT-3D Modeling: Core Concepts CS\nCore: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic 3\nKA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of GIT-3D Modeling.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/bfb29f83a910b4a28b4c07a4d683a71891b8d6f4828d7228768267fddc24c1d0> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU010" <http://groq.org/bfb29f83a910b4a28b4c07a4d683a71891b8d6f4828d7228768267fddc24c1d0> .
_:Na72aacfe472740949996eaced58890ba <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/bfb29f83a910b4a28b4c07a4d683a71891b8d6f4828d7228768267fddc24c1d0> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/has_schema_type> _:Na72aacfe472740949996eaced58890ba <http://groq.org/bfb29f83a910b4a28b4c07a4d683a71891b8d6f4828d7228768267fddc24c1d0> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/bfb29f83a910b4a28b4c07a4d683a71891b8d6f4828d7228768267fddc24c1d0> .
_:N0e2bbb37b23d42c49fa214097cb75dd3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/e868f26034de75c0d6df1b9e2ef9fd0106d1ecb3a881369cb8fc1d1124df7872> .
_:N0e2bbb37b23d42c49fa214097cb75dd3 <http://schema.org/explain> "Lecture focuses on OOP (inheritance/polymorphism/abstract classes), while KU centers on functional programming concepts (lambda, immutability, closures) which are not covered." <http://groq.org/e868f26034de75c0d6df1b9e2ef9fd0106d1ecb3a881369cb8fc1d1124df7872> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Programmation à Objets Objectif: (résultats d'apprentissage) Connaître les mécanismes d’héritage et de polymorphisme Course content: Classes abstraites Course name: http://example.org/course/UE_XLG3IU030</page1>\n        <page2>Pages: 131-132-133 HOURS CS Core = 4 KA Core = 3 FPL-Functional: Functional\nProgramming CS Core: 1\\. Lambda expressions and evaluation: (See also: AL-\nModels, FPL-Formalism) a. Variable binding and scope rules. (See also: SDF-\nFundamentals) b. Parameter-passing. (See also: SDF-Fundamentals) c. Nested\nlambda expressions and reduction order. 2\\. Effect-free programming: a.\nFunction calls have no side effects, facilitating compositional reasoning. b.\nImmutable variables and data copying vs reduction. c. Use of recursion vs\nloops vs pipelining (map/reduce). 3\\. Processing structured data (e.g., trees)\nvia functions with cases for each data variant: a. Functions defined over\ncompound data in terms of functions applied to the constituent pieces. b.\nPersistent data structures. 4\\. Using higher-order functions (taking,\nreturning, and storing functions). KA Core: 5\\. Metaprogramming and\nreflection. 6\\. Function closures (functions using variables in the enclosing\nlexical environment). a. Basic meaning and definition - creating closures at\nrun-time by capturing the environment. b. Canonical idioms: call-backs,\narguments to iterators, reusable code via function arguments. c. Using a\nclosure to encapsulate data in its environment. d. Delayed versus eager\nevaluation. Non-core: 7\\. Graph reduction machine and call-by-need. 8\\.\nImplementing delayed evaluation. 9\\. Integration with logic programming\nparadigm using concepts such as equational logic, narrowing, residuation and\nsemantic unification. (See also: FPL-Logic) 10\\. Integration with other\nprogramming paradigms such as imperative and object-oriented. Illustrative\nlearning outcomes: CS Core: 1\\. Develop basic algorithms that avoid assigning\nto mutable states or considering reference equality. 2\\. Develop useful\nfunctions that take and return other functions. 3\\. Compare and contrast how\ncomputational solutions to a problem differ in procedural, functional, and\nobject-oriented approaches. 4\\. Compare and contrast mechanisms to define and\nprotect data elements within procedural, functional, and object-oriented\napproaches. KA Core: 5\\. Explain a simple example of lambda expression being\nimplemented using a virtual machine, such as a SECD machine, showing storage\nand reclaim of the environment. 6\\. Correctly interpret variables and lexical\nscope in a program using function closures. 7\\. Use functional encapsulation\nmechanisms such as closures and modular interfaces. 8\\. Compare and contrast\nstateful vs stateless execution. 9\\. Define and use iterators and other\noperations on aggregates, including operations that take functions as\narguments, in multiple programming languages, selecting the most natural\nidioms for each language. (See also: FPL-OOP) Non-core: 10\\. Illustrate graph\nreduction using a l-expression using a shared subexpression. 11\\. Illustrate\nthe execution of a simple nested l-expression using an abstract machine, such\nas an ABC machine. 12\\. Illustrate narrowing, residuation, and semantic\nunification using simple illustrative examples. 13\\. Illustrate the\nconcurrency constructs using simple programming examples of known concepts\nsuch as a buffer being read and written concurrently or sequentially. (See\nalso: FPL-OOP)</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/e868f26034de75c0d6df1b9e2ef9fd0106d1ecb3a881369cb8fc1d1124df7872> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU030" <http://groq.org/e868f26034de75c0d6df1b9e2ef9fd0106d1ecb3a881369cb8fc1d1124df7872> .
_:N0e2bbb37b23d42c49fa214097cb75dd3 <http://schema.org/answer> "0" <http://groq.org/e868f26034de75c0d6df1b9e2ef9fd0106d1ecb3a881369cb8fc1d1124df7872> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/has_schema_type> _:N0e2bbb37b23d42c49fa214097cb75dd3 <http://groq.org/e868f26034de75c0d6df1b9e2ef9fd0106d1ecb3a881369cb8fc1d1124df7872> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/e868f26034de75c0d6df1b9e2ef9fd0106d1ecb3a881369cb8fc1d1124df7872> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Systèmes d'exploitation Objectif: (résultats d'apprentissage)\nsynchronisation/communication (Application)\n• Etre capable d'utiliser les mécanismes de synchronisation usuels sous Linux (sémaphores,\nmutexes, signaux) (Application)\n• Comprendre le principe de mémoire virtuelle (Initiation)\n• Savoir gérer les entrées/sorties sous Linux (Initiation) Course content: par le système d'exploitation y sont exposées : comment les processus se partagent-ils l'accès au\nprocesseur ? Comment se synchronisent-ils et quels mécanismes leur permettent d'échanger des\ndonnées ? Comment sont gérés la mémoire et les entrées/sorties ? Course name: http://example.org/course/UE_XLG4IU030</page1>\n        <page2>Pages: 133-134 HOURS CS Core = 2 KA Core = 0 FPL-Scripting: Shell Scripting CS\nCore: 1\\. Error/exception handling 2\\. Piping (See also: AR-Organization, SF-\nOverview, OS-Process) 3\\. System commands (See also: SF-Overview) a. Interface\nwith operating systems (See also: SF-Overview, OS-Principles) 4\\. Environment\nvariables (See also: SF-Overview) 5\\. File abstraction and operators (See\nalso: SDF-Fundamentals, OS-Files, SF-Resource) 6\\. Data structures, such as\narrays and lists. (See also: AL-Foundational, SDF-Fundamentals, SDFData-\nStructures) 7\\. Regular expressions (See also: AL-Models) 8\\. Programs and\nprocesses (See also: OS-Process) 9\\. Workflow Illustrative learning outcomes:\nCS Core: 1\\. Create and execute automated scripts to manage various system\ntasks. 2\\. Solve various text processing problems through scripting.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/937d04fc9ffb2807ad96f61996c37ac04d4e485a06d59e7325a7778e7826877b> .
_:N7ae727b7b5a34d7fab8bd3198bda8942 <http://schema.org/answer> "0" <http://groq.org/937d04fc9ffb2807ad96f61996c37ac04d4e485a06d59e7325a7778e7826877b> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/has_schema_type> _:N7ae727b7b5a34d7fab8bd3198bda8942 <http://groq.org/937d04fc9ffb2807ad96f61996c37ac04d4e485a06d59e7325a7778e7826877b> .
_:N7ae727b7b5a34d7fab8bd3198bda8942 <http://schema.org/explain> "The lecture focuses on OS mechanisms (synchronization, memory, I/O), while the KU covers scripting skills (piping, system commands, regex), with minimal overlap." <http://groq.org/937d04fc9ffb2807ad96f61996c37ac04d4e485a06d59e7325a7778e7826877b> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/937d04fc9ffb2807ad96f61996c37ac04d4e485a06d59e7325a7778e7826877b> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU030" <http://groq.org/937d04fc9ffb2807ad96f61996c37ac04d4e485a06d59e7325a7778e7826877b> .
_:N7ae727b7b5a34d7fab8bd3198bda8942 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/937d04fc9ffb2807ad96f61996c37ac04d4e485a06d59e7325a7778e7826877b> .
_:N044fcf880bb748b9a731f261035595b9 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/986f3a848f546efb379c5b5f0387b786678b37163f5b313df7bb3a56ba13e7b2> .
_:N044fcf880bb748b9a731f261035595b9 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://faiss.org/986f3a848f546efb379c5b5f0387b786678b37163f5b313df7bb3a56ba13e7b2> .
_:N6c79a8633d99422cbdf2719d749de940 <http://example.org/has_score> "0.63397145"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/986f3a848f546efb379c5b5f0387b786678b37163f5b313df7bb3a56ba13e7b2> .
<http://example.org/faiss> <http://example.org/input> "Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU030" <http://faiss.org/986f3a848f546efb379c5b5f0387b786678b37163f5b313df7bb3a56ba13e7b2> .
_:N044fcf880bb748b9a731f261035595b9 <http://example.org/has_score> "0.639867"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/986f3a848f546efb379c5b5f0387b786678b37163f5b313df7bb3a56ba13e7b2> .
_:N862a6701e29d48e7b32817c5c61cc7b9 <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://faiss.org/986f3a848f546efb379c5b5f0387b786678b37163f5b313df7bb3a56ba13e7b2> .
_:N862a6701e29d48e7b32817c5c61cc7b9 <http://example.org/has_score> "0.64871335"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/986f3a848f546efb379c5b5f0387b786678b37163f5b313df7bb3a56ba13e7b2> .
_:N6c79a8633d99422cbdf2719d749de940 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Graphics_and_Interactive_Techniques_GIT/GIT-Fundamentals.txt> <http://faiss.org/986f3a848f546efb379c5b5f0387b786678b37163f5b313df7bb3a56ba13e7b2> .
_:N862a6701e29d48e7b32817c5c61cc7b9 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://faiss.org/986f3a848f546efb379c5b5f0387b786678b37163f5b313df7bb3a56ba13e7b2> .
_:N6c79a8633d99422cbdf2719d749de940 <http://example.org/has_chunk> "Illustrative Learning Outcomes:\n1. Explain the graphics rendering pipeline.\n2. Differentiate between rasterization and ray tracing.\n3. Apply transformations to 2D and 3D models." <http://faiss.org/986f3a848f546efb379c5b5f0387b786678b37163f5b313df7bb3a56ba13e7b2> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/is_aligned_with> _:N862a6701e29d48e7b32817c5c61cc7b9 <http://faiss.org/986f3a848f546efb379c5b5f0387b786678b37163f5b313df7bb3a56ba13e7b2> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/is_aligned_with> _:N6c79a8633d99422cbdf2719d749de940 <http://faiss.org/986f3a848f546efb379c5b5f0387b786678b37163f5b313df7bb3a56ba13e7b2> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/is_aligned_with> _:N044fcf880bb748b9a731f261035595b9 <http://faiss.org/986f3a848f546efb379c5b5f0387b786678b37163f5b313df7bb3a56ba13e7b2> .
_:N087fb6b07f3c4a9fb9242dfd60c6338e <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/e0d357b2514e1271ce7951d89ff96a1058be2565a41fa37c577842132dfac497> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/e0d357b2514e1271ce7951d89ff96a1058be2565a41fa37c577842132dfac497> .
_:N087fb6b07f3c4a9fb9242dfd60c6338e <http://schema.org/answer> "0" <http://groq.org/e0d357b2514e1271ce7951d89ff96a1058be2565a41fa37c577842132dfac497> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU030" <http://groq.org/e0d357b2514e1271ce7951d89ff96a1058be2565a41fa37c577842132dfac497> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/has_schema_type> _:N087fb6b07f3c4a9fb9242dfd60c6338e <http://groq.org/e0d357b2514e1271ce7951d89ff96a1058be2565a41fa37c577842132dfac497> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU030</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/e0d357b2514e1271ce7951d89ff96a1058be2565a41fa37c577842132dfac497> .
_:N087fb6b07f3c4a9fb9242dfd60c6338e <http://schema.org/explain> "Lecture focuses on teaching methods, not technical platform/programming details in KU" <http://groq.org/e0d357b2514e1271ce7951d89ff96a1058be2565a41fa37c577842132dfac497> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU020" <http://groq.org/846f66ea0202e868339bf5c54c766c40df4a0eb9a9b2612ef78d5fbbf4d5b937> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/has_schema_type> _:Nd1df71e0008146e19319a01b4930e07c <http://groq.org/846f66ea0202e868339bf5c54c766c40df4a0eb9a9b2612ef78d5fbbf4d5b937> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Unité Enseignement de Découverte Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU020</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/846f66ea0202e868339bf5c54c766c40df4a0eb9a9b2612ef78d5fbbf4d5b937> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/846f66ea0202e868339bf5c54c766c40df4a0eb9a9b2612ef78d5fbbf4d5b937> .
_:Nd1df71e0008146e19319a01b4930e07c <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/846f66ea0202e868339bf5c54c766c40df4a0eb9a9b2612ef78d5fbbf4d5b937> .
_:Nd1df71e0008146e19319a01b4930e07c <http://schema.org/answer> "0" <http://groq.org/846f66ea0202e868339bf5c54c766c40df4a0eb9a9b2612ef78d5fbbf4d5b937> .
_:Nd1df71e0008146e19319a01b4930e07c <http://schema.org/explain> "Lecture focuses on teaching methods, not platform-specific programming details." <http://groq.org/846f66ea0202e868339bf5c54c766c40df4a0eb9a9b2612ef78d5fbbf4d5b937> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/is_aligned_with> _:Nf594006b60684f02b5491e4e70307fe3 <http://faiss.org/ba3b0080ad908e36fe9b801489a607f005d25f547e1d0e884ff7279086f4aea8> .
_:N765a98642bba49339ee5900d27c349f6 <http://example.org/has_score> "0.69644845"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/ba3b0080ad908e36fe9b801489a607f005d25f547e1d0e884ff7279086f4aea8> .
_:N765a98642bba49339ee5900d27c349f6 <http://example.org/has_chunk> "AL-Foundational: Foundational Data Structures and Algorithms\nCS Core: (See also: SDF-Data-Structures, SDF-Algorithms)\n1. Abstract Data Type (ADT) and operations on an ADT (See also: FPL-Types)\na. Dictionary operations (insert, delete, find)\n2. Arrays\na. Numeric vs non-numeric, character strings\nb. Single (vector) vs multidimensional (matrix)\n3. Records/Structs/Tuples and Objects (See also: FPL-OOP)\n4. Linked lists (for historical reasons)\na. Single vs Double and Linear vs Circular\n5. Stacks\n6" <http://faiss.org/ba3b0080ad908e36fe9b801489a607f005d25f547e1d0e884ff7279086f4aea8> .
_:Nf594006b60684f02b5491e4e70307fe3 <http://example.org/has_score> "0.6920693"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/ba3b0080ad908e36fe9b801489a607f005d25f547e1d0e884ff7279086f4aea8> .
_:N765a98642bba49339ee5900d27c349f6 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-Foundational_Foundational_Data_Structures_and_Algorithms.txt> <http://faiss.org/ba3b0080ad908e36fe9b801489a607f005d25f547e1d0e884ff7279086f4aea8> .
<http://example.org/faiss> <http://example.org/input> "Label: Algorithmique et Structures de données 1 Objectif: (résultats d'apprentissage)\n•\nÉvaluer une implémentation de structure de données en temps et en place mémoire (coûts minimal,\nmaximal, amorti)\n• Course content: et mise en pratique dans l’approche de résolution de problèmes « Diviser pour régner ». Course name: http://example.org/course/UE_XLG3IU010" <http://faiss.org/ba3b0080ad908e36fe9b801489a607f005d25f547e1d0e884ff7279086f4aea8> .
_:N92b7b3deee6c40f882d4c779f0f33c7c <http://example.org/has_score> "0.6956569"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/ba3b0080ad908e36fe9b801489a607f005d25f547e1d0e884ff7279086f4aea8> .
_:Nf594006b60684f02b5491e4e70307fe3 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-Complexity_Complexity.txt> <http://faiss.org/ba3b0080ad908e36fe9b801489a607f005d25f547e1d0e884ff7279086f4aea8> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/is_aligned_with> _:N92b7b3deee6c40f882d4c779f0f33c7c <http://faiss.org/ba3b0080ad908e36fe9b801489a607f005d25f547e1d0e884ff7279086f4aea8> .
_:Nf594006b60684f02b5491e4e70307fe3 <http://example.org/has_chunk> ". Space Complexity\ni. NSpace and PSpace\nii. Savitch’s theorem\nIllustrative Learning Outcomes:\nCS Core:\n1. Prepare a presentation that explains to first year students the basic concepts of algorithmic\ncomplexity including best, average, and worst-case algorithm behavior, Big- O, Omega, and Theta\nnotations, complexity classes, time and space tradeoffs, empirical measurement, and impact on\npractical problems.\n2. Using examples, explain each of the foundational complexity classes in this unit.\n3" <http://faiss.org/ba3b0080ad908e36fe9b801489a607f005d25f547e1d0e884ff7279086f4aea8> .
_:N92b7b3deee6c40f882d4c779f0f33c7c <http://example.org/has_chunk> ". (See also: AI-LRR)\n13. Integration with other programming paradigms such as object-oriented programming.\n14. Advance programming constructs such as difference-lists, creating user defined data structures, set\nof, etc.\nIllustrative learning outcomes:\nKA Core:\n1. Use a logic language to implement a conventional algorithm.\n2. Use a logic language to implement an algorithm employing implicit search using clauses, relations,\nand cuts.\n3" <http://faiss.org/ba3b0080ad908e36fe9b801489a607f005d25f547e1d0e884ff7279086f4aea8> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/is_aligned_with> _:N765a98642bba49339ee5900d27c349f6 <http://faiss.org/ba3b0080ad908e36fe9b801489a607f005d25f547e1d0e884ff7279086f4aea8> .
_:N92b7b3deee6c40f882d4c779f0f33c7c <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Logic_Logic_Programming.txt> <http://faiss.org/ba3b0080ad908e36fe9b801489a607f005d25f547e1d0e884ff7279086f4aea8> .
_:N405ef15e4852421698950a8d2536227e <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/ce393e41e90442234d668265143308f7192021f70bfd567ab233fa46fd85513c> .
_:N405ef15e4852421698950a8d2536227e <http://schema.org/explain> "The lecture focuses on professional development and networking without covering project management concepts." <http://groq.org/ce393e41e90442234d668265143308f7192021f70bfd567ab233fa46fd85513c> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/ce393e41e90442234d668265143308f7192021f70bfd567ab233fa46fd85513c> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S4 Objectif: (résultats d'apprentissage)\nfaire et savoir-être) et d'un plan d'actions sur les prochaines années : à l'écrit et à l'oral\n- d'identitier et d'animer son réseau (professionnel et élargi)\n- de créer et de faire vivre ses profils numériques professionnels\n- de mener une enquête métier auprès d'un professionnel et de la restituer Course content: - présentation orale de la restitution de l'enquête et des recherches sur le métier\n- équivalent de 8 TD + présentation orale des enquêtes:\n- identication de ses valeurs\n- indentification de ses compétences\n- consrtruction de son projet professionnel et personnel\n- présentation de son projet Course name: http://example.org/course/UE_XLG4TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Project Management: Core\nConcepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nSE-Project Management. 2\\. Apply principles in practical scenarios. 3\\.\nAnalyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/ce393e41e90442234d668265143308f7192021f70bfd567ab233fa46fd85513c> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU010" <http://groq.org/ce393e41e90442234d668265143308f7192021f70bfd567ab233fa46fd85513c> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/has_schema_type> _:N405ef15e4852421698950a8d2536227e <http://groq.org/ce393e41e90442234d668265143308f7192021f70bfd567ab233fa46fd85513c> .
_:N405ef15e4852421698950a8d2536227e <http://schema.org/answer> "0" <http://groq.org/ce393e41e90442234d668265143308f7192021f70bfd567ab233fa46fd85513c> .
_:N1299b3f13468450bbf96453ade706bc0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/79643ca9625fb86563232f1debaa485cd757aaf52dd85bf5ed46359a69736977> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/has_schema_type> _:N1299b3f13468450bbf96453ade706bc0 <http://groq.org/79643ca9625fb86563232f1debaa485cd757aaf52dd85bf5ed46359a69736977> .
_:N1299b3f13468450bbf96453ade706bc0 <http://schema.org/explain> "The lecture focuses on methodology and professional insertion, while the KU covers SE-Project Management concepts, which are not substantially related." <http://groq.org/79643ca9625fb86563232f1debaa485cd757aaf52dd85bf5ed46359a69736977> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S4 Objectif: (résultats d'apprentissage)\nfaire et savoir-être) et d'un plan d'actions sur les prochaines années : à l'écrit et à l'oral\n- d'identitier et d'animer son réseau (professionnel et élargi)\n- de créer et de faire vivre ses profils numériques professionnels\n- de mener une enquête métier auprès d'un professionnel et de la restituer Course content: - présentation orale de la restitution de l'enquête et des recherches sur le métier\n- équivalent de 8 TD + présentation orale des enquêtes:\n- identication de ses valeurs\n- indentification de ses compétences\n- consrtruction de son projet professionnel et personnel\n- présentation de son projet Course name: http://example.org/course/UE_XLG4TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Project Management: Core\nConcepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nSE-Project Management. 2\\. Apply principles in practical scenarios. 3\\.\nAnalyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/79643ca9625fb86563232f1debaa485cd757aaf52dd85bf5ed46359a69736977> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU010" <http://groq.org/79643ca9625fb86563232f1debaa485cd757aaf52dd85bf5ed46359a69736977> .
_:N1299b3f13468450bbf96453ade706bc0 <http://schema.org/answer> "0" <http://groq.org/79643ca9625fb86563232f1debaa485cd757aaf52dd85bf5ed46359a69736977> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/79643ca9625fb86563232f1debaa485cd757aaf52dd85bf5ed46359a69736977> .
_:N1de55c0a795349c89d8457051f78f5e7 <http://schema.org/explain> "Lecture covers OOP inheritance/poly, KU focuses on logic programming core (unification, Horn clauses). No substantial overlap." <http://groq.org/a83a5d722d499bffac18066d3071520c6d13733ca8d0fabc56d55f0b0fb86401> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU030" <http://groq.org/a83a5d722d499bffac18066d3071520c6d13733ca8d0fabc56d55f0b0fb86401> .
_:N1de55c0a795349c89d8457051f78f5e7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/a83a5d722d499bffac18066d3071520c6d13733ca8d0fabc56d55f0b0fb86401> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Programmation à Objets Objectif: (résultats d'apprentissage) Connaître les mécanismes d’héritage et de polymorphisme Course content: Classes abstraites Course name: http://example.org/course/UE_XLG3IU030</page1>\n        <page2>Pages: 133 HOURS CS Core = 0 KA Core = 2 + 1 (MSF) FPL-Logic: Logic\nProgramming KA Core: 1\\. Universal vs existential quantifiers. (See also: AI-\nLRR, MSF-Discrete) 2\\. First order predicate logic vs higher order logic. (See\nalso: AI-LRR, MSF-Discrete) 3\\. Expressing complex relations using logical\nconnectives and simpler relations. 4\\. Definitions of Horn clause, facts,\ngoals and subgoals. 5\\. Unification and unification algorithm; unification vs\nassertion vs expression evaluation. 6\\. Mixing relations with functions. (See\nalso: MSF-Discrete) 7\\. Cuts, backtracking, and non-determinism. 8\\. Closed-\nworld vs open-world assumptions. Non-core: 9\\. Memory overhead of variable\ncopying in handling iterative programs. 10\\. Programming constructs to store\npartial computation and pruning search trees. 11\\. Mixing functional\nprogramming and logic programming using concepts such as equational logic,\nnarrowing, residuation, and semantic unification. (See also: FPL-Functional)\n12\\. Higher-order, constraint, and inductive logic programming. (See also: AI-\nLRR) 13\\. Integration with other programming paradigms such as object-oriented\nprogramming. 14\\. Advance programming constructs such as difference-lists,\ncreating user defined data structures, set of, etc. Illustrative learning\noutcomes: KA Core: 1\\. Use a logic language to implement a conventional\nalgorithm. 2\\. Use a logic language to implement an algorithm employing\nimplicit search using clauses, relations, and cuts. 3\\. Use a simple\nillustrative example to show correspondence between First Order Predicate\nLogic (FOPL) and logic programs using Horn clauses. 4\\. Use examples to\nillustrate the unification algorithm and its role of parameter-passing in\nquery reduction. 5\\. Use simple logic programs interleaving relations,\nfunctions, and recursive programming such as factorial and Fibonacci numbers\nand simple complex relationships between entities and illustrate execution and\nparameter-passing using unification and backtracking. Non-core: 6\\. Illustrate\ncomputation of simple programs such as Fibonacci and show overhead of\nrecomputation, and then show how to improve execution overhead.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/a83a5d722d499bffac18066d3071520c6d13733ca8d0fabc56d55f0b0fb86401> .
_:N1de55c0a795349c89d8457051f78f5e7 <http://schema.org/answer> "0" <http://groq.org/a83a5d722d499bffac18066d3071520c6d13733ca8d0fabc56d55f0b0fb86401> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/has_schema_type> _:N1de55c0a795349c89d8457051f78f5e7 <http://groq.org/a83a5d722d499bffac18066d3071520c6d13733ca8d0fabc56d55f0b0fb86401> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/a83a5d722d499bffac18066d3071520c6d13733ca8d0fabc56d55f0b0fb86401> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/has_schema_type> _:N060e16fb99ff4dc1b373e0ec9289bb7b <http://groq.org/08c7886217d243d2b34ade6da653e877f0591957d64075dc9defad93c5a07f24> .
_:N060e16fb99ff4dc1b373e0ec9289bb7b <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/08c7886217d243d2b34ade6da653e877f0591957d64075dc9defad93c5a07f24> .
_:N060e16fb99ff4dc1b373e0ec9289bb7b <http://schema.org/answer> "0" <http://groq.org/08c7886217d243d2b34ade6da653e877f0591957d64075dc9defad93c5a07f24> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3AU010</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/08c7886217d243d2b34ade6da653e877f0591957d64075dc9defad93c5a07f24> .
_:N060e16fb99ff4dc1b373e0ec9289bb7b <http://schema.org/explain> "Lecture focuses on teaching methods, not platform-specific programming constraints or languages." <http://groq.org/08c7886217d243d2b34ade6da653e877f0591957d64075dc9defad93c5a07f24> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3AU010" <http://groq.org/08c7886217d243d2b34ade6da653e877f0591957d64075dc9defad93c5a07f24> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/08c7886217d243d2b34ade6da653e877f0591957d64075dc9defad93c5a07f24> .
_:N17e0813f7ab146109ba5becaeac14dd8 <http://schema.org/answer> "1" <http://groq.org/2d14f1d28cacc28a744ab503ec19c57fbe72786a0c3c9ff4031c4d0b5a3fbf2b> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU030</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/2d14f1d28cacc28a744ab503ec19c57fbe72786a0c3c9ff4031c4d0b5a3fbf2b> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/has_schema_type> _:N17e0813f7ab146109ba5becaeac14dd8 <http://groq.org/2d14f1d28cacc28a744ab503ec19c57fbe72786a0c3c9ff4031c4d0b5a3fbf2b> .
_:N17e0813f7ab146109ba5becaeac14dd8 <http://schema.org/explain> "The lecture covers the overview of development platforms, programming via platform-specific API, platform languages, and programming under platform constraints, which aligns with the KU's content." <http://groq.org/2d14f1d28cacc28a744ab503ec19c57fbe72786a0c3c9ff4031c4d0b5a3fbf2b> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU030" <http://groq.org/2d14f1d28cacc28a744ab503ec19c57fbe72786a0c3c9ff4031c4d0b5a3fbf2b> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/2d14f1d28cacc28a744ab503ec19c57fbe72786a0c3c9ff4031c4d0b5a3fbf2b> .
_:N17e0813f7ab146109ba5becaeac14dd8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/2d14f1d28cacc28a744ab503ec19c57fbe72786a0c3c9ff4031c4d0b5a3fbf2b> .
_:N47e747c4ae7149be8246b451f025a6f6 <http://schema.org/answer> "1" <http://groq.org/f7b0fb90fe2da4f0a5cfd2210b60aa59776b5f763ba867e2de1890b95bd6f6a1> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 1 Objectif: (résultats d'apprentissage)\n•\nÉvaluer une implémentation de structure de données en temps et en place mémoire (coûts minimal,\nmaximal, amorti)\n• Course content: et mise en pratique dans l’approche de résolution de problèmes « Diviser pour régner ». Course name: http://example.org/course/UE_XLG3IU010</page1>\n        <page2>Pages:88-90 HOURS CS Core = 11 KA Core = 6 AL-Foundational: Foundational Data\nStructures and Algorithms CS Core: (See also: SDF-Data-Structures, SDF-\nAlgorithms) 1\\. Abstract Data Type (ADT) and operations on an ADT (See also:\nFPL-Types) a. Dictionary operations (insert, delete, find) 2\\. Arrays a.\nNumeric vs non-numeric, character strings b. Single (vector) vs\nmultidimensional (matrix) 3\\. Records/Structs/Tuples and Objects (See also:\nFPL-OOP) 4\\. Linked lists (for historical reasons) a. Single vs Double and\nLinear vs Circular 5\\. Stacks 6\\. Queues and deques a. Heap-based priority\nqueue 7\\. Hash tables/maps a. Collision resolution and complexity (e.g.,\nprobing, chaining, rehash) 8\\. Graphs (e.g., [un]directed, [a]cyclic,\n[un]connected, and [un]weighted) (See also: MSF-Discrete) a. Graph\nrepresentation: adjacency list vs matrix 9\\. Trees (See also: MSF-Discrete) a.\nBinary, n-ary, and search trees b. Balanced (e.g., AVL, Red-Black, Heap) 10\\.\nSets (See also: MSF-Discrete) 11\\. Search algorithms a. O(n) complexity (e.g.,\nlinear/sequential array/list search) b. O(log2 n) complexity (e.g., binary\nsearch) c. O(logb n) complexity (e.g., uninformed depth/breadth-first tree\nsearch) 12\\. Sorting algorithms (e.g., stable, unstable) a. O(n2) complexity\n(e.g., insertion, selection), b. O(n log n) complexity (e.g., quicksort,\nmerge, timsort) 13\\. Graph algorithms a. Shortest path (e.g., Dijkstra's,\nFloyd's) b. Minimal spanning tree (e.g., Prim's, Kruskal's) KA Core: 14\\.\nSorting algorithms a. O(n log n) complexity heapsort b. Pseudo O(n) complexity\n(e.g., bucket, counting, radix) 15\\. Graph algorithms a. Transitive closure\n(e.g., Warshall's) b. Topological sort 16\\. Matching a. Efficient string\nmatching (e.g., Boyer-Moore, Knuth-Morris-Pratt) b. Longest common subsequence\nmatching c. Regular expression matching Non-core: 17\\. Cryptography algorithms\n(e.g., SHA-256) (See also: SEC-Crypto) 18\\. Parallel algorithms (See also:\nPDC-Algorithms, FPL-Parallel) 19\\. Consensus algorithms (e.g., Blockchain)\n(See also: SEC-Crypto) a. Proof of work vs proof of stake (See also: SEP-\nSustainability) 20\\. Quantum computing algorithms (See also: AL-Models, AR-\nQuantum) a. Oracle-based (e.g., Deutsch-Jozsa, Bernstein-Vazirani, Simon) b.\nSuperpolynomial speed-up via QFT (e.g., Shor's) c. Polynomial speed-up via\namplitude amplification (e.g., Grover's) 21\\. Fast-Fourier Transform (FFT)\nalgorithm 22\\. Differential evolution algorithm Illustrative Learning\nOutcomes: CS Core: 1\\. For each ADT/Data-Structure in this unit a. Explain its\ndefinition, properties, representation(s), and associated ADT operations. b.\nExplain step-by-step how the ADT operations associated with the data structure\ntransform it. 2\\. For each algorithm in this unit explain step-by-step how the\nalgorithm operates. 3\\. For each algorithmic approach (e.g., sorting) in this\nunit apply a prototypical example of the approach (e.g., merge sort). 90 4\\.\nGiven requirements for a problem, develop multiple solutions using various\ndata structures and algorithms. Subsequently, evaluate the suitability,\nstrengths, and weaknesses selecting an approach that best satisfies the\nrequirements. 5\\. Explain how collision avoidance and collision resolution is\nhandled in hash tables. 6\\. Explain factors beyond computational efficiency\nthat influence the choice of algorithms, such as programming time,\nmaintainability, and the use of application-specific patterns in the input\ndata. 7\\. Explain the heap property and the use of heaps as an implementation\nof a priority queue. KA Core: 8\\. For each of the algorithms and algorithmic\napproaches in the KA Core topics: a. Explain a prototypical example of the\nalgorithm, and b. Explain step-by-step how the algorithm operates. Non-core:\n9\\. An appreciation of quantum computation and its application to certain\nproblems.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/f7b0fb90fe2da4f0a5cfd2210b60aa59776b5f763ba867e2de1890b95bd6f6a1> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU010" <http://groq.org/f7b0fb90fe2da4f0a5cfd2210b60aa59776b5f763ba867e2de1890b95bd6f6a1> .
_:N47e747c4ae7149be8246b451f025a6f6 <http://schema.org/explain> "The lecture covers a significant portion of the KU, including data structures, algorithms, and their applications, with a focus on computer science core topics." <http://groq.org/f7b0fb90fe2da4f0a5cfd2210b60aa59776b5f763ba867e2de1890b95bd6f6a1> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/has_schema_type> _:N47e747c4ae7149be8246b451f025a6f6 <http://groq.org/f7b0fb90fe2da4f0a5cfd2210b60aa59776b5f763ba867e2de1890b95bd6f6a1> .
_:N47e747c4ae7149be8246b451f025a6f6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/f7b0fb90fe2da4f0a5cfd2210b60aa59776b5f763ba867e2de1890b95bd6f6a1> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/f7b0fb90fe2da4f0a5cfd2210b60aa59776b5f763ba867e2de1890b95bd6f6a1> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Optimisation 1 et Calcul integral Objectif: (résultats d'apprentissage)\n• Course content: • Course name: http://example.org/course/UE_XLG4MU050</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/112e34ac6d0e34891dce4df95a4b78ffdfc12331ec504a86ca1e615cd437498e> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/has_schema_type> _:Nfc5b990ed4ed40f29587fbb69acc5296 <http://groq.org/112e34ac6d0e34891dce4df95a4b78ffdfc12331ec504a86ca1e615cd437498e> .
_:Nfc5b990ed4ed40f29587fbb69acc5296 <http://schema.org/answer> "1" <http://groq.org/112e34ac6d0e34891dce4df95a4b78ffdfc12331ec504a86ca1e615cd437498e> .
_:Nfc5b990ed4ed40f29587fbb69acc5296 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/112e34ac6d0e34891dce4df95a4b78ffdfc12331ec504a86ca1e615cd437498e> .
_:Nfc5b990ed4ed40f29587fbb69acc5296 <http://schema.org/explain> "The lecture covers topics such as development platforms, programming languages, and platform constraints, which align with the Knowledge Unit's objectives." <http://groq.org/112e34ac6d0e34891dce4df95a4b78ffdfc12331ec504a86ca1e615cd437498e> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/112e34ac6d0e34891dce4df95a4b78ffdfc12331ec504a86ca1e615cd437498e> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4MU050" <http://groq.org/112e34ac6d0e34891dce4df95a4b78ffdfc12331ec504a86ca1e615cd437498e> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU010" <http://groq.org/f864101355e3d05311ba15cf9ea8b1aece69a5b4c51e4d866fa632d350e0915b> .
_:N2d75625fdbb44a0a8313b2f20f47e08c <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/f864101355e3d05311ba15cf9ea8b1aece69a5b4c51e4d866fa632d350e0915b> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/f864101355e3d05311ba15cf9ea8b1aece69a5b4c51e4d866fa632d350e0915b> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/has_schema_type> _:N2d75625fdbb44a0a8313b2f20f47e08c <http://groq.org/f864101355e3d05311ba15cf9ea8b1aece69a5b4c51e4d866fa632d350e0915b> .
_:N2d75625fdbb44a0a8313b2f20f47e08c <http://schema.org/explain> "The lecture focuses on data structures, while the KU covers logic programming." <http://groq.org/f864101355e3d05311ba15cf9ea8b1aece69a5b4c51e4d866fa632d350e0915b> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 2 Objectif: (résultats d'apprentissage)\ndonnées (itératifs et récursifs) Course content: Structures de données non-linéaires associatives (table associative, ensemble, classe-union) Course name: http://example.org/course/UE_XLG4IU010</page1>\n        <page2>Pages: 133 HOURS CS Core = 0 KA Core = 2 + 1 (MSF) FPL-Logic: Logic\nProgramming KA Core: 1\\. Universal vs existential quantifiers. (See also: AI-\nLRR, MSF-Discrete) 2\\. First order predicate logic vs higher order logic. (See\nalso: AI-LRR, MSF-Discrete) 3\\. Expressing complex relations using logical\nconnectives and simpler relations. 4\\. Definitions of Horn clause, facts,\ngoals and subgoals. 5\\. Unification and unification algorithm; unification vs\nassertion vs expression evaluation. 6\\. Mixing relations with functions. (See\nalso: MSF-Discrete) 7\\. Cuts, backtracking, and non-determinism. 8\\. Closed-\nworld vs open-world assumptions. Non-core: 9\\. Memory overhead of variable\ncopying in handling iterative programs. 10\\. Programming constructs to store\npartial computation and pruning search trees. 11\\. Mixing functional\nprogramming and logic programming using concepts such as equational logic,\nnarrowing, residuation, and semantic unification. (See also: FPL-Functional)\n12\\. Higher-order, constraint, and inductive logic programming. (See also: AI-\nLRR) 13\\. Integration with other programming paradigms such as object-oriented\nprogramming. 14\\. Advance programming constructs such as difference-lists,\ncreating user defined data structures, set of, etc. Illustrative learning\noutcomes: KA Core: 1\\. Use a logic language to implement a conventional\nalgorithm. 2\\. Use a logic language to implement an algorithm employing\nimplicit search using clauses, relations, and cuts. 3\\. Use a simple\nillustrative example to show correspondence between First Order Predicate\nLogic (FOPL) and logic programs using Horn clauses. 4\\. Use examples to\nillustrate the unification algorithm and its role of parameter-passing in\nquery reduction. 5\\. Use simple logic programs interleaving relations,\nfunctions, and recursive programming such as factorial and Fibonacci numbers\nand simple complex relationships between entities and illustrate execution and\nparameter-passing using unification and backtracking. Non-core: 6\\. Illustrate\ncomputation of simple programs such as Fibonacci and show overhead of\nrecomputation, and then show how to improve execution overhead.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/f864101355e3d05311ba15cf9ea8b1aece69a5b4c51e4d866fa632d350e0915b> .
_:N2d75625fdbb44a0a8313b2f20f47e08c <http://schema.org/answer> "0" <http://groq.org/f864101355e3d05311ba15cf9ea8b1aece69a5b4c51e4d866fa632d350e0915b> .
_:Nfa694ca49622488daaee04756b3adfba <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/2699980f2db892e9b8b33026f57cb2b07cb4b086a443dd5966a2b002f766ae3d> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Systèmes d'exploitation Objectif: (résultats d'apprentissage)\nsynchronisation/communication (Application)\n• Etre capable d'utiliser les mécanismes de synchronisation usuels sous Linux (sémaphores,\nmutexes, signaux) (Application)\n• Comprendre le principe de mémoire virtuelle (Initiation)\n• Savoir gérer les entrées/sorties sous Linux (Initiation) Course content: par le système d'exploitation y sont exposées : comment les processus se partagent-ils l'accès au\nprocesseur ? Comment se synchronisent-ils et quels mécanismes leur permettent d'échanger des\ndonnées ? Comment sont gérés la mémoire et les entrées/sorties ? Course name: http://example.org/course/UE_XLG4IU030</page1>\n        <page2>Pages: 139-140 HOURS CS Core = 2 KA Core = 3 FPL-Translation: Language\nTranslation and Execution CS Core: 1\\. Execution models for JIT (Just-In-\nTime), compiler, interpreter 2\\. Use of intermediate code, e.g., bytecode 3\\.\nLimitations and benefits of JIT, compiler, and interpreter 4\\. Cross\ncompilers/transpilers 5\\. BNF and extended BNF representation of context-free\ngrammar 6\\. Parse tree using a simple sentence such as arithmetic expression\nor if-then-else statement 7\\. Execution as native code or within a virtual\nmachine 8\\. Language translation pipeline: syntax analysis, parsing, optional\ntype-checking, translation/code generation and optimization, linking, loading,\nexecution KA Core: 9\\. Run-time representation of core language constructs\nsuch as objects (method tables) and functions that can be passed as parameters\nto and returned from functions (closures) 10\\. Secure compiler development\n(See also: SEC-Foundations, SEC-Coding) Illustrative learning outcomes: CS\nCore: 1\\. Explain and understand the differences between compiled, JIT, and\ninterpreted language implementations, including the benefits and limitations\nof each. 2\\. Differentiate syntax and parsing from semantics and evaluation.\n3\\. Use BNF and extended BNF to specify the syntax of simple constructs such\nas if-then-else, type declaration and iterative constructs for known languages\nsuch as C++ or Python. 4\\. Illustrate the parse tree using a simple\nsentence/arithmetic expression. 5\\. Illustrate translation of syntax diagrams\nto BNF/extended BNF for simple constructs such as if-thenelse, type\ndeclaration, iterative constructs, etc. 6\\. Illustrate ambiguity in parsing\nusing nested if-then-else/arithmetic expression and show resolution using\nprecedence order. KA-Core: 7\\. Discuss the benefits and limitations of garbage\ncollection, including the notion of reachability.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/2699980f2db892e9b8b33026f57cb2b07cb4b086a443dd5966a2b002f766ae3d> .
_:Nfa694ca49622488daaee04756b3adfba <http://schema.org/answer> "0" <http://groq.org/2699980f2db892e9b8b33026f57cb2b07cb4b086a443dd5966a2b002f766ae3d> .
_:Nfa694ca49622488daaee04756b3adfba <http://schema.org/explain> "No overlap in topics; KU focuses on language translation, lecture on OS concepts" <http://groq.org/2699980f2db892e9b8b33026f57cb2b07cb4b086a443dd5966a2b002f766ae3d> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/2699980f2db892e9b8b33026f57cb2b07cb4b086a443dd5966a2b002f766ae3d> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/has_schema_type> _:Nfa694ca49622488daaee04756b3adfba <http://groq.org/2699980f2db892e9b8b33026f57cb2b07cb4b086a443dd5966a2b002f766ae3d> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU030" <http://groq.org/2699980f2db892e9b8b33026f57cb2b07cb4b086a443dd5966a2b002f766ae3d> .
_:N5cb95e67bdf843958ac5c8e2427b5b93 <http://schema.org/answer> "1" <http://groq.org/e98ca2b7b0406f84f916e99f22dfe3f81e216ad567a0a37ecc0c38c4216b3d1d> .
_:N5cb95e67bdf843958ac5c8e2427b5b93 <http://schema.org/explain> "Covers grammars, Chomsky hierarchy, parsing/lexical tools (flex/bison), and core syntax analysis topics." <http://groq.org/e98ca2b7b0406f84f916e99f22dfe3f81e216ad567a0a37ecc0c38c4216b3d1d> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU020" <http://groq.org/e98ca2b7b0406f84f916e99f22dfe3f81e216ad567a0a37ecc0c38c4216b3d1d> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/has_schema_type> _:N5cb95e67bdf843958ac5c8e2427b5b93 <http://groq.org/e98ca2b7b0406f84f916e99f22dfe3f81e216ad567a0a37ecc0c38c4216b3d1d> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Langages et automates Objectif: (résultats d'apprentissage)\n5. Course content: • Langages algébriques\n- Grammaire algébrique\n- Arbre de dérivation\n- Automates à pile\n• Hiérarchie de Chomsky\n- Classification des grammaires;\n- Algorithmes de reconnaissance pour les grammaires de type 1 et 2\n• Analyse lexicale et syntaxique\n- TP de flex et bison Course name: http://example.org/course/UE_XLG4IU020</page1>\n        <page2>Pages: 141 HOURS CS Core = 0 KA Core = 0 FPL-Syntax: Syntax Analysis Non-core:\n1\\. Regular grammars vs context-free grammars (See also: AL-Models) 2\\.\nScanning and parsing based on language specifications 3\\. Lexical analysis\nusing regular expressions 4\\. Tokens and their use 5\\. Parsing strategies\nincluding top-down (e.g., recursive descent, or LL) and bottom-up (e.g., LR or\nGLR) techniques a. Lookahead tables and their application to parsing 6\\.\nLanguage theory: a. Chomsky hierarchy (See also: AL-Models) b. Left-\nmost/right-most derivation and ambiguity c. Grammar transformation 7\\. Parser\nerror recovery mechanisms 8\\. Generating scanners and parsers from declarative\nspecifications Illustrative learning outcomes: Non-core: 1\\. Use formal\ngrammars to specify the syntax of languages. 2\\. Illustrate the role of\nlookahead tables in parsing. 3\\. Use declarative tools to generate parsers and\nscanners. 4\\. Recognize key issues in syntax definitions: ambiguity,\nassociativity, precedence.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/e98ca2b7b0406f84f916e99f22dfe3f81e216ad567a0a37ecc0c38c4216b3d1d> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/e98ca2b7b0406f84f916e99f22dfe3f81e216ad567a0a37ecc0c38c4216b3d1d> .
_:N5cb95e67bdf843958ac5c8e2427b5b93 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/e98ca2b7b0406f84f916e99f22dfe3f81e216ad567a0a37ecc0c38c4216b3d1d> .
_:N6f983bdf3ed6442ca174262b3736fe83 <http://schema.org/answer> "0" <http://groq.org/6b37063de1197f01def8ceedc85b1b1d9c8ab010c02c5a177501a78b9ce7cfe3> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S4 Objectif: (résultats d'apprentissage)\nfaire et savoir-être) et d'un plan d'actions sur les prochaines années : à l'écrit et à l'oral\n- d'identitier et d'animer son réseau (professionnel et élargi)\n- de créer et de faire vivre ses profils numériques professionnels\n- de mener une enquête métier auprès d'un professionnel et de la restituer Course content: - présentation orale de la restitution de l'enquête et des recherches sur le métier\n- équivalent de 8 TD + présentation orale des enquêtes:\n- identication de ses valeurs\n- indentification de ses compétences\n- consrtruction de son projet professionnel et personnel\n- présentation de son projet Course name: http://example.org/course/UE_XLG4TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Testing and Quality Assurance:\nCore Concepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nSE-Testing and Quality Assurance. 2\\. Apply principles in practical scenarios.\n3\\. Analyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/6b37063de1197f01def8ceedc85b1b1d9c8ab010c02c5a177501a78b9ce7cfe3> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/has_schema_type> _:N6f983bdf3ed6442ca174262b3736fe83 <http://groq.org/6b37063de1197f01def8ceedc85b1b1d9c8ab010c02c5a177501a78b9ce7cfe3> .
_:N6f983bdf3ed6442ca174262b3736fe83 <http://schema.org/explain> "No overlap in topics; lecture focuses on professional skills, KU covers SE testing/quality assurance." <http://groq.org/6b37063de1197f01def8ceedc85b1b1d9c8ab010c02c5a177501a78b9ce7cfe3> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU010" <http://groq.org/6b37063de1197f01def8ceedc85b1b1d9c8ab010c02c5a177501a78b9ce7cfe3> .
_:N6f983bdf3ed6442ca174262b3736fe83 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/6b37063de1197f01def8ceedc85b1b1d9c8ab010c02c5a177501a78b9ce7cfe3> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/6b37063de1197f01def8ceedc85b1b1d9c8ab010c02c5a177501a78b9ce7cfe3> .
_:N13036384bbb24e498dd8b30f2cf0e1b9 <http://schema.org/explain> "No overlap in topics; lecture focuses on professional skills, KU on formal methods theory." <http://groq.org/91828b3271fad668116c2c24f515c776e8d40c887140fbb200aaa2dc5ebadd28> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S4 Objectif: (résultats d'apprentissage)\nfaire et savoir-être) et d'un plan d'actions sur les prochaines années : à l'écrit et à l'oral\n- d'identitier et d'animer son réseau (professionnel et élargi)\n- de créer et de faire vivre ses profils numériques professionnels\n- de mener une enquête métier auprès d'un professionnel et de la restituer Course content: - présentation orale de la restitution de l'enquête et des recherches sur le métier\n- équivalent de 8 TD + présentation orale des enquêtes:\n- identication de ses valeurs\n- indentification de ses compétences\n- consrtruction de son projet professionnel et personnel\n- présentation de son projet Course name: http://example.org/course/UE_XLG4TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/91828b3271fad668116c2c24f515c776e8d40c887140fbb200aaa2dc5ebadd28> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/has_schema_type> _:N13036384bbb24e498dd8b30f2cf0e1b9 <http://groq.org/91828b3271fad668116c2c24f515c776e8d40c887140fbb200aaa2dc5ebadd28> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU010" <http://groq.org/91828b3271fad668116c2c24f515c776e8d40c887140fbb200aaa2dc5ebadd28> .
_:N13036384bbb24e498dd8b30f2cf0e1b9 <http://schema.org/answer> "0" <http://groq.org/91828b3271fad668116c2c24f515c776e8d40c887140fbb200aaa2dc5ebadd28> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/91828b3271fad668116c2c24f515c776e8d40c887140fbb200aaa2dc5ebadd28> .
_:N13036384bbb24e498dd8b30f2cf0e1b9 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/91828b3271fad668116c2c24f515c776e8d40c887140fbb200aaa2dc5ebadd28> .
_:N2130d0217afe46b68cdc35b3c3376f05 <http://schema.org/explain> "Lecture focuses on teaching methods, while KU covers software architecture concepts." <http://groq.org/75cbd42f3854cfcce765b504b3224adf705e2aa936e57a50bcce2e9fcde32f19> .
_:N2130d0217afe46b68cdc35b3c3376f05 <http://schema.org/answer> "0" <http://groq.org/75cbd42f3854cfcce765b504b3224adf705e2aa936e57a50bcce2e9fcde32f19> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/has_schema_type> _:N2130d0217afe46b68cdc35b3c3376f05 <http://groq.org/75cbd42f3854cfcce765b504b3224adf705e2aa936e57a50bcce2e9fcde32f19> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4AU010" <http://groq.org/75cbd42f3854cfcce765b504b3224adf705e2aa936e57a50bcce2e9fcde32f19> .
_:N2130d0217afe46b68cdc35b3c3376f05 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/75cbd42f3854cfcce765b504b3224adf705e2aa936e57a50bcce2e9fcde32f19> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/75cbd42f3854cfcce765b504b3224adf705e2aa936e57a50bcce2e9fcde32f19> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S4 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4AU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Software Architecture: Core\nConcepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nSE-Software Architecture. 2\\. Apply principles in practical scenarios. 3\\.\nAnalyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/75cbd42f3854cfcce765b504b3224adf705e2aa936e57a50bcce2e9fcde32f19> .
_:Ne10154e93d8a40e5ad2b2fc509d239c2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/43fe47284025b57f82a37f8ba47c02acf7bb80809052ca4ca0451a50fc8b43a1> .
_:Ne10154e93d8a40e5ad2b2fc509d239c2 <http://schema.org/explain> "No overlap in topics; lecture focuses on mathematics while KU covers programming platforms and constraints" <http://groq.org/43fe47284025b57f82a37f8ba47c02acf7bb80809052ca4ca0451a50fc8b43a1> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/has_schema_type> _:Ne10154e93d8a40e5ad2b2fc509d239c2 <http://groq.org/43fe47284025b57f82a37f8ba47c02acf7bb80809052ca4ca0451a50fc8b43a1> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Optimisation 1 et Calcul integral Objectif: (résultats d'apprentissage)\n• Course content: • Course name: http://example.org/course/UE_XLG4MU050</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/43fe47284025b57f82a37f8ba47c02acf7bb80809052ca4ca0451a50fc8b43a1> .
_:Ne10154e93d8a40e5ad2b2fc509d239c2 <http://schema.org/answer> "0" <http://groq.org/43fe47284025b57f82a37f8ba47c02acf7bb80809052ca4ca0451a50fc8b43a1> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/43fe47284025b57f82a37f8ba47c02acf7bb80809052ca4ca0451a50fc8b43a1> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4MU050" <http://groq.org/43fe47284025b57f82a37f8ba47c02acf7bb80809052ca4ca0451a50fc8b43a1> .
_:Ne7c55bb98c474046bc41a4287930b6b6 <http://schema.org/explain> "The lecture focuses on teaching methods in English, not software architecture." <http://groq.org/24ce27efd406a4f86d4f324229bb6b30b7ec8189c60aae0a49ad773f8ae6b93f> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/24ce27efd406a4f86d4f324229bb6b30b7ec8189c60aae0a49ad773f8ae6b93f> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/has_schema_type> _:Ne7c55bb98c474046bc41a4287930b6b6 <http://groq.org/24ce27efd406a4f86d4f324229bb6b30b7ec8189c60aae0a49ad773f8ae6b93f> .
_:Ne7c55bb98c474046bc41a4287930b6b6 <http://schema.org/answer> "0" <http://groq.org/24ce27efd406a4f86d4f324229bb6b30b7ec8189c60aae0a49ad773f8ae6b93f> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4AU010" <http://groq.org/24ce27efd406a4f86d4f324229bb6b30b7ec8189c60aae0a49ad773f8ae6b93f> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S4 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4AU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Software Architecture: Core\nConcepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nSE-Software Architecture. 2\\. Apply principles in practical scenarios. 3\\.\nAnalyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/24ce27efd406a4f86d4f324229bb6b30b7ec8189c60aae0a49ad773f8ae6b93f> .
_:Ne7c55bb98c474046bc41a4287930b6b6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/24ce27efd406a4f86d4f324229bb6b30b7ec8189c60aae0a49ad773f8ae6b93f> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S4 Objectif: (résultats d'apprentissage)\nfaire et savoir-être) et d'un plan d'actions sur les prochaines années : à l'écrit et à l'oral\n- d'identitier et d'animer son réseau (professionnel et élargi)\n- de créer et de faire vivre ses profils numériques professionnels\n- de mener une enquête métier auprès d'un professionnel et de la restituer Course content: - présentation orale de la restitution de l'enquête et des recherches sur le métier\n- équivalent de 8 TD + présentation orale des enquêtes:\n- identication de ses valeurs\n- indentification de ses compétences\n- consrtruction de son projet professionnel et personnel\n- présentation de son projet Course name: http://example.org/course/UE_XLG4TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/7a7fd647e306992a51b7b343dbce282716c5b99ae6f79f1c78564e39869350df> .
_:N58f93b34fcd74d9b884e64cdf839d875 <http://schema.org/answer> "0" <http://groq.org/7a7fd647e306992a51b7b343dbce282716c5b99ae6f79f1c78564e39869350df> .
_:N58f93b34fcd74d9b884e64cdf839d875 <http://schema.org/explain> "The lecture focuses on methodology and professional insertion, whereas the KU covers SE-Formal Methods, with no apparent connection between the two topics." <http://groq.org/7a7fd647e306992a51b7b343dbce282716c5b99ae6f79f1c78564e39869350df> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU010" <http://groq.org/7a7fd647e306992a51b7b343dbce282716c5b99ae6f79f1c78564e39869350df> .
_:N58f93b34fcd74d9b884e64cdf839d875 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/7a7fd647e306992a51b7b343dbce282716c5b99ae6f79f1c78564e39869350df> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/has_schema_type> _:N58f93b34fcd74d9b884e64cdf839d875 <http://groq.org/7a7fd647e306992a51b7b343dbce282716c5b99ae6f79f1c78564e39869350df> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/7a7fd647e306992a51b7b343dbce282716c5b99ae6f79f1c78564e39869350df> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Systèmes d'exploitation Objectif: (résultats d'apprentissage)\nsynchronisation/communication (Application)\n• Etre capable d'utiliser les mécanismes de synchronisation usuels sous Linux (sémaphores,\nmutexes, signaux) (Application)\n• Comprendre le principe de mémoire virtuelle (Initiation)\n• Savoir gérer les entrées/sorties sous Linux (Initiation) Course content: par le système d'exploitation y sont exposées : comment les processus se partagent-ils l'accès au\nprocesseur ? Comment se synchronisent-ils et quels mécanismes leur permettent d'échanger des\ndonnées ? Comment sont gérés la mémoire et les entrées/sorties ? Course name: http://example.org/course/UE_XLG4IU030</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD PDC-Synchronization and\nConcurrency: Core Concepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder\ntopic 2 3\\. Placeholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\.\nPlaceholder advanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key\nconcepts of PDC-Synchronization and Concurrency. 2\\. Apply principles in\npractical scenarios. 3\\. Analyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/40c62c1df17c90a766897330dd6eee2a753bc0be7e87bd63ddafbb9e4382e9f3> .
_:N1e32c0d8f9964de2b9ba9d4eee4723c4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/40c62c1df17c90a766897330dd6eee2a753bc0be7e87bd63ddafbb9e4382e9f3> .
_:N1e32c0d8f9964de2b9ba9d4eee4723c4 <http://schema.org/answer> "1" <http://groq.org/40c62c1df17c90a766897330dd6eee2a753bc0be7e87bd63ddafbb9e4382e9f3> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/40c62c1df17c90a766897330dd6eee2a753bc0be7e87bd63ddafbb9e4382e9f3> .
_:N1e32c0d8f9964de2b9ba9d4eee4723c4 <http://schema.org/explain> "Covers synchronization mechanisms (semaphores, mutexes) and virtual memory, aligning with PDC-Synchronization/Concurrency core concepts." <http://groq.org/40c62c1df17c90a766897330dd6eee2a753bc0be7e87bd63ddafbb9e4382e9f3> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/has_schema_type> _:N1e32c0d8f9964de2b9ba9d4eee4723c4 <http://groq.org/40c62c1df17c90a766897330dd6eee2a753bc0be7e87bd63ddafbb9e4382e9f3> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU030" <http://groq.org/40c62c1df17c90a766897330dd6eee2a753bc0be7e87bd63ddafbb9e4382e9f3> .
_:Na4e3be4f810745a8a58ef4f488d58dab <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/b2e7fef8f5052e583475d5e6fca62a04459b96a8f5a71cd64133c7bafaa066c1> .
_:Na4e3be4f810745a8a58ef4f488d58dab <http://schema.org/answer> "1" <http://groq.org/b2e7fef8f5052e583475d5e6fca62a04459b96a8f5a71cd64133c7bafaa066c1> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/has_schema_type> _:Na4e3be4f810745a8a58ef4f488d58dab <http://groq.org/b2e7fef8f5052e583475d5e6fca62a04459b96a8f5a71cd64133c7bafaa066c1> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4AU010" <http://groq.org/b2e7fef8f5052e583475d5e6fca62a04459b96a8f5a71cd64133c7bafaa066c1> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/b2e7fef8f5052e583475d5e6fca62a04459b96a8f5a71cd64133c7bafaa066c1> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S4 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4AU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Software Architecture: Core\nConcepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nSE-Software Architecture. 2\\. Apply principles in practical scenarios. 3\\.\nAnalyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/b2e7fef8f5052e583475d5e6fca62a04459b96a8f5a71cd64133c7bafaa066c1> .
_:Na4e3be4f810745a8a58ef4f488d58dab <http://schema.org/explain> "The lecture covers key concepts of SE-Software Architecture, applying principles in practical scenarios, and analyzing its importance in computing, which aligns with the KU's learning outcomes." <http://groq.org/b2e7fef8f5052e583475d5e6fca62a04459b96a8f5a71cd64133c7bafaa066c1> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU010" <http://groq.org/d1c06ab1eafcefe5d0950052c4b399b076c6a9da7ef2130099d8165a54590756> .
_:N580024b4f1634675913343c7f0468feb <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/d1c06ab1eafcefe5d0950052c4b399b076c6a9da7ef2130099d8165a54590756> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 1 Objectif: (résultats d'apprentissage)\n•\nÉvaluer une implémentation de structure de données en temps et en place mémoire (coûts minimal,\nmaximal, amorti)\n• Course content: et mise en pratique dans l’approche de résolution de problèmes « Diviser pour régner ». Course name: http://example.org/course/UE_XLG3IU010</page1>\n        <page2>Pages: 133 HOURS CS Core = 0 KA Core = 2 + 1 (MSF) FPL-Logic: Logic\nProgramming KA Core: 1\\. Universal vs existential quantifiers. (See also: AI-\nLRR, MSF-Discrete) 2\\. First order predicate logic vs higher order logic. (See\nalso: AI-LRR, MSF-Discrete) 3\\. Expressing complex relations using logical\nconnectives and simpler relations. 4\\. Definitions of Horn clause, facts,\ngoals and subgoals. 5\\. Unification and unification algorithm; unification vs\nassertion vs expression evaluation. 6\\. Mixing relations with functions. (See\nalso: MSF-Discrete) 7\\. Cuts, backtracking, and non-determinism. 8\\. Closed-\nworld vs open-world assumptions. Non-core: 9\\. Memory overhead of variable\ncopying in handling iterative programs. 10\\. Programming constructs to store\npartial computation and pruning search trees. 11\\. Mixing functional\nprogramming and logic programming using concepts such as equational logic,\nnarrowing, residuation, and semantic unification. (See also: FPL-Functional)\n12\\. Higher-order, constraint, and inductive logic programming. (See also: AI-\nLRR) 13\\. Integration with other programming paradigms such as object-oriented\nprogramming. 14\\. Advance programming constructs such as difference-lists,\ncreating user defined data structures, set of, etc. Illustrative learning\noutcomes: KA Core: 1\\. Use a logic language to implement a conventional\nalgorithm. 2\\. Use a logic language to implement an algorithm employing\nimplicit search using clauses, relations, and cuts. 3\\. Use a simple\nillustrative example to show correspondence between First Order Predicate\nLogic (FOPL) and logic programs using Horn clauses. 4\\. Use examples to\nillustrate the unification algorithm and its role of parameter-passing in\nquery reduction. 5\\. Use simple logic programs interleaving relations,\nfunctions, and recursive programming such as factorial and Fibonacci numbers\nand simple complex relationships between entities and illustrate execution and\nparameter-passing using unification and backtracking. Non-core: 6\\. Illustrate\ncomputation of simple programs such as Fibonacci and show overhead of\nrecomputation, and then show how to improve execution overhead.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/d1c06ab1eafcefe5d0950052c4b399b076c6a9da7ef2130099d8165a54590756> .
_:N580024b4f1634675913343c7f0468feb <http://schema.org/answer> "1" <http://groq.org/d1c06ab1eafcefe5d0950052c4b399b076c6a9da7ef2130099d8165a54590756> .
_:N580024b4f1634675913343c7f0468feb <http://schema.org/explain> "The lecture covers a significant portion of the KU, including topics such as algorithm implementation, data structures, and logic programming, with a focus on practical application and problem-solving." <http://groq.org/d1c06ab1eafcefe5d0950052c4b399b076c6a9da7ef2130099d8165a54590756> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/has_schema_type> _:N580024b4f1634675913343c7f0468feb <http://groq.org/d1c06ab1eafcefe5d0950052c4b399b076c6a9da7ef2130099d8165a54590756> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/d1c06ab1eafcefe5d0950052c4b399b076c6a9da7ef2130099d8165a54590756> .
_:N1e22747a53fb42428f98cf8ca6bb34c7 <http://schema.org/explain> "The lecture covers a significant portion of the KU, including topics such as sets, relations, functions, recursive definitions, proof techniques, permutations, combinations, counting, modular arithmetic, logic, and graphs." <http://groq.org/8e643ec0d7b4d8b8c4247589b087c19b3194b1ab334cc2d0ae1092aad97b3e5c> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 2 Objectif: (résultats d'apprentissage)\ndonnées (itératifs et récursifs) Course content: Structures de données non-linéaires associatives (table associative, ensemble, classe-union) Course name: http://example.org/course/UE_XLG4IU010</page1>\n        <page2>Pages: 187-188 HOURS CS Core = 29 KA Core = 11 MSF-Discrete: Discrete\nMathematics CS Core: 1\\. Sets, relations, functions, cardinality 2\\. Recursive\nmathematical definitions 3\\. Proof techniques (induction, proof by\ncontradiction) 4\\. Permutations, combinations, counting, pigeonhole principle\n5\\. Modular arithmetic 6\\. Logic: truth tables, connectives (operators),\ninference rules, formulas, normal forms, simple predicate logic 7\\. Graphs:\nbasic definitions 8\\. Order notation Illustrative Learning Outcomes: CS Core:\n1\\. Sets, Relations, and Functions, Cardinality a. Explain with examples the\nbasic terminology of functions, relations, and sets. b. Perform the operations\nassociated with sets, functions, and relations. c. Relate practical examples\nto the appropriate set, function, or relation model, and interpret the\nassociated operations and terminology in context. d. Calculate the size of a\nfinite set, including making use of the sum and product rules and inclusion-\nexclusion principle. e. Explain the difference between finite, countable, and\nuncountable sets. 2\\. Recursive mathematical definitions a. Apply recursive\ndefinitions of sequences or structures (e.g., Fibonacci numbers, linked lists,\nparse trees, fractals). b. Formulate inductive proofs of statements about\nrecursive definitions. c. Solve a variety of basic recurrence relations. d.\nAnalyze a problem to determine underlying recurrence relations. e. Given a\nrecursive/iterative code snippet, describe its underlying recurrence relation,\nhypothesize a closed form for the recurrence relation, and prove the\nhypothesis correct (usually, using induction). 3\\. Proof Techniques a.\nIdentify the proof technique used in a given proof. b. Outline the basic\nstructure of each proof technique (direct proof, proof by contradiction, and\ninduction) described in this unit. c. Apply each of the proof techniques\n(direct proof, proof by contradiction, and induction) correctly in the\nconstruction of a sound argument. d. Determine which type of proof is best for\na given problem. e. Explain the parallels between ideas of mathematical and/or\nstructural induction to recursion and recursively defined structures. f.\nExplain the relationship between weak and strong induction and give examples\nof the appropriate use of each. 4\\. Permutations, combinations, and counting\na. Apply counting arguments, including sum and product rules, inclusion-\nexclusion principle, and arithmetic/geometric progressions. b. Apply the\npigeonhole principle in the context of a formal proof. c. Compute permutations\nand combinations of a set, and interpret the meaning in the context of the\nspecific application. d. Map real-world applications to appropriate counting\nformalisms, such as determining the number of ways to arrange people around a\ntable, subject to constraints on the seating arrangement, or the number of\nways to determine certain hands in cards (e.g., a full house). 5\\. Modular\narithmetic a. Perform computations involving modular arithmetic. b. Explain\nthe notion of the greatest common divisor and apply Euclid's algorithm to\ncompute it. 6\\. Logic a. Convert logical statements from informal language to\npropositional and predicate logic expressions. b. Apply formal methods of\nsymbolic propositional and predicate logic, such as calculating validity of\nformulae, computing normal forms, or negating a logical statement. c. Use the\nrules of inference to construct proofs in propositional and predicate logic.\nd. Describe how symbolic logic can be used to model real-life situations or\napplications, including those arising in computing contexts such as software\nanalysis (e.g., program correctness), database queries, and algorithms. e.\nApply formal logic proofs and/or informal, but rigorous, logical reasoning to\nreal problems, such as predicting the behavior of software or solving problems\nsuch as puzzles. f. Describe the strengths and limitations of propositional\nand predicate logic. g. Explain what it means for a proof in propositional (or\npredicate) logic to be valid. 7\\. Graphs a. Illustrate by example the basic\nterminology of graph theory, and some of the properties and special cases of\ntypes of graphs, including trees. b. Demonstrate different traversal methods\nfor trees and graphs, including pre-, post-, and in-order traversal of trees,\nalong with breadth-first and depth-first search for graphs. c. Model a variety\nof real-world problems in computer science using appropriate forms of graphs\nand trees, such as representing a network topology, the organization of a\nhierarchical file system, or a social network. d. Show how concepts from\ngraphs and trees appear in data structures, algorithms, proof techniques\n(structural induction), and counting. KA Core: The recommended topics are the\nsame between CS core and KA-core, but with far more hours, the KA-core can\ncover these topics in depth and might include more computing-related\napplications.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/8e643ec0d7b4d8b8c4247589b087c19b3194b1ab334cc2d0ae1092aad97b3e5c> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU010" <http://groq.org/8e643ec0d7b4d8b8c4247589b087c19b3194b1ab334cc2d0ae1092aad97b3e5c> .
_:N1e22747a53fb42428f98cf8ca6bb34c7 <http://schema.org/answer> "1" <http://groq.org/8e643ec0d7b4d8b8c4247589b087c19b3194b1ab334cc2d0ae1092aad97b3e5c> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/has_schema_type> _:N1e22747a53fb42428f98cf8ca6bb34c7 <http://groq.org/8e643ec0d7b4d8b8c4247589b087c19b3194b1ab334cc2d0ae1092aad97b3e5c> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/8e643ec0d7b4d8b8c4247589b087c19b3194b1ab334cc2d0ae1092aad97b3e5c> .
_:N1e22747a53fb42428f98cf8ca6bb34c7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/8e643ec0d7b4d8b8c4247589b087c19b3194b1ab334cc2d0ae1092aad97b3e5c> .
_:N4c03d5073ba442b29980d5d0566976d9 <http://schema.org/answer> "0" <http://groq.org/77d216efbf9d0ccb2a496e0bcd909cf0250492c767f695cf27f2100940baaae5> .
_:N4c03d5073ba442b29980d5d0566976d9 <http://schema.org/explain> "The lecture focuses on formal logic and proof systems, while the KU covers broader topics including probability, Bayesian reasoning, and machine learning, which are not addressed in the lecture." <http://groq.org/77d216efbf9d0ccb2a496e0bcd909cf0250492c767f695cf27f2100940baaae5> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/77d216efbf9d0ccb2a496e0bcd909cf0250492c767f695cf27f2100940baaae5> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/has_schema_type> _:N4c03d5073ba442b29980d5d0566976d9 <http://groq.org/77d216efbf9d0ccb2a496e0bcd909cf0250492c767f695cf27f2100940baaae5> .
_:N4c03d5073ba442b29980d5d0566976d9 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/77d216efbf9d0ccb2a496e0bcd909cf0250492c767f695cf27f2100940baaae5> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU020" <http://groq.org/77d216efbf9d0ccb2a496e0bcd909cf0250492c767f695cf27f2100940baaae5> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Logique pour l'informatique Objectif: (résultats d'apprentissage)\nconsistance et complétude d'un système de preuves.\n4. Représenter une preuve de la déduction naturelle sous forme d'arbre d'inférence.\n5. Utiliser les algorithmes d'unification et de résolution pour le raisonnement automatique sur les\nformules logiques.\n1) Raisonnement algébrique booléen\n• Dualités des connecteurs logiques\n• Formes normales conjonctive et disjonctive\n2) Systèmes de preuves\n• Système d'inférence associé à une définition inductive\n• Preuve d'appartenance à un ensemble inductif par un arbre de preuves\n• Règles d'inférences de la déduction naturelle pour la logique propositionnelle\n• Distinguer logique classique et logique intuitionniste\n3) Donner du sens aux langages logique Course content: • Interprétation, modèle, satisfiabilité, validité\n• Correspondance avec le système de preuve: correction et complétude\n4) Calcul des prédicats\n• Manipulation des quantificateurs\n• Skolémisation, forme clausale\n• Théorie logique\n5) Raisonner automatiquement sur les formules logique\n• Algorithme d'unification\n• Algorithme de résolution Course name: http://example.org/course/UE_XLG3IU020</page1>\n        <page2>Pages:70-70 HOURS CS Core = 2 KA Core = 2 AI-KRR: Fundamental Knowledge\nRepresentation and Reasoning CS Core: 1\\. Types of representations a.\nSymbolic, logical i. Creating a representation from a natural language problem\nstatement b. Learned subsymbolic representations c. Graphical models (e.g.,\nnaive Bayes, Bayesian network) 2\\. Review of probabilistic reasoning, Bayes\ntheorem (See also: MSF-Probability) 3\\. Bayesian reasoning a. Bayesian\ninference KA Core: 4\\. Random variables and probability distributions a.\nAxioms of probability b. Probabilistic inference c. Bayes' Rule (derivation)\nd. Bayesian inference (more complex examples) 5\\. Independence 6\\. Conditional\nIndependence 7\\. Markov chains and Markov models 8\\. Utility and decision\nmaking Illustrative Learning Outcomes: 1\\. Given a natural language problem\nstatement, encode it as a symbolic or logical representation. 2\\. Explain how\nwe can make decisions under uncertainty, using concepts such as Bayes theorem\nand utility. 3\\. Compute a probabilistic inference in a real-world problem\nusing Bayes' theorem to determine the probability of a hypothesis given\nevidence. 4\\. Apply Bayes' rule to determine the probability of a hypothesis\ngiven evidence. 5\\. Compute the probability of outcomes and test whether\noutcomes are independent. 71 AI-ML: Machine Learning CS Core: 1\\. Definition\nand examples of a broad variety of machine learning tasks a. Supervised\nlearning i. Classification ii. Regression b. Reinforcement learning c.\nUnsupervised learning i. Clustering 2\\. Fundamental ideas: a. No free lunch\ntheorem: no one learner can solve all problems; representational design\ndecisions have consequences. b. Sources of error and undecidability</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/77d216efbf9d0ccb2a496e0bcd909cf0250492c767f695cf27f2100940baaae5> .
_:N57ae866609e24c299f0b42fed56ab901 <http://schema.org/explain> "The lecture covers some discrete probability topics but lacks coverage of continuous variables, expectation, variance, and applications." <http://groq.org/20b27906117fcfa26cbc0ea3248d38a30103260c06349fa9d74b726d6f3abe06> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Probabilites discretes Objectif: (résultats d'apprentissage) • Course content: - Couple de variables aléatoires discrètes (conditionnement, indépendance, corrélation).\n- Lois uniforme, Bernoulli, binomiale et hypergéométrique.\n• Course name: http://example.org/course/UE_XLG3MU040</page1>\n        <page2>Pages: 188-189 HOURS CS Core = 11 KA Core = 29 MSF-Probability: Probability CS\nCore: 1\\. Basic notions: sample spaces, events, probability, conditional\nprobability, Bayes' rule 2\\. Discrete random variables and distributions 3\\.\nContinuous random variables and distributions 4\\. Expectation, variance, law\nof large numbers, central limit theorem 5\\. Conditional distributions and\nexpectation 6\\. Applications to computing, the difference between probability\nand statistics (as subjects) KA Core: The recommended topics are the same\nbetween CS core and KA-core, but with far more hours, the KA-core can cover\nthese topics in depth and might include more computing-related applications.\nIllustrative Learning Outcomes: CS Core: 1\\. Basic notions: sample spaces,\nevents, probability, conditional probability, Bayes' rule a. Translate a prose\ndescription of a probabilistic process into a formal setting of sample spaces,\noutcome probabilities, and events. b. Calculate the probability of simple\nevents. c. Determine whether two events are independent. d. Compute\nconditional probabilities, including through applying (and explaining) Bayes'\nRule. 2\\. Discrete random variables and distributions a. Define the concept of\na random variable and indicator random variable. b. Determine whether two\nrandom variables are independent. c. Identify common discrete distributions\n(e.g., uniform, Bernoulli, binomial, geometric). 3\\. Continuous random\nvariables and distributions a. Identify common continuous distributions (e.g.,\nuniform, normal, exponential). b. Calculate probabilities using cumulative\ndensity functions. 4\\. Expectation, variance, law of large numbers, central\nlimit theorem a. Define the concept of expectation and variance of a random\nvariable. b. Compute the expected value and variance of simple or common\ndiscrete/continuous random variables. c. Explain the relevance of the law of\nlarge numbers and central limit theorem to probability calculations. 5\\.\nConditional distributions and expectation a. Explain the distinction between\njoint, marginal, and conditional distributions. b. Compute marginal and\nconditional distributions from a full distribution, for both discrete and\ncontinuous random variables. c. Compute conditional expectations for both\ndiscrete and continuous random variables. 6\\. Applications to computing a.\nDescribe how probability can be used to model real-life situations or\napplications, such as predictive text, hash tables, and quantum computation.\nb. Apply probabilistic processes to solving computational problems, such as\nthrough randomized algorithms or in security contexts.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/20b27906117fcfa26cbc0ea3248d38a30103260c06349fa9d74b726d6f3abe06> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/20b27906117fcfa26cbc0ea3248d38a30103260c06349fa9d74b726d6f3abe06> .
<http://example.org/course/UE_XLG3MU040> <http://example.org/has_schema_type> _:N57ae866609e24c299f0b42fed56ab901 <http://groq.org/20b27906117fcfa26cbc0ea3248d38a30103260c06349fa9d74b726d6f3abe06> .
_:N57ae866609e24c299f0b42fed56ab901 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/20b27906117fcfa26cbc0ea3248d38a30103260c06349fa9d74b726d6f3abe06> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3MU040" <http://groq.org/20b27906117fcfa26cbc0ea3248d38a30103260c06349fa9d74b726d6f3abe06> .
_:N57ae866609e24c299f0b42fed56ab901 <http://schema.org/answer> "0" <http://groq.org/20b27906117fcfa26cbc0ea3248d38a30103260c06349fa9d74b726d6f3abe06> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Langages et automates Objectif: (résultats d'apprentissage)\n5. Course content: • Langages algébriques\n- Grammaire algébrique\n- Arbre de dérivation\n- Automates à pile\n• Hiérarchie de Chomsky\n- Classification des grammaires;\n- Algorithmes de reconnaissance pour les grammaires de type 1 et 2\n• Analyse lexicale et syntaxique\n- TP de flex et bison Course name: http://example.org/course/UE_XLG4IU020</page1>\n        <page2>Pages:79-80 HOURS CS Core = 0 KA Core = 0 AI-NLP: Natural Language Processing\nNon-core: 1\\. Deterministic and stochastic grammars 2\\. Parsing algorithms a.\nCFGs and chart parsers (e.g., CYK) b. Probabilistic CFGs and weighted CYK 3\\.\nRepresenting meaning/Semantics a. Logic-based knowledge representations b.\nSemantic roles c. Temporal representations d. Beliefs, desires, and intentions\n4\\. Corpus-based methods 5\\. N-grams and HMMs 6\\. Smoothing and backoff 7\\.\nExamples of use: POS tagging and morphology 8\\. Information retrieval (See\nalso: DM-Unstructured) a. Vector space model i. TF & IDF b. Precision and\nrecall 9\\. Information extraction 10\\. Language translation 11\\. Text\nclassification, categorization a. Bag of words model 12\\. Deep learning for\nNLP (See also: AI-ML) a. RNNs b. Transformers c. Multi-modal embeddings (e.g.,\nimages + text) d. Generative language models Illustrative Learning Outcomes:\n1\\. Define and contrast deterministic and stochastic grammars, providing\nexamples to show the adequacy of each. 2\\. Simulate, apply, or implement\nclassic and stochastic algorithms for parsing natural language. 3\\. Identify\nthe challenges of representing meaning. 4\\. List the advantages of using\nstandard corpora. Identify examples of current corpora for a variety of NLP\ntasks. 5\\. Identify techniques for information retrieval, language\ntranslation, and text classification. 6\\. Implement a TF/IDF transform, use it\nto extract features from a corpus, and train an off-the-shelf machine learning\nalgorithm using those features to do text classification.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/50718b2db4ec7c5383515d74c22036c3e29704ec01b794cb20d426e149ae76a7> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU020" <http://groq.org/50718b2db4ec7c5383515d74c22036c3e29704ec01b794cb20d426e149ae76a7> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/has_schema_type> _:N75620d0648a744b0a175bb55bedb3f73 <http://groq.org/50718b2db4ec7c5383515d74c22036c3e29704ec01b794cb20d426e149ae76a7> .
_:N75620d0648a744b0a175bb55bedb3f73 <http://schema.org/answer> "1" <http://groq.org/50718b2db4ec7c5383515d74c22036c3e29704ec01b794cb20d426e149ae76a7> .
_:N75620d0648a744b0a175bb55bedb3f73 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/50718b2db4ec7c5383515d74c22036c3e29704ec01b794cb20d426e149ae76a7> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/50718b2db4ec7c5383515d74c22036c3e29704ec01b794cb20d426e149ae76a7> .
_:N75620d0648a744b0a175bb55bedb3f73 <http://schema.org/explain> "The lecture covers topics such as grammatical formalisms, parsing algorithms, and language processing, which are all relevant to the Knowledge Unit." <http://groq.org/50718b2db4ec7c5383515d74c22036c3e29704ec01b794cb20d426e149ae76a7> .
_:Neec3c80c78f24bc7a99a98ff5a9ac406 <http://example.org/has_score> "0.65218985"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/b70f6cb6a7d07fc41c342def32fc0dbcb7587eece5c639612ec55b8058c5906c> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/is_aligned_with> _:Neec3c80c78f24bc7a99a98ff5a9ac406 <http://faiss.org/b70f6cb6a7d07fc41c342def32fc0dbcb7587eece5c639612ec55b8058c5906c> .
_:Neec3c80c78f24bc7a99a98ff5a9ac406 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://faiss.org/b70f6cb6a7d07fc41c342def32fc0dbcb7587eece5c639612ec55b8058c5906c> .
_:N2d2e4b68b0414fb5986369bd91f88103 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/b70f6cb6a7d07fc41c342def32fc0dbcb7587eece5c639612ec55b8058c5906c> .
_:Neec3c80c78f24bc7a99a98ff5a9ac406 <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://faiss.org/b70f6cb6a7d07fc41c342def32fc0dbcb7587eece5c639612ec55b8058c5906c> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/is_aligned_with> _:N42b28d1cd76047feac18854b76763b41 <http://faiss.org/b70f6cb6a7d07fc41c342def32fc0dbcb7587eece5c639612ec55b8058c5906c> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/is_aligned_with> _:N2d2e4b68b0414fb5986369bd91f88103 <http://faiss.org/b70f6cb6a7d07fc41c342def32fc0dbcb7587eece5c639612ec55b8058c5906c> .
_:N42b28d1cd76047feac18854b76763b41 <http://example.org/has_score> "0.6374098"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/b70f6cb6a7d07fc41c342def32fc0dbcb7587eece5c639612ec55b8058c5906c> .
_:N42b28d1cd76047feac18854b76763b41 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nGIT-3D Modeling: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of GIT-3D Modeling.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/b70f6cb6a7d07fc41c342def32fc0dbcb7587eece5c639612ec55b8058c5906c> .
_:N2d2e4b68b0414fb5986369bd91f88103 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://faiss.org/b70f6cb6a7d07fc41c342def32fc0dbcb7587eece5c639612ec55b8058c5906c> .
_:N42b28d1cd76047feac18854b76763b41 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Graphics_and_Interactive_Techniques_GIT/GIT-3D_Modeling.txt> <http://faiss.org/b70f6cb6a7d07fc41c342def32fc0dbcb7587eece5c639612ec55b8058c5906c> .
_:N2d2e4b68b0414fb5986369bd91f88103 <http://example.org/has_score> "0.65845335"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/b70f6cb6a7d07fc41c342def32fc0dbcb7587eece5c639612ec55b8058c5906c> .
<http://example.org/faiss> <http://example.org/input> "Label: Unité Enseignement de Découverte Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU020" <http://faiss.org/b70f6cb6a7d07fc41c342def32fc0dbcb7587eece5c639612ec55b8058c5906c> .
_:Nf8f33e9dc4394f3bbffcd6f8ff868891 <http://schema.org/answer> "0" <http://groq.org/1f22f73f2390601086161b062e981e8f293780a032b2ae799db4cfe702972a89> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU030</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/1f22f73f2390601086161b062e981e8f293780a032b2ae799db4cfe702972a89> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU030" <http://groq.org/1f22f73f2390601086161b062e981e8f293780a032b2ae799db4cfe702972a89> .
_:Nf8f33e9dc4394f3bbffcd6f8ff868891 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/1f22f73f2390601086161b062e981e8f293780a032b2ae799db4cfe702972a89> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/has_schema_type> _:Nf8f33e9dc4394f3bbffcd6f8ff868891 <http://groq.org/1f22f73f2390601086161b062e981e8f293780a032b2ae799db4cfe702972a89> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/1f22f73f2390601086161b062e981e8f293780a032b2ae799db4cfe702972a89> .
_:Nf8f33e9dc4394f3bbffcd6f8ff868891 <http://schema.org/explain> "No overlap in topics; lecture focuses on teaching methods, KU on formal methods." <http://groq.org/1f22f73f2390601086161b062e981e8f293780a032b2ae799db4cfe702972a89> .
<http://example.org/faiss> <http://example.org/input> "Label: Enjeux de la transition écologique Objectif: (résultats d'apprentissage) Course content: Programme des 9 séances en ligne (d’environ 1h30 de travail chacune) : Course name: http://example.org/course/UE_XLG3TU020" <http://faiss.org/f06dca1f9a78316cac209978efe47287afc2ce45f495c1b4d5fc1c27a7dbb1b1> .
_:N194b4fcc47e54010be8612dea12b8376 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://faiss.org/f06dca1f9a78316cac209978efe47287afc2ce45f495c1b4d5fc1c27a7dbb1b1> .
_:Nf4f537714e294580b76d3dcd2e8e0ff5 <http://example.org/has_score> "0.63058054"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/f06dca1f9a78316cac209978efe47287afc2ce45f495c1b4d5fc1c27a7dbb1b1> .
_:Nf4f537714e294580b76d3dcd2e8e0ff5 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Design_Design_Principles_of_Programming_Languages.txt> <http://faiss.org/f06dca1f9a78316cac209978efe47287afc2ce45f495c1b4d5fc1c27a7dbb1b1> .
_:N194b4fcc47e54010be8612dea12b8376 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/f06dca1f9a78316cac209978efe47287afc2ce45f495c1b4d5fc1c27a7dbb1b1> .
_:Na36a41540b5242ac8dfc04ebd48c6cb7 <http://example.org/has_score> "0.6266768"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/f06dca1f9a78316cac209978efe47287afc2ce45f495c1b4d5fc1c27a7dbb1b1> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/is_aligned_with> _:Na36a41540b5242ac8dfc04ebd48c6cb7 <http://faiss.org/f06dca1f9a78316cac209978efe47287afc2ce45f495c1b4d5fc1c27a7dbb1b1> .
_:Na36a41540b5242ac8dfc04ebd48c6cb7 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Maintenance_and_Evolution.txt> <http://faiss.org/f06dca1f9a78316cac209978efe47287afc2ce45f495c1b4d5fc1c27a7dbb1b1> .
_:Nf4f537714e294580b76d3dcd2e8e0ff5 <http://example.org/has_chunk> ". Formal description of a programming language\n6. Green computing principles (See also: SEP-Sustainability)\nIllustrative Learning Outcomes:\nNon-core:\n1. Understand what constitutes good language design and apply that knowledge to evaluate a real\nprogramming language." <http://faiss.org/f06dca1f9a78316cac209978efe47287afc2ce45f495c1b4d5fc1c27a7dbb1b1> .
_:Na36a41540b5242ac8dfc04ebd48c6cb7 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Maintenance and Evolution: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Maintenance and Evolution.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/f06dca1f9a78316cac209978efe47287afc2ce45f495c1b4d5fc1c27a7dbb1b1> .
_:N194b4fcc47e54010be8612dea12b8376 <http://example.org/has_score> "0.62797207"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/f06dca1f9a78316cac209978efe47287afc2ce45f495c1b4d5fc1c27a7dbb1b1> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/is_aligned_with> _:N194b4fcc47e54010be8612dea12b8376 <http://faiss.org/f06dca1f9a78316cac209978efe47287afc2ce45f495c1b4d5fc1c27a7dbb1b1> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/is_aligned_with> _:Nf4f537714e294580b76d3dcd2e8e0ff5 <http://faiss.org/f06dca1f9a78316cac209978efe47287afc2ce45f495c1b4d5fc1c27a7dbb1b1> .
_:N99038b21ca994bd5b07d31b2db438e70 <http://schema.org/explain> "The lecture covers mathematical topics, while the KU focuses on functional programming in Computer Science, with no overlapping content." <http://groq.org/246cb9f9cea6edd9ef1de9e308dffb68ff21fd514ab3e2e0030852999d38c724> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/246cb9f9cea6edd9ef1de9e308dffb68ff21fd514ab3e2e0030852999d38c724> .
_:N99038b21ca994bd5b07d31b2db438e70 <http://schema.org/answer> "0" <http://groq.org/246cb9f9cea6edd9ef1de9e308dffb68ff21fd514ab3e2e0030852999d38c724> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Optimisation 1 et Calcul integral Objectif: (résultats d'apprentissage)\n• Course content: • Course name: http://example.org/course/UE_XLG4MU050</page1>\n        <page2>Pages: 131-132-133 HOURS CS Core = 4 KA Core = 3 FPL-Functional: Functional\nProgramming CS Core: 1\\. Lambda expressions and evaluation: (See also: AL-\nModels, FPL-Formalism) a. Variable binding and scope rules. (See also: SDF-\nFundamentals) b. Parameter-passing. (See also: SDF-Fundamentals) c. Nested\nlambda expressions and reduction order. 2\\. Effect-free programming: a.\nFunction calls have no side effects, facilitating compositional reasoning. b.\nImmutable variables and data copying vs reduction. c. Use of recursion vs\nloops vs pipelining (map/reduce). 3\\. Processing structured data (e.g., trees)\nvia functions with cases for each data variant: a. Functions defined over\ncompound data in terms of functions applied to the constituent pieces. b.\nPersistent data structures. 4\\. Using higher-order functions (taking,\nreturning, and storing functions). KA Core: 5\\. Metaprogramming and\nreflection. 6\\. Function closures (functions using variables in the enclosing\nlexical environment). a. Basic meaning and definition - creating closures at\nrun-time by capturing the environment. b. Canonical idioms: call-backs,\narguments to iterators, reusable code via function arguments. c. Using a\nclosure to encapsulate data in its environment. d. Delayed versus eager\nevaluation. Non-core: 7\\. Graph reduction machine and call-by-need. 8\\.\nImplementing delayed evaluation. 9\\. Integration with logic programming\nparadigm using concepts such as equational logic, narrowing, residuation and\nsemantic unification. (See also: FPL-Logic) 10\\. Integration with other\nprogramming paradigms such as imperative and object-oriented. Illustrative\nlearning outcomes: CS Core: 1\\. Develop basic algorithms that avoid assigning\nto mutable states or considering reference equality. 2\\. Develop useful\nfunctions that take and return other functions. 3\\. Compare and contrast how\ncomputational solutions to a problem differ in procedural, functional, and\nobject-oriented approaches. 4\\. Compare and contrast mechanisms to define and\nprotect data elements within procedural, functional, and object-oriented\napproaches. KA Core: 5\\. Explain a simple example of lambda expression being\nimplemented using a virtual machine, such as a SECD machine, showing storage\nand reclaim of the environment. 6\\. Correctly interpret variables and lexical\nscope in a program using function closures. 7\\. Use functional encapsulation\nmechanisms such as closures and modular interfaces. 8\\. Compare and contrast\nstateful vs stateless execution. 9\\. Define and use iterators and other\noperations on aggregates, including operations that take functions as\narguments, in multiple programming languages, selecting the most natural\nidioms for each language. (See also: FPL-OOP) Non-core: 10\\. Illustrate graph\nreduction using a l-expression using a shared subexpression. 11\\. Illustrate\nthe execution of a simple nested l-expression using an abstract machine, such\nas an ABC machine. 12\\. Illustrate narrowing, residuation, and semantic\nunification using simple illustrative examples. 13\\. Illustrate the\nconcurrency constructs using simple programming examples of known concepts\nsuch as a buffer being read and written concurrently or sequentially. (See\nalso: FPL-OOP)</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/246cb9f9cea6edd9ef1de9e308dffb68ff21fd514ab3e2e0030852999d38c724> .
_:N99038b21ca994bd5b07d31b2db438e70 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/246cb9f9cea6edd9ef1de9e308dffb68ff21fd514ab3e2e0030852999d38c724> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/has_schema_type> _:N99038b21ca994bd5b07d31b2db438e70 <http://groq.org/246cb9f9cea6edd9ef1de9e308dffb68ff21fd514ab3e2e0030852999d38c724> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4MU050" <http://groq.org/246cb9f9cea6edd9ef1de9e308dffb68ff21fd514ab3e2e0030852999d38c724> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/fccb4a50dbbca381571d22546f83a4476949896ac176d705810d8b35f7e22b7a> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Enjeux de la transition écologique Objectif: (résultats d'apprentissage) Course content: Programme des 9 séances en ligne (d’environ 1h30 de travail chacune) : Course name: http://example.org/course/UE_XLG3TU020</page1>\n        <page2>Pages: 146-147 HOURS CS Core = 0 KA Core = 0 FPL-Design: Design Principles of\nProgramming Languages Non-core: 1\\. Language design principles a. Simplicity\nb. Security (See also: SEC-Coding) c. Fast translation d. Efficient object\ncode e. Orthogonality f. Readability g. Completeness h. Implementation\nstrategies 2\\. Designing a language to fit a specific domain or problem 3\\.\nInteroperability between programming languages 4\\. Language portability 5\\.\nFormal description of a programming language 6\\. Green computing principles\n(See also: SEP-Sustainability) Illustrative Learning Outcomes: Non-core: 1\\.\nUnderstand what constitutes good language design and apply that knowledge to\nevaluate a real programming language.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/fccb4a50dbbca381571d22546f83a4476949896ac176d705810d8b35f7e22b7a> .
_:Na3bcd2dc7a06451c93ebb2d38ed2ebdc <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/fccb4a50dbbca381571d22546f83a4476949896ac176d705810d8b35f7e22b7a> .
_:Na3bcd2dc7a06451c93ebb2d38ed2ebdc <http://schema.org/answer> "0" <http://groq.org/fccb4a50dbbca381571d22546f83a4476949896ac176d705810d8b35f7e22b7a> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/has_schema_type> _:Na3bcd2dc7a06451c93ebb2d38ed2ebdc <http://groq.org/fccb4a50dbbca381571d22546f83a4476949896ac176d705810d8b35f7e22b7a> .
_:Na3bcd2dc7a06451c93ebb2d38ed2ebdc <http://schema.org/explain> "The lecture focuses on ecological transition, not programming language design." <http://groq.org/fccb4a50dbbca381571d22546f83a4476949896ac176d705810d8b35f7e22b7a> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU020" <http://groq.org/fccb4a50dbbca381571d22546f83a4476949896ac176d705810d8b35f7e22b7a> .
_:N7c687185b566446aa53d32f9118050ba <http://schema.org/explain> "The lecture covers key concepts of SE-Formal Methods, applying principles in practical scenarios, and analyzing the importance of this topic in computing, which aligns with the KU's learning outcomes." <http://groq.org/ebbfcd03b877a01e764161f1762a2d2d2c8599ff5e7e1a2fa9836e606db8bda0> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3AU010" <http://groq.org/ebbfcd03b877a01e764161f1762a2d2d2c8599ff5e7e1a2fa9836e606db8bda0> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/has_schema_type> _:N7c687185b566446aa53d32f9118050ba <http://groq.org/ebbfcd03b877a01e764161f1762a2d2d2c8599ff5e7e1a2fa9836e606db8bda0> .
_:N7c687185b566446aa53d32f9118050ba <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/ebbfcd03b877a01e764161f1762a2d2d2c8599ff5e7e1a2fa9836e606db8bda0> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/ebbfcd03b877a01e764161f1762a2d2d2c8599ff5e7e1a2fa9836e606db8bda0> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3AU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/ebbfcd03b877a01e764161f1762a2d2d2c8599ff5e7e1a2fa9836e606db8bda0> .
_:N7c687185b566446aa53d32f9118050ba <http://schema.org/answer> "1" <http://groq.org/ebbfcd03b877a01e764161f1762a2d2d2c8599ff5e7e1a2fa9836e606db8bda0> .
_:Nfb2a7880f2ea47d4871fa4ed994de862 <http://schema.org/answer> "0" <http://groq.org/0f4e06040581cef9b75382054a0a25e5ee48071db089535e3fea794df2333158> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/0f4e06040581cef9b75382054a0a25e5ee48071db089535e3fea794df2333158> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU010" <http://groq.org/0f4e06040581cef9b75382054a0a25e5ee48071db089535e3fea794df2333158> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 2 Objectif: (résultats d'apprentissage)\ndonnées (itératifs et récursifs) Course content: Structures de données non-linéaires associatives (table associative, ensemble, classe-union) Course name: http://example.org/course/UE_XLG4IU010</page1>\n        <page2>Pages: 133 HOURS CS Core = 0 KA Core = 2 + 1 (MSF) FPL-Logic: Logic\nProgramming KA Core: 1\\. Universal vs existential quantifiers. (See also: AI-\nLRR, MSF-Discrete) 2\\. First order predicate logic vs higher order logic. (See\nalso: AI-LRR, MSF-Discrete) 3\\. Expressing complex relations using logical\nconnectives and simpler relations. 4\\. Definitions of Horn clause, facts,\ngoals and subgoals. 5\\. Unification and unification algorithm; unification vs\nassertion vs expression evaluation. 6\\. Mixing relations with functions. (See\nalso: MSF-Discrete) 7\\. Cuts, backtracking, and non-determinism. 8\\. Closed-\nworld vs open-world assumptions. Non-core: 9\\. Memory overhead of variable\ncopying in handling iterative programs. 10\\. Programming constructs to store\npartial computation and pruning search trees. 11\\. Mixing functional\nprogramming and logic programming using concepts such as equational logic,\nnarrowing, residuation, and semantic unification. (See also: FPL-Functional)\n12\\. Higher-order, constraint, and inductive logic programming. (See also: AI-\nLRR) 13\\. Integration with other programming paradigms such as object-oriented\nprogramming. 14\\. Advance programming constructs such as difference-lists,\ncreating user defined data structures, set of, etc. Illustrative learning\noutcomes: KA Core: 1\\. Use a logic language to implement a conventional\nalgorithm. 2\\. Use a logic language to implement an algorithm employing\nimplicit search using clauses, relations, and cuts. 3\\. Use a simple\nillustrative example to show correspondence between First Order Predicate\nLogic (FOPL) and logic programs using Horn clauses. 4\\. Use examples to\nillustrate the unification algorithm and its role of parameter-passing in\nquery reduction. 5\\. Use simple logic programs interleaving relations,\nfunctions, and recursive programming such as factorial and Fibonacci numbers\nand simple complex relationships between entities and illustrate execution and\nparameter-passing using unification and backtracking. Non-core: 6\\. Illustrate\ncomputation of simple programs such as Fibonacci and show overhead of\nrecomputation, and then show how to improve execution overhead.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/0f4e06040581cef9b75382054a0a25e5ee48071db089535e3fea794df2333158> .
_:Nfb2a7880f2ea47d4871fa4ed994de862 <http://schema.org/explain> "Lecture focuses on associative data structures, while KU covers logic programming concepts (unification, Horn clauses, Prolog). Topics diverge significantly." <http://groq.org/0f4e06040581cef9b75382054a0a25e5ee48071db089535e3fea794df2333158> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/has_schema_type> _:Nfb2a7880f2ea47d4871fa4ed994de862 <http://groq.org/0f4e06040581cef9b75382054a0a25e5ee48071db089535e3fea794df2333158> .
_:Nfb2a7880f2ea47d4871fa4ed994de862 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/0f4e06040581cef9b75382054a0a25e5ee48071db089535e3fea794df2333158> .
_:N4bac03da183f49e094e88f08f7370141 <http://schema.org/answer> "0" <http://groq.org/1c503177565febc9530f9033511b640c2c405062b887e46ede8021987e4c4b34> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU030</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/1c503177565febc9530f9033511b640c2c405062b887e46ede8021987e4c4b34> .
_:N4bac03da183f49e094e88f08f7370141 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/1c503177565febc9530f9033511b640c2c405062b887e46ede8021987e4c4b34> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU030" <http://groq.org/1c503177565febc9530f9033511b640c2c405062b887e46ede8021987e4c4b34> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/1c503177565febc9530f9033511b640c2c405062b887e46ede8021987e4c4b34> .
_:N4bac03da183f49e094e88f08f7370141 <http://schema.org/explain> "The lecture focuses on teaching methods, not the technical content of SE-Formal Methods." <http://groq.org/1c503177565febc9530f9033511b640c2c405062b887e46ede8021987e4c4b34> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/has_schema_type> _:N4bac03da183f49e094e88f08f7370141 <http://groq.org/1c503177565febc9530f9033511b640c2c405062b887e46ede8021987e4c4b34> .
_:N9cdf465eb04e4843aa7e3c4427c24eb5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/3a6bdc97e63a8fc7b82f427a6d64c8ca55463ff5c0baa8b24deb778ae09040e8> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU030" <http://groq.org/3a6bdc97e63a8fc7b82f427a6d64c8ca55463ff5c0baa8b24deb778ae09040e8> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/has_schema_type> _:N9cdf465eb04e4843aa7e3c4427c24eb5 <http://groq.org/3a6bdc97e63a8fc7b82f427a6d64c8ca55463ff5c0baa8b24deb778ae09040e8> .
_:N9cdf465eb04e4843aa7e3c4427c24eb5 <http://schema.org/explain> "No overlap in content; lecture focuses on teaching methods while KU covers graphics fundamentals." <http://groq.org/3a6bdc97e63a8fc7b82f427a6d64c8ca55463ff5c0baa8b24deb778ae09040e8> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/3a6bdc97e63a8fc7b82f427a6d64c8ca55463ff5c0baa8b24deb778ae09040e8> .
_:N9cdf465eb04e4843aa7e3c4427c24eb5 <http://schema.org/answer> "0" <http://groq.org/3a6bdc97e63a8fc7b82f427a6d64c8ca55463ff5c0baa8b24deb778ae09040e8> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU030</page1>\n        <page2>Pages: 150-151 HOURS CS Core = 3 KA Core = 2 GIT-Fundamentals: Fundamental\nConcepts CS Core: 1\\. Overview of graphics and visualization. 2\\. Basic\ngraphics pipeline architecture. 3\\. 2D and 3D transformations. 4\\.\nRasterization and rendering techniques. 5\\. Fundamental shading models. KA\nCore: 6\\. Advanced rendering techniques. 7\\. Applications of visualization in\ndifferent fields. 8\\. Interaction methods for graphical environments.\nIllustrative Learning Outcomes: 1\\. Explain the graphics rendering pipeline.\n2\\. Differentiate between rasterization and ray tracing. 3\\. Apply\ntransformations to 2D and 3D models.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/3a6bdc97e63a8fc7b82f427a6d64c8ca55463ff5c0baa8b24deb778ae09040e8> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU020" <http://groq.org/ab83f1cfc92d4afd9c2356ead4c5fb8e3560ce9db589d88a60228c4ee15e6334> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Unité Enseignement de Découverte Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU020</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/ab83f1cfc92d4afd9c2356ead4c5fb8e3560ce9db589d88a60228c4ee15e6334> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/ab83f1cfc92d4afd9c2356ead4c5fb8e3560ce9db589d88a60228c4ee15e6334> .
_:N3cbb419765644e03a3cdba69615e1889 <http://schema.org/answer> "0" <http://groq.org/ab83f1cfc92d4afd9c2356ead4c5fb8e3560ce9db589d88a60228c4ee15e6334> .
_:N3cbb419765644e03a3cdba69615e1889 <http://schema.org/explain> "The lecture does not cover the technical aspects of the knowledge unit." <http://groq.org/ab83f1cfc92d4afd9c2356ead4c5fb8e3560ce9db589d88a60228c4ee15e6334> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/has_schema_type> _:N3cbb419765644e03a3cdba69615e1889 <http://groq.org/ab83f1cfc92d4afd9c2356ead4c5fb8e3560ce9db589d88a60228c4ee15e6334> .
_:N3cbb419765644e03a3cdba69615e1889 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/ab83f1cfc92d4afd9c2356ead4c5fb8e3560ce9db589d88a60228c4ee15e6334> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Analyse et Algebre lineaire 2 Objectif: (résultats d'apprentissage) • Course content: • Course name: http://example.org/course/UE_XLG3MU030</page1>\n        <page2>Pages: 150-151 HOURS CS Core = 3 KA Core = 2 GIT-Fundamentals: Fundamental\nConcepts CS Core: 1\\. Overview of graphics and visualization. 2\\. Basic\ngraphics pipeline architecture. 3\\. 2D and 3D transformations. 4\\.\nRasterization and rendering techniques. 5\\. Fundamental shading models. KA\nCore: 6\\. Advanced rendering techniques. 7\\. Applications of visualization in\ndifferent fields. 8\\. Interaction methods for graphical environments.\nIllustrative Learning Outcomes: 1\\. Explain the graphics rendering pipeline.\n2\\. Differentiate between rasterization and ray tracing. 3\\. Apply\ntransformations to 2D and 3D models.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/574c1197ef47397f264dd302e3e0ff1f728efb55e7d8b8261d529d0a3f420d21> .
_:Nbbf1a16279904a7ea0bd3e6bc242620c <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/574c1197ef47397f264dd302e3e0ff1f728efb55e7d8b8261d529d0a3f420d21> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/574c1197ef47397f264dd302e3e0ff1f728efb55e7d8b8261d529d0a3f420d21> .
_:Nbbf1a16279904a7ea0bd3e6bc242620c <http://schema.org/explain> "The lecture focuses on linear algebra, which is foundational but not directly covering the specific graphics and visualization topics outlined in the KU." <http://groq.org/574c1197ef47397f264dd302e3e0ff1f728efb55e7d8b8261d529d0a3f420d21> .
_:Nbbf1a16279904a7ea0bd3e6bc242620c <http://schema.org/answer> "0" <http://groq.org/574c1197ef47397f264dd302e3e0ff1f728efb55e7d8b8261d529d0a3f420d21> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3MU030" <http://groq.org/574c1197ef47397f264dd302e3e0ff1f728efb55e7d8b8261d529d0a3f420d21> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/has_schema_type> _:Nbbf1a16279904a7ea0bd3e6bc242620c <http://groq.org/574c1197ef47397f264dd302e3e0ff1f728efb55e7d8b8261d529d0a3f420d21> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/has_schema_type> _:N91aa68b5c0dd4cfabf1b8b1459eae45c <http://groq.org/ce7ddedffe9b0f6cda8a96ed29a50e21148c4285d9b06d676e716826ef8c32aa> .
_:N91aa68b5c0dd4cfabf1b8b1459eae45c <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/ce7ddedffe9b0f6cda8a96ed29a50e21148c4285d9b06d676e716826ef8c32aa> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU030" <http://groq.org/ce7ddedffe9b0f6cda8a96ed29a50e21148c4285d9b06d676e716826ef8c32aa> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU030</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/ce7ddedffe9b0f6cda8a96ed29a50e21148c4285d9b06d676e716826ef8c32aa> .
_:N91aa68b5c0dd4cfabf1b8b1459eae45c <http://schema.org/answer> "1" <http://groq.org/ce7ddedffe9b0f6cda8a96ed29a50e21148c4285d9b06d676e716826ef8c32aa> .
_:N91aa68b5c0dd4cfabf1b8b1459eae45c <http://schema.org/explain> "The lecture covers key concepts of SE-Formal Methods, applies principles in practical scenarios, and analyzes the importance of the topic in computing, aligning with the KU's learning outcomes." <http://groq.org/ce7ddedffe9b0f6cda8a96ed29a50e21148c4285d9b06d676e716826ef8c32aa> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/ce7ddedffe9b0f6cda8a96ed29a50e21148c4285d9b06d676e716826ef8c32aa> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/has_schema_type> _:N4aa5c80416b34051bf7d926f6f2434e2 <http://groq.org/0e396445c1a68ae87d277fc420aae3c1a7b30cafbf2f1a381ffa4e5b7d3b7bd5> .
_:N4aa5c80416b34051bf7d926f6f2434e2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/0e396445c1a68ae87d277fc420aae3c1a7b30cafbf2f1a381ffa4e5b7d3b7bd5> .
_:N4aa5c80416b34051bf7d926f6f2434e2 <http://schema.org/explain> "The lecture focuses on teaching methods, not the technical content of the KU." <http://groq.org/0e396445c1a68ae87d277fc420aae3c1a7b30cafbf2f1a381ffa4e5b7d3b7bd5> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/0e396445c1a68ae87d277fc420aae3c1a7b30cafbf2f1a381ffa4e5b7d3b7bd5> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S4 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4AU010</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/0e396445c1a68ae87d277fc420aae3c1a7b30cafbf2f1a381ffa4e5b7d3b7bd5> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4AU010" <http://groq.org/0e396445c1a68ae87d277fc420aae3c1a7b30cafbf2f1a381ffa4e5b7d3b7bd5> .
_:N4aa5c80416b34051bf7d926f6f2434e2 <http://schema.org/answer> "0" <http://groq.org/0e396445c1a68ae87d277fc420aae3c1a7b30cafbf2f1a381ffa4e5b7d3b7bd5> .
_:N36409c1fa07541c78ad9b486d0e8366f <http://example.org/has_score> "0.6525782"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/dde8d17a29465bb0715432ec1d08694149848e02a084ed910e537f64e941a256> .
_:N36409c1fa07541c78ad9b486d0e8366f <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://faiss.org/dde8d17a29465bb0715432ec1d08694149848e02a084ed910e537f64e941a256> .
_:Ne9cb4607fad146f29e0bd1f81c4b1cef <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://faiss.org/dde8d17a29465bb0715432ec1d08694149848e02a084ed910e537f64e941a256> .
_:N36409c1fa07541c78ad9b486d0e8366f <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://faiss.org/dde8d17a29465bb0715432ec1d08694149848e02a084ed910e537f64e941a256> .
<http://example.org/faiss> <http://example.org/input> "Label: Methodologie et insertion professionnelle S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU010" <http://faiss.org/dde8d17a29465bb0715432ec1d08694149848e02a084ed910e537f64e941a256> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/is_aligned_with> _:N36409c1fa07541c78ad9b486d0e8366f <http://faiss.org/dde8d17a29465bb0715432ec1d08694149848e02a084ed910e537f64e941a256> .
_:Ne9cb4607fad146f29e0bd1f81c4b1cef <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/dde8d17a29465bb0715432ec1d08694149848e02a084ed910e537f64e941a256> .
_:Nbecec47a384040c3a83c662608802826 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nGIT-3D Modeling: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of GIT-3D Modeling.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/dde8d17a29465bb0715432ec1d08694149848e02a084ed910e537f64e941a256> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/is_aligned_with> _:Ne9cb4607fad146f29e0bd1f81c4b1cef <http://faiss.org/dde8d17a29465bb0715432ec1d08694149848e02a084ed910e537f64e941a256> .
_:Nbecec47a384040c3a83c662608802826 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Graphics_and_Interactive_Techniques_GIT/GIT-3D_Modeling.txt> <http://faiss.org/dde8d17a29465bb0715432ec1d08694149848e02a084ed910e537f64e941a256> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/is_aligned_with> _:Nbecec47a384040c3a83c662608802826 <http://faiss.org/dde8d17a29465bb0715432ec1d08694149848e02a084ed910e537f64e941a256> .
_:Nbecec47a384040c3a83c662608802826 <http://example.org/has_score> "0.6349528"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/dde8d17a29465bb0715432ec1d08694149848e02a084ed910e537f64e941a256> .
_:Ne9cb4607fad146f29e0bd1f81c4b1cef <http://example.org/has_score> "0.6541157"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/dde8d17a29465bb0715432ec1d08694149848e02a084ed910e537f64e941a256> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU020" <http://groq.org/e27b3f6316394e876016f595684002405ae68056343505fe07b9ae91ce674aea> .
_:N5317ae1955fd4df19f255e08db7b3491 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/e27b3f6316394e876016f595684002405ae68056343505fe07b9ae91ce674aea> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/e27b3f6316394e876016f595684002405ae68056343505fe07b9ae91ce674aea> .
_:N5317ae1955fd4df19f255e08db7b3491 <http://schema.org/explain> "The lecture focuses on teaching methods, not the formal methods content of the KU." <http://groq.org/e27b3f6316394e876016f595684002405ae68056343505fe07b9ae91ce674aea> .
_:N5317ae1955fd4df19f255e08db7b3491 <http://schema.org/answer> "0" <http://groq.org/e27b3f6316394e876016f595684002405ae68056343505fe07b9ae91ce674aea> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Unité Enseignement de Découverte Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU020</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/e27b3f6316394e876016f595684002405ae68056343505fe07b9ae91ce674aea> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/has_schema_type> _:N5317ae1955fd4df19f255e08db7b3491 <http://groq.org/e27b3f6316394e876016f595684002405ae68056343505fe07b9ae91ce674aea> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/ba4c1ab6f4c1c98aac0183d391221906f336d1ca6363526aafaf7c7156029cf7> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/has_schema_type> _:N89ba6722ee634b9b83e7eecd877a9cf3 <http://groq.org/ba4c1ab6f4c1c98aac0183d391221906f336d1ca6363526aafaf7c7156029cf7> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU010" <http://groq.org/ba4c1ab6f4c1c98aac0183d391221906f336d1ca6363526aafaf7c7156029cf7> .
_:N89ba6722ee634b9b83e7eecd877a9cf3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/ba4c1ab6f4c1c98aac0183d391221906f336d1ca6363526aafaf7c7156029cf7> .
_:N89ba6722ee634b9b83e7eecd877a9cf3 <http://schema.org/explain> "The lecture covers the course content of SE-Formal Methods, including key concepts, practical applications, and importance in computing, which aligns with the Knowledge Unit's objectives." <http://groq.org/ba4c1ab6f4c1c98aac0183d391221906f336d1ca6363526aafaf7c7156029cf7> .
_:N89ba6722ee634b9b83e7eecd877a9cf3 <http://schema.org/answer> "1" <http://groq.org/ba4c1ab6f4c1c98aac0183d391221906f336d1ca6363526aafaf7c7156029cf7> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/ba4c1ab6f4c1c98aac0183d391221906f336d1ca6363526aafaf7c7156029cf7> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU040" <http://groq.org/bcd293db8c34056caffbd0c0b1b2063269efa759a8006aa3c24ebbffb494fe23> .
_:N563690faf18b4ac3aa49f978b86c99a8 <http://schema.org/explain> "The lecture covers some introductory aspects but lacks depth in key areas like normalization and functional dependencies." <http://groq.org/bcd293db8c34056caffbd0c0b1b2063269efa759a8006aa3c24ebbffb494fe23> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/bcd293db8c34056caffbd0c0b1b2063269efa759a8006aa3c24ebbffb494fe23> .
_:N563690faf18b4ac3aa49f978b86c99a8 <http://schema.org/answer> "0" <http://groq.org/bcd293db8c34056caffbd0c0b1b2063269efa759a8006aa3c24ebbffb494fe23> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/has_schema_type> _:N563690faf18b4ac3aa49f978b86c99a8 <http://groq.org/bcd293db8c34056caffbd0c0b1b2063269efa759a8006aa3c24ebbffb494fe23> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Bases de données Objectif: (résultats d'apprentissage)\n- Introduction à la modélisation Merise\n- Modèle relationnel\n- Algèbre relationnelle et SQL Course content: - Passage au relationnel\n- Définition et interrogation d'une base en sql\n- Introduction au modèle olap Course name: http://example.org/course/UE_XLG4IU040</page1>\n        <page2>Pages: 117-118 HOURS CS Core = 1 KA Core = 3 DM-Relational: Relational\nDatabases CS Core: 1\\. Entity and referential integrity: Candidate key,\nsuperkeys 2\\. Relational database design KA Core: 3\\. Mapping conceptual\nschema to a relational schema 4\\. Physical database design: file and storage\nstructures (See also: OS-Files) 5\\. Introduction to Functional dependency\ntheory 6\\. Normalization Theory a. Decomposition of a schema; lossless-join,\nand dependency-preservation properties of a decomposition b. Normal forms\n(BCNF) c. Denormalization (for efficiency) Non-core: 7\\. Functional dependency\ntheory a. Closure of a set of attributes b. Canonical Cover 8\\. Normalization\ntheory a. Multi-valued dependency (4NF) b. Join dependency (PJNF, 5NF) c.\nRepresentation theory Illustrative Learning Outcomes: CS Core: 1\\. Describe\nthe defining characteristics behind the relational data model. 2\\. Comment on\nthe difference between a foreign key and a superkey. 3\\. Enumerate the\ndifferent types of integrity constraints. KA Core: 4\\. Compose a relational\nschema from a conceptual schema which contains 1:1, 1:n, and n:m\nrelationships. 5\\. Map appropriate file structure to relations and indices.\n6\\. Describe how functional dependency theory generalizes the notion of key.\n7\\. Defend a given decomposition as lossless and or dependency preserving. 8\\.\nDetect which normal form a given decomposition yields. 9\\. Comment on reasons\nfor denormalizing a relation.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/bcd293db8c34056caffbd0c0b1b2063269efa759a8006aa3c24ebbffb494fe23> .
_:N563690faf18b4ac3aa49f978b86c99a8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/bcd293db8c34056caffbd0c0b1b2063269efa759a8006aa3c24ebbffb494fe23> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/has_schema_type> _:N6ce79b417857413cbb86e8c305b20343 <http://groq.org/4949037a832f9bfb4b46e3dbd08ef17c55f0fb8b13c38822ba47563069e9f768> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3AU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/4949037a832f9bfb4b46e3dbd08ef17c55f0fb8b13c38822ba47563069e9f768> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3AU010" <http://groq.org/4949037a832f9bfb4b46e3dbd08ef17c55f0fb8b13c38822ba47563069e9f768> .
_:N6ce79b417857413cbb86e8c305b20343 <http://schema.org/explain> "No overlap in subject matter; lecture focuses on teaching methods while KU is about formal methods in CS." <http://groq.org/4949037a832f9bfb4b46e3dbd08ef17c55f0fb8b13c38822ba47563069e9f768> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/4949037a832f9bfb4b46e3dbd08ef17c55f0fb8b13c38822ba47563069e9f768> .
_:N6ce79b417857413cbb86e8c305b20343 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/4949037a832f9bfb4b46e3dbd08ef17c55f0fb8b13c38822ba47563069e9f768> .
_:N6ce79b417857413cbb86e8c305b20343 <http://schema.org/answer> "0" <http://groq.org/4949037a832f9bfb4b46e3dbd08ef17c55f0fb8b13c38822ba47563069e9f768> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU020" <http://groq.org/5649ff37988667a8095a5a17c242889f670068c9f3325daa56afe82155a7347b> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/5649ff37988667a8095a5a17c242889f670068c9f3325daa56afe82155a7347b> .
_:Nb931ee2865424d33a6fd393f5855614a <http://schema.org/explain> "The lecture focuses on teaching methods, while the KU covers technical formal methods in software engineering." <http://groq.org/5649ff37988667a8095a5a17c242889f670068c9f3325daa56afe82155a7347b> .
_:Nb931ee2865424d33a6fd393f5855614a <http://schema.org/answer> "0" <http://groq.org/5649ff37988667a8095a5a17c242889f670068c9f3325daa56afe82155a7347b> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Unité Enseignement de Découverte Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU020</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/5649ff37988667a8095a5a17c242889f670068c9f3325daa56afe82155a7347b> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/has_schema_type> _:Nb931ee2865424d33a6fd393f5855614a <http://groq.org/5649ff37988667a8095a5a17c242889f670068c9f3325daa56afe82155a7347b> .
_:Nb931ee2865424d33a6fd393f5855614a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/5649ff37988667a8095a5a17c242889f670068c9f3325daa56afe82155a7347b> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/has_schema_type> _:N5a6a1a0f238845519ed79507c1627475 <http://groq.org/97458bf1a24f916c19b5aa61fa4da5fe5dcc56d6137e1fad85f51d29c824aed0> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S4 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4AU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/97458bf1a24f916c19b5aa61fa4da5fe5dcc56d6137e1fad85f51d29c824aed0> .
_:N5a6a1a0f238845519ed79507c1627475 <http://schema.org/explain> "The lecture and KU cover unrelated subjects." <http://groq.org/97458bf1a24f916c19b5aa61fa4da5fe5dcc56d6137e1fad85f51d29c824aed0> .
_:N5a6a1a0f238845519ed79507c1627475 <http://schema.org/answer> "0" <http://groq.org/97458bf1a24f916c19b5aa61fa4da5fe5dcc56d6137e1fad85f51d29c824aed0> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/97458bf1a24f916c19b5aa61fa4da5fe5dcc56d6137e1fad85f51d29c824aed0> .
_:N5a6a1a0f238845519ed79507c1627475 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/97458bf1a24f916c19b5aa61fa4da5fe5dcc56d6137e1fad85f51d29c824aed0> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4AU010" <http://groq.org/97458bf1a24f916c19b5aa61fa4da5fe5dcc56d6137e1fad85f51d29c824aed0> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU020" <http://groq.org/ed341a191ed2c37ae65410c4845669532d443b1d3908872c71de04aa90838534> .
_:N28e3eeb771c34e9c842175893ed7a44c <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/ed341a191ed2c37ae65410c4845669532d443b1d3908872c71de04aa90838534> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/ed341a191ed2c37ae65410c4845669532d443b1d3908872c71de04aa90838534> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Langages et automates Objectif: (résultats d'apprentissage)\n5. Course content: • Langages algébriques\n- Grammaire algébrique\n- Arbre de dérivation\n- Automates à pile\n• Hiérarchie de Chomsky\n- Classification des grammaires;\n- Algorithmes de reconnaissance pour les grammaires de type 1 et 2\n• Analyse lexicale et syntaxique\n- TP de flex et bison Course name: http://example.org/course/UE_XLG4IU020</page1>\n        <page2>Pages: 145-146 HOURS CS Core = 0 KA Core = 0 FPL-Formalism: Formal Semantics\nNon-core: 1\\. Syntax vs semantics 2\\. Approaches to semantics: axiomatic,\noperational, denotational, type-based 3\\. Axiomatic semantics of abstract\nconstructs such as assignment, selection, iteration using precondition, post-\nconditions, and loop invariant 4\\. Operational semantics analysis of abstract\nconstructs and sequence of such as assignment, expression evaluation,\nselection, iteration using environment and store a. Symbolic execution b.\nConstraint checkers 5\\. Denotational semantics a. Lambda Calculus. (See also:\nAL-Models, FPL-Functional) 6\\. Proofs by induction over language semantics 7\\.\nFormal definitions and proofs for type systems (See also: FPL-Types) a.\nPropositions as types (implication as a function, conjunction as a product,\ndisjunction as a sum) b. Dependent types (universal quantification as\ndependent function, existential quantification as dependent product) c.\nParametricity Illustrative learning outcomes: Non-core: 1\\. Construct formal\nsemantics for a small language. 2\\. Write a lambda-calculus program and show\nits evaluation to a normal form. 3\\. Discuss the different approaches of\noperational, denotational, and axiomatic semantics. 4\\. Use induction to prove\nproperties of all programs in a language. 5\\. Use induction to prove\nproperties of all programs in a language that is well-typed according to a\nformally defined type system. 6\\. Use parametricity to establish the behavior\nof code given only its type.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/ed341a191ed2c37ae65410c4845669532d443b1d3908872c71de04aa90838534> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/has_schema_type> _:N28e3eeb771c34e9c842175893ed7a44c <http://groq.org/ed341a191ed2c37ae65410c4845669532d443b1d3908872c71de04aa90838534> .
_:N28e3eeb771c34e9c842175893ed7a44c <http://schema.org/answer> "0" <http://groq.org/ed341a191ed2c37ae65410c4845669532d443b1d3908872c71de04aa90838534> .
_:N28e3eeb771c34e9c842175893ed7a44c <http://schema.org/explain> "Lecture focuses on formal grammars/automata, while KU covers semantics/type systems. No overlap on core KU topics." <http://groq.org/ed341a191ed2c37ae65410c4845669532d443b1d3908872c71de04aa90838534> .
_:N285a2b153ed546699065cf4925a3f8a1 <http://example.org/has_score> "0.65625584"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/1e862242dea1831f50cf0ef4ac9ebb5b13a80c2ca899ed57572c64dacd9364fe> .
_:Ne302e2a6b1e94913baa2a5da3af2cf40 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Testing and Quality Assurance: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Testing and Quality Assurance.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/1e862242dea1831f50cf0ef4ac9ebb5b13a80c2ca899ed57572c64dacd9364fe> .
_:N45843b6e29f14cc1b4fec7b21bad3e6b <http://example.org/has_score> "0.6704163"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/1e862242dea1831f50cf0ef4ac9ebb5b13a80c2ca899ed57572c64dacd9364fe> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/is_aligned_with> _:Ne302e2a6b1e94913baa2a5da3af2cf40 <http://faiss.org/1e862242dea1831f50cf0ef4ac9ebb5b13a80c2ca899ed57572c64dacd9364fe> .
_:N285a2b153ed546699065cf4925a3f8a1 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Project_Management.txt> <http://faiss.org/1e862242dea1831f50cf0ef4ac9ebb5b13a80c2ca899ed57572c64dacd9364fe> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/is_aligned_with> _:N45843b6e29f14cc1b4fec7b21bad3e6b <http://faiss.org/1e862242dea1831f50cf0ef4ac9ebb5b13a80c2ca899ed57572c64dacd9364fe> .
<http://example.org/faiss> <http://example.org/input> "Label: Methodologie et insertion professionnelle S4 Objectif: (résultats d'apprentissage)\nfaire et savoir-être) et d'un plan d'actions sur les prochaines années : à l'écrit et à l'oral\n- d'identitier et d'animer son réseau (professionnel et élargi)\n- de créer et de faire vivre ses profils numériques professionnels\n- de mener une enquête métier auprès d'un professionnel et de la restituer Course content: - présentation orale de la restitution de l'enquête et des recherches sur le métier\n- équivalent de 8 TD + présentation orale des enquêtes:\n- identication de ses valeurs\n- indentification de ses compétences\n- consrtruction de son projet professionnel et personnel\n- présentation de son projet Course name: http://example.org/course/UE_XLG4TU010" <http://faiss.org/1e862242dea1831f50cf0ef4ac9ebb5b13a80c2ca899ed57572c64dacd9364fe> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/is_aligned_with> _:N285a2b153ed546699065cf4925a3f8a1 <http://faiss.org/1e862242dea1831f50cf0ef4ac9ebb5b13a80c2ca899ed57572c64dacd9364fe> .
_:Ne302e2a6b1e94913baa2a5da3af2cf40 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Testing_and_Quality_Assurance.txt> <http://faiss.org/1e862242dea1831f50cf0ef4ac9ebb5b13a80c2ca899ed57572c64dacd9364fe> .
_:N45843b6e29f14cc1b4fec7b21bad3e6b <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://faiss.org/1e862242dea1831f50cf0ef4ac9ebb5b13a80c2ca899ed57572c64dacd9364fe> .
_:Ne302e2a6b1e94913baa2a5da3af2cf40 <http://example.org/has_score> "0.651711"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/1e862242dea1831f50cf0ef4ac9ebb5b13a80c2ca899ed57572c64dacd9364fe> .
_:N285a2b153ed546699065cf4925a3f8a1 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Project Management: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Project Management.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/1e862242dea1831f50cf0ef4ac9ebb5b13a80c2ca899ed57572c64dacd9364fe> .
_:N45843b6e29f14cc1b4fec7b21bad3e6b <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/1e862242dea1831f50cf0ef4ac9ebb5b13a80c2ca899ed57572c64dacd9364fe> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Optimisation 1 et Calcul integral Objectif: (résultats d'apprentissage)\n• Course content: • Course name: http://example.org/course/UE_XLG4MU050</page1>\n        <page2>Pages: 192-194 HOURS CS Core = 0 KA Core = 40 MSF-Calculus KA Core: 1\\.\nSequences, series, limits 2\\. Single-variable derivatives: definition,\ncomputation rules (chain rule etc.), derivatives of important functions,\napplications 3\\. Single-variable integration: definition, computation rules,\nintegrals of important functions, fundamental theorem of calculus, definite vs\nindefinite, applications (including in probability) 4\\. Parametric and polar\nrepresentations 5\\. Taylor series 6\\. Multivariate calculus: partial\nderivatives, gradient, chain-rule, vector valued functions, 7\\. Optimization:\nconvexity, global vs local minima, gradient descent, constrained optimization,\nand Lagrange multipliers. 8\\. Ordinary Differential Equations (ODEs):\ndefinition, Euler method, applications to simulation, Monte Carlo integration\n9\\. CS applications: gradient descent for machine learning, forward and\ninverse kinematics, applications of calculus to probability Note: the calculus\ntopics listed above are aligned with computer science goals rather than with\ntraditional calculus courses. For example, multivariate calculus is often a\ncourse by itself, but computer science undergraduates only need parts of it\nfor machine learning. Illustrative Learning Outcomes: KA Core: 1\\. Sequences,\nseries, limits a. Explain the difference between infinite sets and sequences.\nb. Explain the formal definition of a limit. c. Derive the limit for examples\nof sequences and series. d. Explain convergence and divergence. e. Apply\nL'Hospital's rule and other approaches to resolving limits. 2\\. Single-\nvariable derivatives: definition, computation rules (chain rule etc.),\nderivatives of important functions, applications a. Explain a derivative in\nterms of limits. b. Explain derivatives as functions. c. Perform elementary\nderivative calculations from limits. d. Apply sum, product, and quotient\nrules. e. Work through examples with important functions. 3\\. Single-variable\nintegration: definition, computation rules, integrals of important functions,\nfundamental theorem of calculus, definite vs indefinite, applications\n(including in probability) a. Explain the definitions of definite and\nindefinite integrals. b. Apply integration rules to examples with important\nfunctions. c. Explore the use of the fundamental theorem of calculus. d. Apply\nintegration to problems. 4\\. Parametric and polar representations a. Apply\nparametric representations of important curves. b. Apply polar\nrepresentations. 5\\. Taylor series a. Derive Taylor series for some important\nfunctions. b. Apply the Taylor series to approximations. 6\\. Multivariate\ncalculus: partial derivatives, gradient, chain-rule, vector valued functions,\napplications to optimization, convexity, global vs local minima. a. Compute\npartial derivatives and gradients. b. Work through examples with vector-valued\nfunctions with gradient notation. c. Explain applications to optimization. 7\\.\nODEs: definition, Euler method, applications to simulation a. Apply the Euler\nmethod to integration. b. Apply the Euler method to a single-variable\ndifferential equation. c. Apply the Euler method to multiple variables in an\nODE.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/187d53e0ccee5ff3456c7f1c7d22ce38a08cf7338cbcb912f530eb50372e29f4> .
_:N52e4a92967ff42f2b1c81c0ef160b4f0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/187d53e0ccee5ff3456c7f1c7d22ce38a08cf7338cbcb912f530eb50372e29f4> .
_:N52e4a92967ff42f2b1c81c0ef160b4f0 <http://schema.org/explain> "The lecture covers most of the topics listed in the KU, including sequences, series, limits, derivatives, integration, parametric and polar representations, Taylor series, multivariate calculus, and ordinary differential equations." <http://groq.org/187d53e0ccee5ff3456c7f1c7d22ce38a08cf7338cbcb912f530eb50372e29f4> .
_:N52e4a92967ff42f2b1c81c0ef160b4f0 <http://schema.org/answer> "1" <http://groq.org/187d53e0ccee5ff3456c7f1c7d22ce38a08cf7338cbcb912f530eb50372e29f4> .
<http://example.org/course/UE_XLG4MU050> <http://example.org/has_schema_type> _:N52e4a92967ff42f2b1c81c0ef160b4f0 <http://groq.org/187d53e0ccee5ff3456c7f1c7d22ce38a08cf7338cbcb912f530eb50372e29f4> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/187d53e0ccee5ff3456c7f1c7d22ce38a08cf7338cbcb912f530eb50372e29f4> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4MU050" <http://groq.org/187d53e0ccee5ff3456c7f1c7d22ce38a08cf7338cbcb912f530eb50372e29f4> .
_:Nea52c42de9ad46bd8be3bd5c0446adcb <http://example.org/has_score> "0.6819768"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/47ff5cf9e80e1f46ff0c4d26fed728862246690856ffaeda61a78aedb9d86ebf> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/is_aligned_with> _:Nc62af35140044cbea1f7f8e851f7d4d4 <http://faiss.org/47ff5cf9e80e1f46ff0c4d26fed728862246690856ffaeda61a78aedb9d86ebf> .
_:Nc62af35140044cbea1f7f8e851f7d4d4 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Logic_Logic_Programming.txt> <http://faiss.org/47ff5cf9e80e1f46ff0c4d26fed728862246690856ffaeda61a78aedb9d86ebf> .
_:Nea52c42de9ad46bd8be3bd5c0446adcb <http://example.org/has_chunk> ".\nc. Relationship between subtyping and inheritance.\nKA Core:\n11. Collection classes, iterators, and other common library components.\n12. Metaprogramming and reflection.\nIllustrative Learning Outcomes:\nCS Core:\n1. Enumerate the differences between imperative and object-oriented programming paradigms.\n2. Compose a class through design, implementation, and testing to meet behavioral requirements.\n3. Build a simple class hierarchy utilizing subclassing that allows code to be reused for distinct\nsubclasses.\n4" <http://faiss.org/47ff5cf9e80e1f46ff0c4d26fed728862246690856ffaeda61a78aedb9d86ebf> .
_:N60941109237840f68afe38a53ab7e24f <http://example.org/has_score> "0.6746223"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/47ff5cf9e80e1f46ff0c4d26fed728862246690856ffaeda61a78aedb9d86ebf> .
_:N60941109237840f68afe38a53ab7e24f <http://example.org/has_chunk> ". (See also: FPL-Logic)\n10. Integration with other programming paradigms such as imperative and object-oriented.\nIllustrative learning outcomes:\nCS Core:\n1. Develop basic algorithms that avoid assigning to mutable states or considering reference equality.\n2. Develop useful functions that take and return other functions.\n3. Compare and contrast how computational solutions to a problem differ in procedural, functional,\nand object-oriented approaches.\n4" <http://faiss.org/47ff5cf9e80e1f46ff0c4d26fed728862246690856ffaeda61a78aedb9d86ebf> .
_:Nea52c42de9ad46bd8be3bd5c0446adcb <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-OOP_Object-Oriented_Programming.txt> <http://faiss.org/47ff5cf9e80e1f46ff0c4d26fed728862246690856ffaeda61a78aedb9d86ebf> .
<http://example.org/faiss> <http://example.org/input> "Label: Programmation à Objets Objectif: (résultats d'apprentissage) Connaître les mécanismes d’héritage et de polymorphisme Course content: Classes abstraites Course name: http://example.org/course/UE_XLG3IU030" <http://faiss.org/47ff5cf9e80e1f46ff0c4d26fed728862246690856ffaeda61a78aedb9d86ebf> .
_:N60941109237840f68afe38a53ab7e24f <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Functional_Functional_Programming.txt> <http://faiss.org/47ff5cf9e80e1f46ff0c4d26fed728862246690856ffaeda61a78aedb9d86ebf> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/is_aligned_with> _:Nea52c42de9ad46bd8be3bd5c0446adcb <http://faiss.org/47ff5cf9e80e1f46ff0c4d26fed728862246690856ffaeda61a78aedb9d86ebf> .
_:Nc62af35140044cbea1f7f8e851f7d4d4 <http://example.org/has_chunk> ". (See also: AI-LRR)\n13. Integration with other programming paradigms such as object-oriented programming.\n14. Advance programming constructs such as difference-lists, creating user defined data structures, set\nof, etc.\nIllustrative learning outcomes:\nKA Core:\n1. Use a logic language to implement a conventional algorithm.\n2. Use a logic language to implement an algorithm employing implicit search using clauses, relations,\nand cuts.\n3" <http://faiss.org/47ff5cf9e80e1f46ff0c4d26fed728862246690856ffaeda61a78aedb9d86ebf> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/is_aligned_with> _:N60941109237840f68afe38a53ab7e24f <http://faiss.org/47ff5cf9e80e1f46ff0c4d26fed728862246690856ffaeda61a78aedb9d86ebf> .
_:Nc62af35140044cbea1f7f8e851f7d4d4 <http://example.org/has_score> "0.6790555"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/47ff5cf9e80e1f46ff0c4d26fed728862246690856ffaeda61a78aedb9d86ebf> .
_:N8519d24bdd5847b98b7e989e71ad5e95 <http://schema.org/explain> "Lecture focuses on data structures, while KU requires broader math/proof coverage" <http://groq.org/806cd0795a2f20fa7a4ecd9649077557272919c205aafc82dbc632d421926bab> .
_:N8519d24bdd5847b98b7e989e71ad5e95 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/806cd0795a2f20fa7a4ecd9649077557272919c205aafc82dbc632d421926bab> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 2 Objectif: (résultats d'apprentissage)\ndonnées (itératifs et récursifs) Course content: Structures de données non-linéaires associatives (table associative, ensemble, classe-union) Course name: http://example.org/course/UE_XLG4IU010</page1>\n        <page2>Pages: 187-188 HOURS CS Core = 29 KA Core = 11 MSF-Discrete: Discrete\nMathematics CS Core: 1\\. Sets, relations, functions, cardinality 2\\. Recursive\nmathematical definitions 3\\. Proof techniques (induction, proof by\ncontradiction) 4\\. Permutations, combinations, counting, pigeonhole principle\n5\\. Modular arithmetic 6\\. Logic: truth tables, connectives (operators),\ninference rules, formulas, normal forms, simple predicate logic 7\\. Graphs:\nbasic definitions 8\\. Order notation Illustrative Learning Outcomes: CS Core:\n1\\. Sets, Relations, and Functions, Cardinality a. Explain with examples the\nbasic terminology of functions, relations, and sets. b. Perform the operations\nassociated with sets, functions, and relations. c. Relate practical examples\nto the appropriate set, function, or relation model, and interpret the\nassociated operations and terminology in context. d. Calculate the size of a\nfinite set, including making use of the sum and product rules and inclusion-\nexclusion principle. e. Explain the difference between finite, countable, and\nuncountable sets. 2\\. Recursive mathematical definitions a. Apply recursive\ndefinitions of sequences or structures (e.g., Fibonacci numbers, linked lists,\nparse trees, fractals). b. Formulate inductive proofs of statements about\nrecursive definitions. c. Solve a variety of basic recurrence relations. d.\nAnalyze a problem to determine underlying recurrence relations. e. Given a\nrecursive/iterative code snippet, describe its underlying recurrence relation,\nhypothesize a closed form for the recurrence relation, and prove the\nhypothesis correct (usually, using induction). 3\\. Proof Techniques a.\nIdentify the proof technique used in a given proof. b. Outline the basic\nstructure of each proof technique (direct proof, proof by contradiction, and\ninduction) described in this unit. c. Apply each of the proof techniques\n(direct proof, proof by contradiction, and induction) correctly in the\nconstruction of a sound argument. d. Determine which type of proof is best for\na given problem. e. Explain the parallels between ideas of mathematical and/or\nstructural induction to recursion and recursively defined structures. f.\nExplain the relationship between weak and strong induction and give examples\nof the appropriate use of each. 4\\. Permutations, combinations, and counting\na. Apply counting arguments, including sum and product rules, inclusion-\nexclusion principle, and arithmetic/geometric progressions. b. Apply the\npigeonhole principle in the context of a formal proof. c. Compute permutations\nand combinations of a set, and interpret the meaning in the context of the\nspecific application. d. Map real-world applications to appropriate counting\nformalisms, such as determining the number of ways to arrange people around a\ntable, subject to constraints on the seating arrangement, or the number of\nways to determine certain hands in cards (e.g., a full house). 5\\. Modular\narithmetic a. Perform computations involving modular arithmetic. b. Explain\nthe notion of the greatest common divisor and apply Euclid's algorithm to\ncompute it. 6\\. Logic a. Convert logical statements from informal language to\npropositional and predicate logic expressions. b. Apply formal methods of\nsymbolic propositional and predicate logic, such as calculating validity of\nformulae, computing normal forms, or negating a logical statement. c. Use the\nrules of inference to construct proofs in propositional and predicate logic.\nd. Describe how symbolic logic can be used to model real-life situations or\napplications, including those arising in computing contexts such as software\nanalysis (e.g., program correctness), database queries, and algorithms. e.\nApply formal logic proofs and/or informal, but rigorous, logical reasoning to\nreal problems, such as predicting the behavior of software or solving problems\nsuch as puzzles. f. Describe the strengths and limitations of propositional\nand predicate logic. g. Explain what it means for a proof in propositional (or\npredicate) logic to be valid. 7\\. Graphs a. Illustrate by example the basic\nterminology of graph theory, and some of the properties and special cases of\ntypes of graphs, including trees. b. Demonstrate different traversal methods\nfor trees and graphs, including pre-, post-, and in-order traversal of trees,\nalong with breadth-first and depth-first search for graphs. c. Model a variety\nof real-world problems in computer science using appropriate forms of graphs\nand trees, such as representing a network topology, the organization of a\nhierarchical file system, or a social network. d. Show how concepts from\ngraphs and trees appear in data structures, algorithms, proof techniques\n(structural induction), and counting. KA Core: The recommended topics are the\nsame between CS core and KA-core, but with far more hours, the KA-core can\ncover these topics in depth and might include more computing-related\napplications.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/806cd0795a2f20fa7a4ecd9649077557272919c205aafc82dbc632d421926bab> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU010" <http://groq.org/806cd0795a2f20fa7a4ecd9649077557272919c205aafc82dbc632d421926bab> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/has_schema_type> _:N8519d24bdd5847b98b7e989e71ad5e95 <http://groq.org/806cd0795a2f20fa7a4ecd9649077557272919c205aafc82dbc632d421926bab> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/806cd0795a2f20fa7a4ecd9649077557272919c205aafc82dbc632d421926bab> .
_:N8519d24bdd5847b98b7e989e71ad5e95 <http://schema.org/answer> "0" <http://groq.org/806cd0795a2f20fa7a4ecd9649077557272919c205aafc82dbc632d421926bab> .
_:N44f7151a3822493b99ddb4d367e3e2c5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/921f0c2342c76d38a408d44fc98bf68a7c9433a23bf7490b525bc218f7a8c9a2> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU010" <http://groq.org/921f0c2342c76d38a408d44fc98bf68a7c9433a23bf7490b525bc218f7a8c9a2> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/has_schema_type> _:N44f7151a3822493b99ddb4d367e3e2c5 <http://groq.org/921f0c2342c76d38a408d44fc98bf68a7c9433a23bf7490b525bc218f7a8c9a2> .
_:N44f7151a3822493b99ddb4d367e3e2c5 <http://schema.org/answer> "1" <http://groq.org/921f0c2342c76d38a408d44fc98bf68a7c9433a23bf7490b525bc218f7a8c9a2> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU010</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/921f0c2342c76d38a408d44fc98bf68a7c9433a23bf7490b525bc218f7a8c9a2> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/921f0c2342c76d38a408d44fc98bf68a7c9433a23bf7490b525bc218f7a8c9a2> .
_:N44f7151a3822493b99ddb4d367e3e2c5 <http://schema.org/explain> "The lecture covers topics such as development platforms, programming languages, and platform constraints, which align with the Knowledge Unit's content." <http://groq.org/921f0c2342c76d38a408d44fc98bf68a7c9433a23bf7490b525bc218f7a8c9a2> .
_:N2bb457e493e74494af9d92be1f142b67 <http://schema.org/answer> "0" <http://groq.org/b367ff59ad4157a03ce83d9125f192256ba508cd2b951328235b2447d1c8fb6f> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU010" <http://groq.org/b367ff59ad4157a03ce83d9125f192256ba508cd2b951328235b2447d1c8fb6f> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 1 Objectif: (résultats d'apprentissage)\n•\nÉvaluer une implémentation de structure de données en temps et en place mémoire (coûts minimal,\nmaximal, amorti)\n• Course content: et mise en pratique dans l’approche de résolution de problèmes « Diviser pour régner ». Course name: http://example.org/course/UE_XLG3IU010</page1>\n        <page2>Pages: 133 HOURS CS Core = 0 KA Core = 2 + 1 (MSF) FPL-Logic: Logic\nProgramming KA Core: 1\\. Universal vs existential quantifiers. (See also: AI-\nLRR, MSF-Discrete) 2\\. First order predicate logic vs higher order logic. (See\nalso: AI-LRR, MSF-Discrete) 3\\. Expressing complex relations using logical\nconnectives and simpler relations. 4\\. Definitions of Horn clause, facts,\ngoals and subgoals. 5\\. Unification and unification algorithm; unification vs\nassertion vs expression evaluation. 6\\. Mixing relations with functions. (See\nalso: MSF-Discrete) 7\\. Cuts, backtracking, and non-determinism. 8\\. Closed-\nworld vs open-world assumptions. Non-core: 9\\. Memory overhead of variable\ncopying in handling iterative programs. 10\\. Programming constructs to store\npartial computation and pruning search trees. 11\\. Mixing functional\nprogramming and logic programming using concepts such as equational logic,\nnarrowing, residuation, and semantic unification. (See also: FPL-Functional)\n12\\. Higher-order, constraint, and inductive logic programming. (See also: AI-\nLRR) 13\\. Integration with other programming paradigms such as object-oriented\nprogramming. 14\\. Advance programming constructs such as difference-lists,\ncreating user defined data structures, set of, etc. Illustrative learning\noutcomes: KA Core: 1\\. Use a logic language to implement a conventional\nalgorithm. 2\\. Use a logic language to implement an algorithm employing\nimplicit search using clauses, relations, and cuts. 3\\. Use a simple\nillustrative example to show correspondence between First Order Predicate\nLogic (FOPL) and logic programs using Horn clauses. 4\\. Use examples to\nillustrate the unification algorithm and its role of parameter-passing in\nquery reduction. 5\\. Use simple logic programs interleaving relations,\nfunctions, and recursive programming such as factorial and Fibonacci numbers\nand simple complex relationships between entities and illustrate execution and\nparameter-passing using unification and backtracking. Non-core: 6\\. Illustrate\ncomputation of simple programs such as Fibonacci and show overhead of\nrecomputation, and then show how to improve execution overhead.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/b367ff59ad4157a03ce83d9125f192256ba508cd2b951328235b2447d1c8fb6f> .
_:N2bb457e493e74494af9d92be1f142b67 <http://schema.org/explain> "Lecture focuses on data structures and Divide and Conquer algorithms, while KU covers logic programming concepts like unification, Horn clauses, and FOPL which are unrelated." <http://groq.org/b367ff59ad4157a03ce83d9125f192256ba508cd2b951328235b2447d1c8fb6f> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/has_schema_type> _:N2bb457e493e74494af9d92be1f142b67 <http://groq.org/b367ff59ad4157a03ce83d9125f192256ba508cd2b951328235b2447d1c8fb6f> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/b367ff59ad4157a03ce83d9125f192256ba508cd2b951328235b2447d1c8fb6f> .
_:N2bb457e493e74494af9d92be1f142b67 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/b367ff59ad4157a03ce83d9125f192256ba508cd2b951328235b2447d1c8fb6f> .
_:Nad068e73db0e4b28916ee741ca4498a7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/1ebc3c91950de8af7c5f7a7774e72c76a3b62607219bbb54b2e5361a9fec38ef> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU030" <http://groq.org/1ebc3c91950de8af7c5f7a7774e72c76a3b62607219bbb54b2e5361a9fec38ef> .
_:Nad068e73db0e4b28916ee741ca4498a7 <http://schema.org/explain> "The lecture covers 7 out of 8 learning outcomes and 4 out of 5 fundamental concepts, substantially covering the knowledge described in the KU." <http://groq.org/1ebc3c91950de8af7c5f7a7774e72c76a3b62607219bbb54b2e5361a9fec38ef> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU030</page1>\n        <page2>Pages: 150-151 HOURS CS Core = 3 KA Core = 2 GIT-Fundamentals: Fundamental\nConcepts CS Core: 1\\. Overview of graphics and visualization. 2\\. Basic\ngraphics pipeline architecture. 3\\. 2D and 3D transformations. 4\\.\nRasterization and rendering techniques. 5\\. Fundamental shading models. KA\nCore: 6\\. Advanced rendering techniques. 7\\. Applications of visualization in\ndifferent fields. 8\\. Interaction methods for graphical environments.\nIllustrative Learning Outcomes: 1\\. Explain the graphics rendering pipeline.\n2\\. Differentiate between rasterization and ray tracing. 3\\. Apply\ntransformations to 2D and 3D models.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/1ebc3c91950de8af7c5f7a7774e72c76a3b62607219bbb54b2e5361a9fec38ef> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/has_schema_type> _:Nad068e73db0e4b28916ee741ca4498a7 <http://groq.org/1ebc3c91950de8af7c5f7a7774e72c76a3b62607219bbb54b2e5361a9fec38ef> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/1ebc3c91950de8af7c5f7a7774e72c76a3b62607219bbb54b2e5361a9fec38ef> .
_:Nad068e73db0e4b28916ee741ca4498a7 <http://schema.org/answer> "1" <http://groq.org/1ebc3c91950de8af7c5f7a7774e72c76a3b62607219bbb54b2e5361a9fec38ef> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/559d7d9e957f6a092b8b82bff36eb368786394f1a130a747e006f0ac087e8042> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/has_schema_type> _:N59df50970ce94e18a8860ca750394fb2 <http://groq.org/559d7d9e957f6a092b8b82bff36eb368786394f1a130a747e006f0ac087e8042> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU010" <http://groq.org/559d7d9e957f6a092b8b82bff36eb368786394f1a130a747e006f0ac087e8042> .
_:N59df50970ce94e18a8860ca750394fb2 <http://schema.org/answer> "0" <http://groq.org/559d7d9e957f6a092b8b82bff36eb368786394f1a130a747e006f0ac087e8042> .
_:N59df50970ce94e18a8860ca750394fb2 <http://schema.org/explain> "Lecture focuses on teaching methods and professional integration, while KU covers formal methods in software engineering. No substantial overlap." <http://groq.org/559d7d9e957f6a092b8b82bff36eb368786394f1a130a747e006f0ac087e8042> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/559d7d9e957f6a092b8b82bff36eb368786394f1a130a747e006f0ac087e8042> .
_:N59df50970ce94e18a8860ca750394fb2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/559d7d9e957f6a092b8b82bff36eb368786394f1a130a747e006f0ac087e8042> .
_:Nafcd5ce7ef864c23837ba14493447278 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/d0d7cb7b4304a4244058c389d6b2074d3ae55852d9b243e93ec8ee0f53cb12f3> .
_:Nafcd5ce7ef864c23837ba14493447278 <http://schema.org/answer> "1" <http://groq.org/d0d7cb7b4304a4244058c389d6b2074d3ae55852d9b243e93ec8ee0f53cb12f3> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/has_schema_type> _:Nafcd5ce7ef864c23837ba14493447278 <http://groq.org/d0d7cb7b4304a4244058c389d6b2074d3ae55852d9b243e93ec8ee0f53cb12f3> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU020" <http://groq.org/d0d7cb7b4304a4244058c389d6b2074d3ae55852d9b243e93ec8ee0f53cb12f3> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Logique pour l'informatique Objectif: (résultats d'apprentissage)\nconsistance et complétude d'un système de preuves.\n4. Représenter une preuve de la déduction naturelle sous forme d'arbre d'inférence.\n5. Utiliser les algorithmes d'unification et de résolution pour le raisonnement automatique sur les\nformules logiques.\n1) Raisonnement algébrique booléen\n• Dualités des connecteurs logiques\n• Formes normales conjonctive et disjonctive\n2) Systèmes de preuves\n• Système d'inférence associé à une définition inductive\n• Preuve d'appartenance à un ensemble inductif par un arbre de preuves\n• Règles d'inférences de la déduction naturelle pour la logique propositionnelle\n• Distinguer logique classique et logique intuitionniste\n3) Donner du sens aux langages logique Course content: • Interprétation, modèle, satisfiabilité, validité\n• Correspondance avec le système de preuve: correction et complétude\n4) Calcul des prédicats\n• Manipulation des quantificateurs\n• Skolémisation, forme clausale\n• Théorie logique\n5) Raisonner automatiquement sur les formules logique\n• Algorithme d'unification\n• Algorithme de résolution Course name: http://example.org/course/UE_XLG3IU020</page1>\n        <page2>Pages:70-70 HOURS CS Core = 2 KA Core = 2 AI-KRR: Fundamental Knowledge\nRepresentation and Reasoning CS Core: 1\\. Types of representations a.\nSymbolic, logical i. Creating a representation from a natural language problem\nstatement b. Learned subsymbolic representations c. Graphical models (e.g.,\nnaive Bayes, Bayesian network) 2\\. Review of probabilistic reasoning, Bayes\ntheorem (See also: MSF-Probability) 3\\. Bayesian reasoning a. Bayesian\ninference KA Core: 4\\. Random variables and probability distributions a.\nAxioms of probability b. Probabilistic inference c. Bayes' Rule (derivation)\nd. Bayesian inference (more complex examples) 5\\. Independence 6\\. Conditional\nIndependence 7\\. Markov chains and Markov models 8\\. Utility and decision\nmaking Illustrative Learning Outcomes: 1\\. Given a natural language problem\nstatement, encode it as a symbolic or logical representation. 2\\. Explain how\nwe can make decisions under uncertainty, using concepts such as Bayes theorem\nand utility. 3\\. Compute a probabilistic inference in a real-world problem\nusing Bayes' theorem to determine the probability of a hypothesis given\nevidence. 4\\. Apply Bayes' rule to determine the probability of a hypothesis\ngiven evidence. 5\\. Compute the probability of outcomes and test whether\noutcomes are independent. 71 AI-ML: Machine Learning CS Core: 1\\. Definition\nand examples of a broad variety of machine learning tasks a. Supervised\nlearning i. Classification ii. Regression b. Reinforcement learning c.\nUnsupervised learning i. Clustering 2\\. Fundamental ideas: a. No free lunch\ntheorem: no one learner can solve all problems; representational design\ndecisions have consequences. b. Sources of error and undecidability</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/d0d7cb7b4304a4244058c389d6b2074d3ae55852d9b243e93ec8ee0f53cb12f3> .
_:Nafcd5ce7ef864c23837ba14493447278 <http://schema.org/explain> "The lecture covers topics in logic, proof systems, and reasoning, which align with the KU's focus on fundamental knowledge representation and reasoning in AI-KRR and CS Core." <http://groq.org/d0d7cb7b4304a4244058c389d6b2074d3ae55852d9b243e93ec8ee0f53cb12f3> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/d0d7cb7b4304a4244058c389d6b2074d3ae55852d9b243e93ec8ee0f53cb12f3> .
_:N2655aa90f26e4995bd03924bf783e249 <http://example.org/has_score> "0.62657344"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/f0be25aba150b9ef1b82e81ac1114de72057a58dd9effe2b3fb473e65afaae3a> .
_:N5af12cbb66f24b0faf64cd6ed658a80f <http://example.org/has_chunk> ". Data exploration and visual analytics; how to calculate effect size.\n6. Data management\na. Data storage and data sharing (open science)\nb. Sensitivity and identifiability.\nIllustrative Learning Outcomes:\nCS Core:\n1. Discuss the differences between formative and summative assessment and their role in evaluating\ndesign\nKA Core:\n2. Select appropriate formative or summative evaluation methods at different points throughout the\ndevelopment of a design.\n3" <http://faiss.org/f0be25aba150b9ef1b82e81ac1114de72057a58dd9effe2b3fb473e65afaae3a> .
_:Nc008dfeb359e470fa1ee15af36e6c4aa <http://example.org/has_chunk> ". Graph data (link traversal)\nc. Techniques for avoiding inefficient raw data access (e.g., “avg daily price”): materialized views\nand special data structures (e.g., Hyperloglog, bitmap)\nd. Geo-Spatial data (e.g., GIS databases) (See also: SPD-Interactive)\nIllustrative Learning Outcomes:\nCS Core:\n1. Describe the components of the relational data model.\n2. Model 1:1, 1:n, and n:m relationships using the relational data model.\nKA Core:\n3" <http://faiss.org/f0be25aba150b9ef1b82e81ac1114de72057a58dd9effe2b3fb473e65afaae3a> .
<http://example.org/faiss> <http://example.org/input> "Label: Analyse et Algebre lineaire 2 Objectif: (résultats d'apprentissage) • Course content: • Course name: http://example.org/course/UE_XLG3MU030" <http://faiss.org/f0be25aba150b9ef1b82e81ac1114de72057a58dd9effe2b3fb473e65afaae3a> .
_:N5af12cbb66f24b0faf64cd6ed658a80f <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Human_Computer_Interaction_HCI/HCI-Evaluation_Evaluating_the_Design.txt> <http://faiss.org/f0be25aba150b9ef1b82e81ac1114de72057a58dd9effe2b3fb473e65afaae3a> .
_:N5af12cbb66f24b0faf64cd6ed658a80f <http://example.org/has_score> "0.6248374"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/f0be25aba150b9ef1b82e81ac1114de72057a58dd9effe2b3fb473e65afaae3a> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/is_aligned_with> _:N2655aa90f26e4995bd03924bf783e249 <http://faiss.org/f0be25aba150b9ef1b82e81ac1114de72057a58dd9effe2b3fb473e65afaae3a> .
_:Nc008dfeb359e470fa1ee15af36e6c4aa <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Date_Management_DM/DM-Modeling_Data_Modeling.txt> <http://faiss.org/f0be25aba150b9ef1b82e81ac1114de72057a58dd9effe2b3fb473e65afaae3a> .
_:N2655aa90f26e4995bd03924bf783e249 <http://example.org/has_chunk> "Illustrative Learning Outcomes:\n1. Explain the graphics rendering pipeline.\n2. Differentiate between rasterization and ray tracing.\n3. Apply transformations to 2D and 3D models." <http://faiss.org/f0be25aba150b9ef1b82e81ac1114de72057a58dd9effe2b3fb473e65afaae3a> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/is_aligned_with> _:N5af12cbb66f24b0faf64cd6ed658a80f <http://faiss.org/f0be25aba150b9ef1b82e81ac1114de72057a58dd9effe2b3fb473e65afaae3a> .
_:Nc008dfeb359e470fa1ee15af36e6c4aa <http://example.org/has_score> "0.6361048"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/f0be25aba150b9ef1b82e81ac1114de72057a58dd9effe2b3fb473e65afaae3a> .
_:N2655aa90f26e4995bd03924bf783e249 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Graphics_and_Interactive_Techniques_GIT/GIT-Fundamentals.txt> <http://faiss.org/f0be25aba150b9ef1b82e81ac1114de72057a58dd9effe2b3fb473e65afaae3a> .
<http://example.org/course/UE_XLG3MU030> <http://example.org/is_aligned_with> _:Nc008dfeb359e470fa1ee15af36e6c4aa <http://faiss.org/f0be25aba150b9ef1b82e81ac1114de72057a58dd9effe2b3fb473e65afaae3a> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Programmation à Objets Objectif: (résultats d'apprentissage) Connaître les mécanismes d’héritage et de polymorphisme Course content: Classes abstraites Course name: http://example.org/course/UE_XLG3IU030</page1>\n        <page2>Pages: 131-132-133 HOURS CS Core = 4 KA Core = 3 FPL-Functional: Functional\nProgramming CS Core: 1\\. Lambda expressions and evaluation: (See also: AL-\nModels, FPL-Formalism) a. Variable binding and scope rules. (See also: SDF-\nFundamentals) b. Parameter-passing. (See also: SDF-Fundamentals) c. Nested\nlambda expressions and reduction order. 2\\. Effect-free programming: a.\nFunction calls have no side effects, facilitating compositional reasoning. b.\nImmutable variables and data copying vs reduction. c. Use of recursion vs\nloops vs pipelining (map/reduce). 3\\. Processing structured data (e.g., trees)\nvia functions with cases for each data variant: a. Functions defined over\ncompound data in terms of functions applied to the constituent pieces. b.\nPersistent data structures. 4\\. Using higher-order functions (taking,\nreturning, and storing functions). KA Core: 5\\. Metaprogramming and\nreflection. 6\\. Function closures (functions using variables in the enclosing\nlexical environment). a. Basic meaning and definition - creating closures at\nrun-time by capturing the environment. b. Canonical idioms: call-backs,\narguments to iterators, reusable code via function arguments. c. Using a\nclosure to encapsulate data in its environment. d. Delayed versus eager\nevaluation. Non-core: 7\\. Graph reduction machine and call-by-need. 8\\.\nImplementing delayed evaluation. 9\\. Integration with logic programming\nparadigm using concepts such as equational logic, narrowing, residuation and\nsemantic unification. (See also: FPL-Logic) 10\\. Integration with other\nprogramming paradigms such as imperative and object-oriented. Illustrative\nlearning outcomes: CS Core: 1\\. Develop basic algorithms that avoid assigning\nto mutable states or considering reference equality. 2\\. Develop useful\nfunctions that take and return other functions. 3\\. Compare and contrast how\ncomputational solutions to a problem differ in procedural, functional, and\nobject-oriented approaches. 4\\. Compare and contrast mechanisms to define and\nprotect data elements within procedural, functional, and object-oriented\napproaches. KA Core: 5\\. Explain a simple example of lambda expression being\nimplemented using a virtual machine, such as a SECD machine, showing storage\nand reclaim of the environment. 6\\. Correctly interpret variables and lexical\nscope in a program using function closures. 7\\. Use functional encapsulation\nmechanisms such as closures and modular interfaces. 8\\. Compare and contrast\nstateful vs stateless execution. 9\\. Define and use iterators and other\noperations on aggregates, including operations that take functions as\narguments, in multiple programming languages, selecting the most natural\nidioms for each language. (See also: FPL-OOP) Non-core: 10\\. Illustrate graph\nreduction using a l-expression using a shared subexpression. 11\\. Illustrate\nthe execution of a simple nested l-expression using an abstract machine, such\nas an ABC machine. 12\\. Illustrate narrowing, residuation, and semantic\nunification using simple illustrative examples. 13\\. Illustrate the\nconcurrency constructs using simple programming examples of known concepts\nsuch as a buffer being read and written concurrently or sequentially. (See\nalso: FPL-OOP)</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/c78c4e52e9887b5307572fad631173aed447cf498b89ab30d8a9ba8450628a67> .
_:N3e6a27583e4f4044a4007e2984715ff5 <http://schema.org/explain> "The lecture focuses on object-oriented programming concepts, while the KU covers functional programming topics." <http://groq.org/c78c4e52e9887b5307572fad631173aed447cf498b89ab30d8a9ba8450628a67> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU030" <http://groq.org/c78c4e52e9887b5307572fad631173aed447cf498b89ab30d8a9ba8450628a67> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/c78c4e52e9887b5307572fad631173aed447cf498b89ab30d8a9ba8450628a67> .
_:N3e6a27583e4f4044a4007e2984715ff5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/c78c4e52e9887b5307572fad631173aed447cf498b89ab30d8a9ba8450628a67> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/has_schema_type> _:N3e6a27583e4f4044a4007e2984715ff5 <http://groq.org/c78c4e52e9887b5307572fad631173aed447cf498b89ab30d8a9ba8450628a67> .
_:N3e6a27583e4f4044a4007e2984715ff5 <http://schema.org/answer> "0" <http://groq.org/c78c4e52e9887b5307572fad631173aed447cf498b89ab30d8a9ba8450628a67> .
_:Ncaedb0025afc4629a19fff35b75b8a86 <http://schema.org/answer> "1" <http://groq.org/bc7be6e2f38653a5b28564ec1ab7effeab41b220db58803404a18da62e28871b> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU030" <http://groq.org/bc7be6e2f38653a5b28564ec1ab7effeab41b220db58803404a18da62e28871b> .
_:Ncaedb0025afc4629a19fff35b75b8a86 <http://schema.org/explain> "The lecture covers the overview of development platforms, programming via platform-specific API, platform languages, and programming under platform constraints, which aligns with the KU's content." <http://groq.org/bc7be6e2f38653a5b28564ec1ab7effeab41b220db58803404a18da62e28871b> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/has_schema_type> _:Ncaedb0025afc4629a19fff35b75b8a86 <http://groq.org/bc7be6e2f38653a5b28564ec1ab7effeab41b220db58803404a18da62e28871b> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU030</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/bc7be6e2f38653a5b28564ec1ab7effeab41b220db58803404a18da62e28871b> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/bc7be6e2f38653a5b28564ec1ab7effeab41b220db58803404a18da62e28871b> .
_:Ncaedb0025afc4629a19fff35b75b8a86 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/bc7be6e2f38653a5b28564ec1ab7effeab41b220db58803404a18da62e28871b> .
_:Nc082177a88bf41c5acf1d4bf51a5edc4 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Probability_Probability.txt> <http://faiss.org/4ac8c56b6845acbf4df519b5bbc8e592c76889343a79008f6560047a14100378> .
_:Na28da2e439254ad1af3361d965acc36e <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Probability_Probability.txt> <http://faiss.org/4ac8c56b6845acbf4df519b5bbc8e592c76889343a79008f6560047a14100378> .
_:N62dce15e3b774d0bbae94da6581be632 <http://example.org/has_chunk> ".\nc. Identify common discrete distributions (e.g., uniform, Bernoulli, binomial, geometric).\n3. Continuous random variables and distributions\na. Identify common continuous distributions (e.g., uniform, normal, exponential).\nb. Calculate probabilities using cumulative density functions.\n4. Expectation, variance, law of large numbers, central limit theorem\na. Define the concept of expectation and variance of a random variable.\nb" <http://faiss.org/4ac8c56b6845acbf4df519b5bbc8e592c76889343a79008f6560047a14100378> .
<http://example.org/faiss> <http://example.org/input> "Label: Probabilites discretes Objectif: (résultats d'apprentissage) • Course content: - Couple de variables aléatoires discrètes (conditionnement, indépendance, corrélation).\n- Lois uniforme, Bernoulli, binomiale et hypergéométrique.\n• Course name: http://example.org/course/UE_XLG3MU040" <http://faiss.org/4ac8c56b6845acbf4df519b5bbc8e592c76889343a79008f6560047a14100378> .
_:Nc082177a88bf41c5acf1d4bf51a5edc4 <http://example.org/has_score> "0.7497195"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/4ac8c56b6845acbf4df519b5bbc8e592c76889343a79008f6560047a14100378> .
<http://example.org/course/UE_XLG3MU040> <http://example.org/is_aligned_with> _:Na28da2e439254ad1af3361d965acc36e <http://faiss.org/4ac8c56b6845acbf4df519b5bbc8e592c76889343a79008f6560047a14100378> .
_:N62dce15e3b774d0bbae94da6581be632 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Probability_Probability.txt> <http://faiss.org/4ac8c56b6845acbf4df519b5bbc8e592c76889343a79008f6560047a14100378> .
_:Nc082177a88bf41c5acf1d4bf51a5edc4 <http://example.org/has_chunk> ". Translate a prose description of a probabilistic process into a formal setting of sample spaces,\noutcome probabilities, and events.\nb. Calculate the probability of simple events.\nc. Determine whether two events are independent.\nd. Compute conditional probabilities, including through applying (and explaining) Bayes' Rule.\n2. Discrete random variables and distributions\na. Define the concept of a random variable and indicator random variable.\nb. Determine whether two random variables are independent.\nc" <http://faiss.org/4ac8c56b6845acbf4df519b5bbc8e592c76889343a79008f6560047a14100378> .
_:Na28da2e439254ad1af3361d965acc36e <http://example.org/has_score> "0.7301263"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/4ac8c56b6845acbf4df519b5bbc8e592c76889343a79008f6560047a14100378> .
<http://example.org/course/UE_XLG3MU040> <http://example.org/is_aligned_with> _:N62dce15e3b774d0bbae94da6581be632 <http://faiss.org/4ac8c56b6845acbf4df519b5bbc8e592c76889343a79008f6560047a14100378> .
<http://example.org/course/UE_XLG3MU040> <http://example.org/is_aligned_with> _:Nc082177a88bf41c5acf1d4bf51a5edc4 <http://faiss.org/4ac8c56b6845acbf4df519b5bbc8e592c76889343a79008f6560047a14100378> .
_:N62dce15e3b774d0bbae94da6581be632 <http://example.org/has_score> "0.7405294"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/4ac8c56b6845acbf4df519b5bbc8e592c76889343a79008f6560047a14100378> .
_:Na28da2e439254ad1af3361d965acc36e <http://example.org/has_chunk> "MSF-Probability: Probability\nCS Core:\n1. Basic notions: sample spaces, events, probability, conditional probability, Bayes’ rule\n2. Discrete random variables and distributions\n3. Continuous random variables and distributions\n4. Expectation, variance, law of large numbers, central limit theorem\n5. Conditional distributions and expectation\n6" <http://faiss.org/4ac8c56b6845acbf4df519b5bbc8e592c76889343a79008f6560047a14100378> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Systèmes d'exploitation Objectif: (résultats d'apprentissage)\nsynchronisation/communication (Application)\n• Etre capable d'utiliser les mécanismes de synchronisation usuels sous Linux (sémaphores,\nmutexes, signaux) (Application)\n• Comprendre le principe de mémoire virtuelle (Initiation)\n• Savoir gérer les entrées/sorties sous Linux (Initiation) Course content: par le système d'exploitation y sont exposées : comment les processus se partagent-ils l'accès au\nprocesseur ? Comment se synchronisent-ils et quels mécanismes leur permettent d'échanger des\ndonnées ? Comment sont gérés la mémoire et les entrées/sorties ? Course name: http://example.org/course/UE_XLG4IU030</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD PDC-Synchronization and\nConcurrency: Core Concepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder\ntopic 2 3\\. Placeholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\.\nPlaceholder advanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key\nconcepts of PDC-Synchronization and Concurrency. 2\\. Apply principles in\npractical scenarios. 3\\. Analyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/5ae2dbf1ab6e4f850719acd2fb7d6661bb4f3dabd2948ea7d45dc5d36fd7c653> .
_:N5ca84cb9fc34475e9a407842c0c051dd <http://schema.org/answer> "1" <http://groq.org/5ae2dbf1ab6e4f850719acd2fb7d6661bb4f3dabd2948ea7d45dc5d36fd7c653> .
_:N5ca84cb9fc34475e9a407842c0c051dd <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/5ae2dbf1ab6e4f850719acd2fb7d6661bb4f3dabd2948ea7d45dc5d36fd7c653> .
_:N5ca84cb9fc34475e9a407842c0c051dd <http://schema.org/explain> "The lecture covers key concepts of PDC-Synchronization and Concurrency, such as synchronization mechanisms, memory management, and I/O management, which align with the KU's core concepts." <http://groq.org/5ae2dbf1ab6e4f850719acd2fb7d6661bb4f3dabd2948ea7d45dc5d36fd7c653> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/has_schema_type> _:N5ca84cb9fc34475e9a407842c0c051dd <http://groq.org/5ae2dbf1ab6e4f850719acd2fb7d6661bb4f3dabd2948ea7d45dc5d36fd7c653> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/5ae2dbf1ab6e4f850719acd2fb7d6661bb4f3dabd2948ea7d45dc5d36fd7c653> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU030" <http://groq.org/5ae2dbf1ab6e4f850719acd2fb7d6661bb4f3dabd2948ea7d45dc5d36fd7c653> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3AU010</page1>\n        <page2>Pages:79-80 HOURS CS Core = 0 KA Core = 0 AI-NLP: Natural Language Processing\nNon-core: 1\\. Deterministic and stochastic grammars 2\\. Parsing algorithms a.\nCFGs and chart parsers (e.g., CYK) b. Probabilistic CFGs and weighted CYK 3\\.\nRepresenting meaning/Semantics a. Logic-based knowledge representations b.\nSemantic roles c. Temporal representations d. Beliefs, desires, and intentions\n4\\. Corpus-based methods 5\\. N-grams and HMMs 6\\. Smoothing and backoff 7\\.\nExamples of use: POS tagging and morphology 8\\. Information retrieval (See\nalso: DM-Unstructured) a. Vector space model i. TF & IDF b. Precision and\nrecall 9\\. Information extraction 10\\. Language translation 11\\. Text\nclassification, categorization a. Bag of words model 12\\. Deep learning for\nNLP (See also: AI-ML) a. RNNs b. Transformers c. Multi-modal embeddings (e.g.,\nimages + text) d. Generative language models Illustrative Learning Outcomes:\n1\\. Define and contrast deterministic and stochastic grammars, providing\nexamples to show the adequacy of each. 2\\. Simulate, apply, or implement\nclassic and stochastic algorithms for parsing natural language. 3\\. Identify\nthe challenges of representing meaning. 4\\. List the advantages of using\nstandard corpora. Identify examples of current corpora for a variety of NLP\ntasks. 5\\. Identify techniques for information retrieval, language\ntranslation, and text classification. 6\\. Implement a TF/IDF transform, use it\nto extract features from a corpus, and train an off-the-shelf machine learning\nalgorithm using those features to do text classification.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/d9e26e2fc44cee27be43c2f42c8f365fd7784683548b1b8c9a74392fea232356> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/d9e26e2fc44cee27be43c2f42c8f365fd7784683548b1b8c9a74392fea232356> .
_:N810be4013b454e53b9a60ac72e29d5e5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/d9e26e2fc44cee27be43c2f42c8f365fd7784683548b1b8c9a74392fea232356> .
_:N810be4013b454e53b9a60ac72e29d5e5 <http://schema.org/explain> "The lecture does not cover the technical NLP topics outlined in the KU." <http://groq.org/d9e26e2fc44cee27be43c2f42c8f365fd7784683548b1b8c9a74392fea232356> .
_:N810be4013b454e53b9a60ac72e29d5e5 <http://schema.org/answer> "0" <http://groq.org/d9e26e2fc44cee27be43c2f42c8f365fd7784683548b1b8c9a74392fea232356> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3AU010" <http://groq.org/d9e26e2fc44cee27be43c2f42c8f365fd7784683548b1b8c9a74392fea232356> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/has_schema_type> _:N810be4013b454e53b9a60ac72e29d5e5 <http://groq.org/d9e26e2fc44cee27be43c2f42c8f365fd7784683548b1b8c9a74392fea232356> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/5512b349656c91ba1ae541c86c9c448034a90dca8a712b7816113439977a0073> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU030" <http://groq.org/5512b349656c91ba1ae541c86c9c448034a90dca8a712b7816113439977a0073> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/has_schema_type> _:Na3643d249fc246048c0dd7a2fae477c0 <http://groq.org/5512b349656c91ba1ae541c86c9c448034a90dca8a712b7816113439977a0073> .
_:Na3643d249fc246048c0dd7a2fae477c0 <http://schema.org/answer> "0" <http://groq.org/5512b349656c91ba1ae541c86c9c448034a90dca8a712b7816113439977a0073> .
_:Na3643d249fc246048c0dd7a2fae477c0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/5512b349656c91ba1ae541c86c9c448034a90dca8a712b7816113439977a0073> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU030</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/5512b349656c91ba1ae541c86c9c448034a90dca8a712b7816113439977a0073> .
_:Na3643d249fc246048c0dd7a2fae477c0 <http://schema.org/explain> "The lecture does not provide sufficient detail to confirm substantial coverage of the Knowledge Unit." <http://groq.org/5512b349656c91ba1ae541c86c9c448034a90dca8a712b7816113439977a0073> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Systèmes d'exploitation Objectif: (résultats d'apprentissage)\nsynchronisation/communication (Application)\n• Etre capable d'utiliser les mécanismes de synchronisation usuels sous Linux (sémaphores,\nmutexes, signaux) (Application)\n• Comprendre le principe de mémoire virtuelle (Initiation)\n• Savoir gérer les entrées/sorties sous Linux (Initiation) Course content: par le système d'exploitation y sont exposées : comment les processus se partagent-ils l'accès au\nprocesseur ? Comment se synchronisent-ils et quels mécanismes leur permettent d'échanger des\ndonnées ? Comment sont gérés la mémoire et les entrées/sorties ? Course name: http://example.org/course/UE_XLG4IU030</page1>\n        <page2>Pages: 133-134 HOURS CS Core = 2 KA Core = 0 FPL-Scripting: Shell Scripting CS\nCore: 1\\. Error/exception handling 2\\. Piping (See also: AR-Organization, SF-\nOverview, OS-Process) 3\\. System commands (See also: SF-Overview) a. Interface\nwith operating systems (See also: SF-Overview, OS-Principles) 4\\. Environment\nvariables (See also: SF-Overview) 5\\. File abstraction and operators (See\nalso: SDF-Fundamentals, OS-Files, SF-Resource) 6\\. Data structures, such as\narrays and lists. (See also: AL-Foundational, SDF-Fundamentals, SDFData-\nStructures) 7\\. Regular expressions (See also: AL-Models) 8\\. Programs and\nprocesses (See also: OS-Process) 9\\. Workflow Illustrative learning outcomes:\nCS Core: 1\\. Create and execute automated scripts to manage various system\ntasks. 2\\. Solve various text processing problems through scripting.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/21c7b00b1e6fc1516d9f1349aa5f34ae88c8d10ca34d71597adc13c706f7745c> .
_:N864cf73ee3a145a5a7d25af3438166d1 <http://schema.org/explain> "The lecture covers topics such as process synchronization, memory management, and file abstraction, which are also mentioned in the KU." <http://groq.org/21c7b00b1e6fc1516d9f1349aa5f34ae88c8d10ca34d71597adc13c706f7745c> .
_:N864cf73ee3a145a5a7d25af3438166d1 <http://schema.org/answer> "1" <http://groq.org/21c7b00b1e6fc1516d9f1349aa5f34ae88c8d10ca34d71597adc13c706f7745c> .
_:N864cf73ee3a145a5a7d25af3438166d1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/21c7b00b1e6fc1516d9f1349aa5f34ae88c8d10ca34d71597adc13c706f7745c> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/has_schema_type> _:N864cf73ee3a145a5a7d25af3438166d1 <http://groq.org/21c7b00b1e6fc1516d9f1349aa5f34ae88c8d10ca34d71597adc13c706f7745c> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/21c7b00b1e6fc1516d9f1349aa5f34ae88c8d10ca34d71597adc13c706f7745c> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU030" <http://groq.org/21c7b00b1e6fc1516d9f1349aa5f34ae88c8d10ca34d71597adc13c706f7745c> .
_:Nf58266b34ced40a28db6809762435a6e <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/593867ddd8cd1d4de7ae18bfad23c3c8cee9997d7aefcd23d514dd4a646655b6> .
_:Nf58266b34ced40a28db6809762435a6e <http://schema.org/explain> "The lecture covers the transition to an ecological approach, which aligns with the core concepts of SE-Maintenance and Evolution, and the illustrative learning outcomes." <http://groq.org/593867ddd8cd1d4de7ae18bfad23c3c8cee9997d7aefcd23d514dd4a646655b6> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/has_schema_type> _:Nf58266b34ced40a28db6809762435a6e <http://groq.org/593867ddd8cd1d4de7ae18bfad23c3c8cee9997d7aefcd23d514dd4a646655b6> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Enjeux de la transition écologique Objectif: (résultats d'apprentissage) Course content: Programme des 9 séances en ligne (d’environ 1h30 de travail chacune) : Course name: http://example.org/course/UE_XLG3TU020</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Maintenance and Evolution:\nCore Concepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nSE-Maintenance and Evolution. 2\\. Apply principles in practical scenarios. 3\\.\nAnalyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/593867ddd8cd1d4de7ae18bfad23c3c8cee9997d7aefcd23d514dd4a646655b6> .
_:Nf58266b34ced40a28db6809762435a6e <http://schema.org/answer> "1" <http://groq.org/593867ddd8cd1d4de7ae18bfad23c3c8cee9997d7aefcd23d514dd4a646655b6> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU020" <http://groq.org/593867ddd8cd1d4de7ae18bfad23c3c8cee9997d7aefcd23d514dd4a646655b6> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/593867ddd8cd1d4de7ae18bfad23c3c8cee9997d7aefcd23d514dd4a646655b6> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU020" <http://groq.org/e683d1b0fee3231e19bef5679c2bfeb2cb8aa4a84caf51dbda23c45b9820ad50> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Unité Enseignement de Découverte Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU020</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD GIT-3D Modeling: Core Concepts CS\nCore: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic 3\nKA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of GIT-3D Modeling.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/e683d1b0fee3231e19bef5679c2bfeb2cb8aa4a84caf51dbda23c45b9820ad50> .
_:N247ed16780ef4cada53584b81eed7666 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/e683d1b0fee3231e19bef5679c2bfeb2cb8aa4a84caf51dbda23c45b9820ad50> .
_:N247ed16780ef4cada53584b81eed7666 <http://schema.org/explain> "The lecture covers a significant portion of the KU's core concepts and advanced topics, with a focus on practical applications and analysis." <http://groq.org/e683d1b0fee3231e19bef5679c2bfeb2cb8aa4a84caf51dbda23c45b9820ad50> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/e683d1b0fee3231e19bef5679c2bfeb2cb8aa4a84caf51dbda23c45b9820ad50> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/has_schema_type> _:N247ed16780ef4cada53584b81eed7666 <http://groq.org/e683d1b0fee3231e19bef5679c2bfeb2cb8aa4a84caf51dbda23c45b9820ad50> .
_:N247ed16780ef4cada53584b81eed7666 <http://schema.org/answer> "1" <http://groq.org/e683d1b0fee3231e19bef5679c2bfeb2cb8aa4a84caf51dbda23c45b9820ad50> .
_:N88826ab0d6e5497aa37e42b6e5659e60 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/4b890a7f284487262a09d803305495c6aafa175248108ea0a66e3c8105cd3b80> .
_:N88826ab0d6e5497aa37e42b6e5659e60 <http://schema.org/explain> "The lecture covers the core concepts of SE-Formal Methods, including placeholder topics 1, 2, and 3, which align with the illustrative learning outcomes." <http://groq.org/4b890a7f284487262a09d803305495c6aafa175248108ea0a66e3c8105cd3b80> .
_:N88826ab0d6e5497aa37e42b6e5659e60 <http://schema.org/answer> "1" <http://groq.org/4b890a7f284487262a09d803305495c6aafa175248108ea0a66e3c8105cd3b80> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/has_schema_type> _:N88826ab0d6e5497aa37e42b6e5659e60 <http://groq.org/4b890a7f284487262a09d803305495c6aafa175248108ea0a66e3c8105cd3b80> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Enjeux de la transition écologique Objectif: (résultats d'apprentissage) Course content: Programme des 9 séances en ligne (d’environ 1h30 de travail chacune) : Course name: http://example.org/course/UE_XLG3TU020</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/4b890a7f284487262a09d803305495c6aafa175248108ea0a66e3c8105cd3b80> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU020" <http://groq.org/4b890a7f284487262a09d803305495c6aafa175248108ea0a66e3c8105cd3b80> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/4b890a7f284487262a09d803305495c6aafa175248108ea0a66e3c8105cd3b80> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S4 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4AU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/256fdc79ca087d1ba9b0d213aa96ac0fbb4b61f2fb2c6b201be9cedefea27f6d> .
_:Nb6f13ead36c348a59d06c69c8586f0ee <http://schema.org/explain> "The lecture covers key concepts of SE-Formal Methods, applying principles in practical scenarios, and analyzing the importance of this topic in computing, which aligns with the KU's learning outcomes." <http://groq.org/256fdc79ca087d1ba9b0d213aa96ac0fbb4b61f2fb2c6b201be9cedefea27f6d> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/has_schema_type> _:Nb6f13ead36c348a59d06c69c8586f0ee <http://groq.org/256fdc79ca087d1ba9b0d213aa96ac0fbb4b61f2fb2c6b201be9cedefea27f6d> .
_:Nb6f13ead36c348a59d06c69c8586f0ee <http://schema.org/answer> "1" <http://groq.org/256fdc79ca087d1ba9b0d213aa96ac0fbb4b61f2fb2c6b201be9cedefea27f6d> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4AU010" <http://groq.org/256fdc79ca087d1ba9b0d213aa96ac0fbb4b61f2fb2c6b201be9cedefea27f6d> .
_:Nb6f13ead36c348a59d06c69c8586f0ee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/256fdc79ca087d1ba9b0d213aa96ac0fbb4b61f2fb2c6b201be9cedefea27f6d> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/256fdc79ca087d1ba9b0d213aa96ac0fbb4b61f2fb2c6b201be9cedefea27f6d> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Programmation à Objets Objectif: (résultats d'apprentissage) Connaître les mécanismes d’héritage et de polymorphisme Course content: Classes abstraites Course name: http://example.org/course/UE_XLG3IU030</page1>\n        <page2>Pages: 131-132-133 HOURS CS Core = 4 KA Core = 3 FPL-Functional: Functional\nProgramming CS Core: 1\\. Lambda expressions and evaluation: (See also: AL-\nModels, FPL-Formalism) a. Variable binding and scope rules. (See also: SDF-\nFundamentals) b. Parameter-passing. (See also: SDF-Fundamentals) c. Nested\nlambda expressions and reduction order. 2\\. Effect-free programming: a.\nFunction calls have no side effects, facilitating compositional reasoning. b.\nImmutable variables and data copying vs reduction. c. Use of recursion vs\nloops vs pipelining (map/reduce). 3\\. Processing structured data (e.g., trees)\nvia functions with cases for each data variant: a. Functions defined over\ncompound data in terms of functions applied to the constituent pieces. b.\nPersistent data structures. 4\\. Using higher-order functions (taking,\nreturning, and storing functions). KA Core: 5\\. Metaprogramming and\nreflection. 6\\. Function closures (functions using variables in the enclosing\nlexical environment). a. Basic meaning and definition - creating closures at\nrun-time by capturing the environment. b. Canonical idioms: call-backs,\narguments to iterators, reusable code via function arguments. c. Using a\nclosure to encapsulate data in its environment. d. Delayed versus eager\nevaluation. Non-core: 7\\. Graph reduction machine and call-by-need. 8\\.\nImplementing delayed evaluation. 9\\. Integration with logic programming\nparadigm using concepts such as equational logic, narrowing, residuation and\nsemantic unification. (See also: FPL-Logic) 10\\. Integration with other\nprogramming paradigms such as imperative and object-oriented. Illustrative\nlearning outcomes: CS Core: 1\\. Develop basic algorithms that avoid assigning\nto mutable states or considering reference equality. 2\\. Develop useful\nfunctions that take and return other functions. 3\\. Compare and contrast how\ncomputational solutions to a problem differ in procedural, functional, and\nobject-oriented approaches. 4\\. Compare and contrast mechanisms to define and\nprotect data elements within procedural, functional, and object-oriented\napproaches. KA Core: 5\\. Explain a simple example of lambda expression being\nimplemented using a virtual machine, such as a SECD machine, showing storage\nand reclaim of the environment. 6\\. Correctly interpret variables and lexical\nscope in a program using function closures. 7\\. Use functional encapsulation\nmechanisms such as closures and modular interfaces. 8\\. Compare and contrast\nstateful vs stateless execution. 9\\. Define and use iterators and other\noperations on aggregates, including operations that take functions as\narguments, in multiple programming languages, selecting the most natural\nidioms for each language. (See also: FPL-OOP) Non-core: 10\\. Illustrate graph\nreduction using a l-expression using a shared subexpression. 11\\. Illustrate\nthe execution of a simple nested l-expression using an abstract machine, such\nas an ABC machine. 12\\. Illustrate narrowing, residuation, and semantic\nunification using simple illustrative examples. 13\\. Illustrate the\nconcurrency constructs using simple programming examples of known concepts\nsuch as a buffer being read and written concurrently or sequentially. (See\nalso: FPL-OOP)</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/81a10d70e39c6e55b5c6cab6b9fee04215825365c162e41187fde95dd6504a83> .
_:Ndad83dbdefb548628a622f32fcb5852e <http://schema.org/answer> "1" <http://groq.org/81a10d70e39c6e55b5c6cab6b9fee04215825365c162e41187fde95dd6504a83> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU030" <http://groq.org/81a10d70e39c6e55b5c6cab6b9fee04215825365c162e41187fde95dd6504a83> .
_:Ndad83dbdefb548628a622f32fcb5852e <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/81a10d70e39c6e55b5c6cab6b9fee04215825365c162e41187fde95dd6504a83> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/has_schema_type> _:Ndad83dbdefb548628a622f32fcb5852e <http://groq.org/81a10d70e39c6e55b5c6cab6b9fee04215825365c162e41187fde95dd6504a83> .
_:Ndad83dbdefb548628a622f32fcb5852e <http://schema.org/explain> "The lecture covers a significant portion of the KU, including topics such as lambda expressions, effect-free programming, and higher-order functions, which are all core components of the KU." <http://groq.org/81a10d70e39c6e55b5c6cab6b9fee04215825365c162e41187fde95dd6504a83> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/81a10d70e39c6e55b5c6cab6b9fee04215825365c162e41187fde95dd6504a83> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/86870a93aa3b9b7f244cd1238496e2603b1dab3a1eedabdc7f5cc9dd85447b04> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/86870a93aa3b9b7f244cd1238496e2603b1dab3a1eedabdc7f5cc9dd85447b04> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU010" <http://groq.org/86870a93aa3b9b7f244cd1238496e2603b1dab3a1eedabdc7f5cc9dd85447b04> .
_:N4edc34cd73a440e297bf24b22aa36f92 <http://schema.org/explain> "The lecture focuses on teaching methodologies and professional integration, not the specific technical content of formal methods in software engineering." <http://groq.org/86870a93aa3b9b7f244cd1238496e2603b1dab3a1eedabdc7f5cc9dd85447b04> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/has_schema_type> _:N4edc34cd73a440e297bf24b22aa36f92 <http://groq.org/86870a93aa3b9b7f244cd1238496e2603b1dab3a1eedabdc7f5cc9dd85447b04> .
_:N4edc34cd73a440e297bf24b22aa36f92 <http://schema.org/answer> "0" <http://groq.org/86870a93aa3b9b7f244cd1238496e2603b1dab3a1eedabdc7f5cc9dd85447b04> .
_:N4edc34cd73a440e297bf24b22aa36f92 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/86870a93aa3b9b7f244cd1238496e2603b1dab3a1eedabdc7f5cc9dd85447b04> .
_:N235f0c2a48554ed4b2e6c0df280cc21b <http://schema.org/explain> "Lecture focuses on discrete variables and specific distributions but lacks coverage of continuous variables, expectation/CLT, and core applications." <http://groq.org/f0a7b6ffd454e60aec9ffca39ba1820b0ac3d820921b843cc021be214816fc8f> .
<http://example.org/course/UE_XLG3MU040> <http://example.org/has_schema_type> _:N235f0c2a48554ed4b2e6c0df280cc21b <http://groq.org/f0a7b6ffd454e60aec9ffca39ba1820b0ac3d820921b843cc021be214816fc8f> .
_:N235f0c2a48554ed4b2e6c0df280cc21b <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/f0a7b6ffd454e60aec9ffca39ba1820b0ac3d820921b843cc021be214816fc8f> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Probabilites discretes Objectif: (résultats d'apprentissage) • Course content: - Couple de variables aléatoires discrètes (conditionnement, indépendance, corrélation).\n- Lois uniforme, Bernoulli, binomiale et hypergéométrique.\n• Course name: http://example.org/course/UE_XLG3MU040</page1>\n        <page2>Pages: 188-189 HOURS CS Core = 11 KA Core = 29 MSF-Probability: Probability CS\nCore: 1\\. Basic notions: sample spaces, events, probability, conditional\nprobability, Bayes' rule 2\\. Discrete random variables and distributions 3\\.\nContinuous random variables and distributions 4\\. Expectation, variance, law\nof large numbers, central limit theorem 5\\. Conditional distributions and\nexpectation 6\\. Applications to computing, the difference between probability\nand statistics (as subjects) KA Core: The recommended topics are the same\nbetween CS core and KA-core, but with far more hours, the KA-core can cover\nthese topics in depth and might include more computing-related applications.\nIllustrative Learning Outcomes: CS Core: 1\\. Basic notions: sample spaces,\nevents, probability, conditional probability, Bayes' rule a. Translate a prose\ndescription of a probabilistic process into a formal setting of sample spaces,\noutcome probabilities, and events. b. Calculate the probability of simple\nevents. c. Determine whether two events are independent. d. Compute\nconditional probabilities, including through applying (and explaining) Bayes'\nRule. 2\\. Discrete random variables and distributions a. Define the concept of\na random variable and indicator random variable. b. Determine whether two\nrandom variables are independent. c. Identify common discrete distributions\n(e.g., uniform, Bernoulli, binomial, geometric). 3\\. Continuous random\nvariables and distributions a. Identify common continuous distributions (e.g.,\nuniform, normal, exponential). b. Calculate probabilities using cumulative\ndensity functions. 4\\. Expectation, variance, law of large numbers, central\nlimit theorem a. Define the concept of expectation and variance of a random\nvariable. b. Compute the expected value and variance of simple or common\ndiscrete/continuous random variables. c. Explain the relevance of the law of\nlarge numbers and central limit theorem to probability calculations. 5\\.\nConditional distributions and expectation a. Explain the distinction between\njoint, marginal, and conditional distributions. b. Compute marginal and\nconditional distributions from a full distribution, for both discrete and\ncontinuous random variables. c. Compute conditional expectations for both\ndiscrete and continuous random variables. 6\\. Applications to computing a.\nDescribe how probability can be used to model real-life situations or\napplications, such as predictive text, hash tables, and quantum computation.\nb. Apply probabilistic processes to solving computational problems, such as\nthrough randomized algorithms or in security contexts.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/f0a7b6ffd454e60aec9ffca39ba1820b0ac3d820921b843cc021be214816fc8f> .
_:N235f0c2a48554ed4b2e6c0df280cc21b <http://schema.org/answer> "0" <http://groq.org/f0a7b6ffd454e60aec9ffca39ba1820b0ac3d820921b843cc021be214816fc8f> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/f0a7b6ffd454e60aec9ffca39ba1820b0ac3d820921b843cc021be214816fc8f> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3MU040" <http://groq.org/f0a7b6ffd454e60aec9ffca39ba1820b0ac3d820921b843cc021be214816fc8f> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/has_schema_type> _:Nded05a56cb9e4863b2ccab6aa209dd38 <http://groq.org/cc6c248ffa5144eec2ff0ed6cded71511c7d7f301ae86fd7632fcaa5e222de29> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU010" <http://groq.org/cc6c248ffa5144eec2ff0ed6cded71511c7d7f301ae86fd7632fcaa5e222de29> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 2 Objectif: (résultats d'apprentissage)\ndonnées (itératifs et récursifs) Course content: Structures de données non-linéaires associatives (table associative, ensemble, classe-union) Course name: http://example.org/course/UE_XLG4IU010</page1>\n        <page2>Pages: 133 HOURS CS Core = 0 KA Core = 2 + 1 (MSF) FPL-Logic: Logic\nProgramming KA Core: 1\\. Universal vs existential quantifiers. (See also: AI-\nLRR, MSF-Discrete) 2\\. First order predicate logic vs higher order logic. (See\nalso: AI-LRR, MSF-Discrete) 3\\. Expressing complex relations using logical\nconnectives and simpler relations. 4\\. Definitions of Horn clause, facts,\ngoals and subgoals. 5\\. Unification and unification algorithm; unification vs\nassertion vs expression evaluation. 6\\. Mixing relations with functions. (See\nalso: MSF-Discrete) 7\\. Cuts, backtracking, and non-determinism. 8\\. Closed-\nworld vs open-world assumptions. Non-core: 9\\. Memory overhead of variable\ncopying in handling iterative programs. 10\\. Programming constructs to store\npartial computation and pruning search trees. 11\\. Mixing functional\nprogramming and logic programming using concepts such as equational logic,\nnarrowing, residuation, and semantic unification. (See also: FPL-Functional)\n12\\. Higher-order, constraint, and inductive logic programming. (See also: AI-\nLRR) 13\\. Integration with other programming paradigms such as object-oriented\nprogramming. 14\\. Advance programming constructs such as difference-lists,\ncreating user defined data structures, set of, etc. Illustrative learning\noutcomes: KA Core: 1\\. Use a logic language to implement a conventional\nalgorithm. 2\\. Use a logic language to implement an algorithm employing\nimplicit search using clauses, relations, and cuts. 3\\. Use a simple\nillustrative example to show correspondence between First Order Predicate\nLogic (FOPL) and logic programs using Horn clauses. 4\\. Use examples to\nillustrate the unification algorithm and its role of parameter-passing in\nquery reduction. 5\\. Use simple logic programs interleaving relations,\nfunctions, and recursive programming such as factorial and Fibonacci numbers\nand simple complex relationships between entities and illustrate execution and\nparameter-passing using unification and backtracking. Non-core: 6\\. Illustrate\ncomputation of simple programs such as Fibonacci and show overhead of\nrecomputation, and then show how to improve execution overhead.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/cc6c248ffa5144eec2ff0ed6cded71511c7d7f301ae86fd7632fcaa5e222de29> .
_:Nded05a56cb9e4863b2ccab6aa209dd38 <http://schema.org/answer> "1" <http://groq.org/cc6c248ffa5144eec2ff0ed6cded71511c7d7f301ae86fd7632fcaa5e222de29> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/cc6c248ffa5144eec2ff0ed6cded71511c7d7f301ae86fd7632fcaa5e222de29> .
_:Nded05a56cb9e4863b2ccab6aa209dd38 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/cc6c248ffa5144eec2ff0ed6cded71511c7d7f301ae86fd7632fcaa5e222de29> .
_:Nded05a56cb9e4863b2ccab6aa209dd38 <http://schema.org/explain> "The lecture covers a significant portion of the KU, including topics such as universal and existential quantifiers, logical connectives, and unification, which are core components of the KU." <http://groq.org/cc6c248ffa5144eec2ff0ed6cded71511c7d7f301ae86fd7632fcaa5e222de29> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU020" <http://groq.org/314c81e7d8c2a6abba55a762f40181b47556f3f67d1336814bed8642487a39b6> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Unité Enseignement de Découverte Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU020</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD GIT-3D Modeling: Core Concepts CS\nCore: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic 3\nKA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of GIT-3D Modeling.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/314c81e7d8c2a6abba55a762f40181b47556f3f67d1336814bed8642487a39b6> .
_:Ne2d1e5f0443a419abb5c42f959d5a584 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/314c81e7d8c2a6abba55a762f40181b47556f3f67d1336814bed8642487a39b6> .
_:Ne2d1e5f0443a419abb5c42f959d5a584 <http://schema.org/explain> "Lecture focuses on teaching methods, not GIT-3D Modeling content" <http://groq.org/314c81e7d8c2a6abba55a762f40181b47556f3f67d1336814bed8642487a39b6> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/314c81e7d8c2a6abba55a762f40181b47556f3f67d1336814bed8642487a39b6> .
_:Ne2d1e5f0443a419abb5c42f959d5a584 <http://schema.org/answer> "0" <http://groq.org/314c81e7d8c2a6abba55a762f40181b47556f3f67d1336814bed8642487a39b6> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/has_schema_type> _:Ne2d1e5f0443a419abb5c42f959d5a584 <http://groq.org/314c81e7d8c2a6abba55a762f40181b47556f3f67d1336814bed8642487a39b6> .
_:N618541da282b4ae5aa0b985922606c63 <http://schema.org/answer> "0" <http://groq.org/9dede1cbb6908bb1f7b2c8349c5b5da2c675c41987f301628efa2934e3277384> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU010" <http://groq.org/9dede1cbb6908bb1f7b2c8349c5b5da2c675c41987f301628efa2934e3277384> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/9dede1cbb6908bb1f7b2c8349c5b5da2c675c41987f301628efa2934e3277384> .
_:N618541da282b4ae5aa0b985922606c63 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/9dede1cbb6908bb1f7b2c8349c5b5da2c675c41987f301628efa2934e3277384> .
_:N618541da282b4ae5aa0b985922606c63 <http://schema.org/explain> "The lecture focuses on algorithm analysis and data structures, while the KU covers logic programming concepts." <http://groq.org/9dede1cbb6908bb1f7b2c8349c5b5da2c675c41987f301628efa2934e3277384> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 1 Objectif: (résultats d'apprentissage)\n•\nÉvaluer une implémentation de structure de données en temps et en place mémoire (coûts minimal,\nmaximal, amorti)\n• Course content: et mise en pratique dans l’approche de résolution de problèmes « Diviser pour régner ». Course name: http://example.org/course/UE_XLG3IU010</page1>\n        <page2>Pages: 133 HOURS CS Core = 0 KA Core = 2 + 1 (MSF) FPL-Logic: Logic\nProgramming KA Core: 1\\. Universal vs existential quantifiers. (See also: AI-\nLRR, MSF-Discrete) 2\\. First order predicate logic vs higher order logic. (See\nalso: AI-LRR, MSF-Discrete) 3\\. Expressing complex relations using logical\nconnectives and simpler relations. 4\\. Definitions of Horn clause, facts,\ngoals and subgoals. 5\\. Unification and unification algorithm; unification vs\nassertion vs expression evaluation. 6\\. Mixing relations with functions. (See\nalso: MSF-Discrete) 7\\. Cuts, backtracking, and non-determinism. 8\\. Closed-\nworld vs open-world assumptions. Non-core: 9\\. Memory overhead of variable\ncopying in handling iterative programs. 10\\. Programming constructs to store\npartial computation and pruning search trees. 11\\. Mixing functional\nprogramming and logic programming using concepts such as equational logic,\nnarrowing, residuation, and semantic unification. (See also: FPL-Functional)\n12\\. Higher-order, constraint, and inductive logic programming. (See also: AI-\nLRR) 13\\. Integration with other programming paradigms such as object-oriented\nprogramming. 14\\. Advance programming constructs such as difference-lists,\ncreating user defined data structures, set of, etc. Illustrative learning\noutcomes: KA Core: 1\\. Use a logic language to implement a conventional\nalgorithm. 2\\. Use a logic language to implement an algorithm employing\nimplicit search using clauses, relations, and cuts. 3\\. Use a simple\nillustrative example to show correspondence between First Order Predicate\nLogic (FOPL) and logic programs using Horn clauses. 4\\. Use examples to\nillustrate the unification algorithm and its role of parameter-passing in\nquery reduction. 5\\. Use simple logic programs interleaving relations,\nfunctions, and recursive programming such as factorial and Fibonacci numbers\nand simple complex relationships between entities and illustrate execution and\nparameter-passing using unification and backtracking. Non-core: 6\\. Illustrate\ncomputation of simple programs such as Fibonacci and show overhead of\nrecomputation, and then show how to improve execution overhead.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/9dede1cbb6908bb1f7b2c8349c5b5da2c675c41987f301628efa2934e3277384> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/has_schema_type> _:N618541da282b4ae5aa0b985922606c63 <http://groq.org/9dede1cbb6908bb1f7b2c8349c5b5da2c675c41987f301628efa2934e3277384> .
_:Ne85f0288ad1644938964179e017ea75b <http://schema.org/explain> "The lecture focuses on formal languages and automata, while the KU covers formal semantics and type systems, which are distinct areas." <http://groq.org/e9ed2b91df29350e70db39745ad4ff33953c2aa9bd2c889c1e95342e106c488c> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/has_schema_type> _:Ne85f0288ad1644938964179e017ea75b <http://groq.org/e9ed2b91df29350e70db39745ad4ff33953c2aa9bd2c889c1e95342e106c488c> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU020" <http://groq.org/e9ed2b91df29350e70db39745ad4ff33953c2aa9bd2c889c1e95342e106c488c> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/e9ed2b91df29350e70db39745ad4ff33953c2aa9bd2c889c1e95342e106c488c> .
_:Ne85f0288ad1644938964179e017ea75b <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/e9ed2b91df29350e70db39745ad4ff33953c2aa9bd2c889c1e95342e106c488c> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Langages et automates Objectif: (résultats d'apprentissage)\n5. Course content: • Langages algébriques\n- Grammaire algébrique\n- Arbre de dérivation\n- Automates à pile\n• Hiérarchie de Chomsky\n- Classification des grammaires;\n- Algorithmes de reconnaissance pour les grammaires de type 1 et 2\n• Analyse lexicale et syntaxique\n- TP de flex et bison Course name: http://example.org/course/UE_XLG4IU020</page1>\n        <page2>Pages: 145-146 HOURS CS Core = 0 KA Core = 0 FPL-Formalism: Formal Semantics\nNon-core: 1\\. Syntax vs semantics 2\\. Approaches to semantics: axiomatic,\noperational, denotational, type-based 3\\. Axiomatic semantics of abstract\nconstructs such as assignment, selection, iteration using precondition, post-\nconditions, and loop invariant 4\\. Operational semantics analysis of abstract\nconstructs and sequence of such as assignment, expression evaluation,\nselection, iteration using environment and store a. Symbolic execution b.\nConstraint checkers 5\\. Denotational semantics a. Lambda Calculus. (See also:\nAL-Models, FPL-Functional) 6\\. Proofs by induction over language semantics 7\\.\nFormal definitions and proofs for type systems (See also: FPL-Types) a.\nPropositions as types (implication as a function, conjunction as a product,\ndisjunction as a sum) b. Dependent types (universal quantification as\ndependent function, existential quantification as dependent product) c.\nParametricity Illustrative learning outcomes: Non-core: 1\\. Construct formal\nsemantics for a small language. 2\\. Write a lambda-calculus program and show\nits evaluation to a normal form. 3\\. Discuss the different approaches of\noperational, denotational, and axiomatic semantics. 4\\. Use induction to prove\nproperties of all programs in a language. 5\\. Use induction to prove\nproperties of all programs in a language that is well-typed according to a\nformally defined type system. 6\\. Use parametricity to establish the behavior\nof code given only its type.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/e9ed2b91df29350e70db39745ad4ff33953c2aa9bd2c889c1e95342e106c488c> .
_:Ne85f0288ad1644938964179e017ea75b <http://schema.org/answer> "0" <http://groq.org/e9ed2b91df29350e70db39745ad4ff33953c2aa9bd2c889c1e95342e106c488c> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU040" <http://groq.org/80296ea74643591cf3f70e7c124ff0abba8d47e20ec35a6a69aa1a6bbf997e23> .
_:N0162d424a45e46b6bd2ac54931d9f0ab <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/80296ea74643591cf3f70e7c124ff0abba8d47e20ec35a6a69aa1a6bbf997e23> .
<http://example.org/course/UE_XLG4IU040> <http://example.org/has_schema_type> _:N0162d424a45e46b6bd2ac54931d9f0ab <http://groq.org/80296ea74643591cf3f70e7c124ff0abba8d47e20ec35a6a69aa1a6bbf997e23> .
_:N0162d424a45e46b6bd2ac54931d9f0ab <http://schema.org/answer> "1" <http://groq.org/80296ea74643591cf3f70e7c124ff0abba8d47e20ec35a6a69aa1a6bbf997e23> .
_:N0162d424a45e46b6bd2ac54931d9f0ab <http://schema.org/explain> "The lecture covers the basics of relational databases, including Merise modeling, relational models, and SQL, which aligns with the KU's focus on query construction, relational algebra, and SQL." <http://groq.org/80296ea74643591cf3f70e7c124ff0abba8d47e20ec35a6a69aa1a6bbf997e23> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/80296ea74643591cf3f70e7c124ff0abba8d47e20ec35a6a69aa1a6bbf997e23> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Bases de données Objectif: (résultats d'apprentissage)\n- Introduction à la modélisation Merise\n- Modèle relationnel\n- Algèbre relationnelle et SQL Course content: - Passage au relationnel\n- Définition et interrogation d'une base en sql\n- Introduction au modèle olap Course name: http://example.org/course/UE_XLG4IU040</page1>\n        <page2>Pages: 118 HOURS CS Core = 2 KA Core = 4 DM-Querying: Query Construction CS\nCore: 1\\. SQL Query Formation a. Interactive SQL execution b. Programmatic\nexecution of an SQL query KA Core: 2\\. Relational Algebra 3\\. SQL a. Data\ndefinition including integrity and other constraint specifications b. Update\nsublanguage Non-core: 4\\. Relational Calculus 5\\. QBE and 4th-generation\nenvironments 6\\. Different ways to invoke non-procedural queries in\nconventional languages 7\\. Introduction to other major query languages (e.g.,\nXPATH, SPARQL) 8\\. Stored procedures Illustrative Learning Outcomes: CS Core:\n1\\. Compose SQL queries that incorporate select, project, join, union,\nintersection, set difference, and set division. 2\\. Determine when a nested\nSQL query is correlated or not. 3\\. Iterate over data retrieved\nprogrammatically from a database via an SQL query. KA Core: 4\\. Define, in\nSQL, a relation schema, including all integrity constraints and delete/update\ntriggers. 5\\. Compose an SQL query to update a tuple in a relation.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/80296ea74643591cf3f70e7c124ff0abba8d47e20ec35a6a69aa1a6bbf997e23> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S4 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4AU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/4925b67dfe151d2e3895fb8421f1ab1d08f072b567562bcd567186708ca4f781> .
_:N10ee4b1688f34c358eac7fb76f077795 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/4925b67dfe151d2e3895fb8421f1ab1d08f072b567562bcd567186708ca4f781> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/has_schema_type> _:N10ee4b1688f34c358eac7fb76f077795 <http://groq.org/4925b67dfe151d2e3895fb8421f1ab1d08f072b567562bcd567186708ca4f781> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4AU010" <http://groq.org/4925b67dfe151d2e3895fb8421f1ab1d08f072b567562bcd567186708ca4f781> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/4925b67dfe151d2e3895fb8421f1ab1d08f072b567562bcd567186708ca4f781> .
_:N10ee4b1688f34c358eac7fb76f077795 <http://schema.org/answer> "0" <http://groq.org/4925b67dfe151d2e3895fb8421f1ab1d08f072b567562bcd567186708ca4f781> .
_:N10ee4b1688f34c358eac7fb76f077795 <http://schema.org/explain> "Lecture focuses on teaching methods, while KU covers formal methods in CS; topics unrelated." <http://groq.org/4925b67dfe151d2e3895fb8421f1ab1d08f072b567562bcd567186708ca4f781> .
_:N9be82746c1ed4f629a583c65552f4cef <http://schema.org/answer> "1" <http://groq.org/e40f158bcdacbde86ef47444093a713f14be71c211b6f71d42ac0956c366f166> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Systèmes d'exploitation Objectif: (résultats d'apprentissage)\nsynchronisation/communication (Application)\n• Etre capable d'utiliser les mécanismes de synchronisation usuels sous Linux (sémaphores,\nmutexes, signaux) (Application)\n• Comprendre le principe de mémoire virtuelle (Initiation)\n• Savoir gérer les entrées/sorties sous Linux (Initiation) Course content: par le système d'exploitation y sont exposées : comment les processus se partagent-ils l'accès au\nprocesseur ? Comment se synchronisent-ils et quels mécanismes leur permettent d'échanger des\ndonnées ? Comment sont gérés la mémoire et les entrées/sorties ? Course name: http://example.org/course/UE_XLG4IU030</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD PDC-Synchronization and\nConcurrency: Core Concepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder\ntopic 2 3\\. Placeholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\.\nPlaceholder advanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key\nconcepts of PDC-Synchronization and Concurrency. 2\\. Apply principles in\npractical scenarios. 3\\. Analyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/e40f158bcdacbde86ef47444093a713f14be71c211b6f71d42ac0956c366f166> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/has_schema_type> _:N9be82746c1ed4f629a583c65552f4cef <http://groq.org/e40f158bcdacbde86ef47444093a713f14be71c211b6f71d42ac0956c366f166> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/e40f158bcdacbde86ef47444093a713f14be71c211b6f71d42ac0956c366f166> .
_:N9be82746c1ed4f629a583c65552f4cef <http://schema.org/explain> "The lecture covers synchronization mechanisms and memory management, which are key parts of the KU." <http://groq.org/e40f158bcdacbde86ef47444093a713f14be71c211b6f71d42ac0956c366f166> .
_:N9be82746c1ed4f629a583c65552f4cef <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/e40f158bcdacbde86ef47444093a713f14be71c211b6f71d42ac0956c366f166> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU030" <http://groq.org/e40f158bcdacbde86ef47444093a713f14be71c211b6f71d42ac0956c366f166> .
_:Ne4f39c40c5e64b289a026e806b97e661 <http://example.org/has_chunk> ".\n3. Compute a probabilistic inference in a real-world problem using Bayes’ theorem to determine the\nprobability of a hypothesis given evidence.\n4. Apply Bayes’ rule to determine the probability of a hypothesis given evidence.\n5. Compute the probability of outcomes and test whether outcomes are independent.\n71\nAI-ML: Machine Learning\nCS Core:\n1. Definition and examples of a broad variety of machine learning tasks\na. Supervised learning\ni. Classification\nii. Regression\nb. Reinforcement learning\nc" <http://faiss.org/63935b68568661b3bd42cb427999df7fd8a78c7ec053fedcda6e0e173a5b3a66> .
_:Ne4f39c40c5e64b289a026e806b97e661 <http://example.org/has_score> "0.7135371"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/63935b68568661b3bd42cb427999df7fd8a78c7ec053fedcda6e0e173a5b3a66> .
_:N1a419a699c6a46b2804807a7168ee2d8 <http://example.org/has_chunk> ".\n6. Logic\na. Convert logical statements from informal language to propositional and predicate logic\nexpressions.\nb. Apply formal methods of symbolic propositional and predicate logic, such as calculating validity\nof formulae, computing normal forms, or negating a logical statement.\nc. Use the rules of inference to construct proofs in propositional and predicate logic.\nd" <http://faiss.org/63935b68568661b3bd42cb427999df7fd8a78c7ec053fedcda6e0e173a5b3a66> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/is_aligned_with> _:Ne4f39c40c5e64b289a026e806b97e661 <http://faiss.org/63935b68568661b3bd42cb427999df7fd8a78c7ec053fedcda6e0e173a5b3a66> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/is_aligned_with> _:N1a419a699c6a46b2804807a7168ee2d8 <http://faiss.org/63935b68568661b3bd42cb427999df7fd8a78c7ec053fedcda6e0e173a5b3a66> .
_:Nac3a40cc4bcc47ba8de160959e20a7dc <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Formalism_Formal_Semantics.txt> <http://faiss.org/63935b68568661b3bd42cb427999df7fd8a78c7ec053fedcda6e0e173a5b3a66> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/is_aligned_with> _:Nac3a40cc4bcc47ba8de160959e20a7dc <http://faiss.org/63935b68568661b3bd42cb427999df7fd8a78c7ec053fedcda6e0e173a5b3a66> .
<http://example.org/faiss> <http://example.org/input> "Label: Logique pour l'informatique Objectif: (résultats d'apprentissage)\nconsistance et complétude d'un système de preuves.\n4. Représenter une preuve de la déduction naturelle sous forme d'arbre d'inférence.\n5. Utiliser les algorithmes d'unification et de résolution pour le raisonnement automatique sur les\nformules logiques.\n1) Raisonnement algébrique booléen\n• Dualités des connecteurs logiques\n• Formes normales conjonctive et disjonctive\n2) Systèmes de preuves\n• Système d'inférence associé à une définition inductive\n• Preuve d'appartenance à un ensemble inductif par un arbre de preuves\n• Règles d'inférences de la déduction naturelle pour la logique propositionnelle\n• Distinguer logique classique et logique intuitionniste\n3) Donner du sens aux langages logique Course content: • Interprétation, modèle, satisfiabilité, validité\n• Correspondance avec le système de preuve: correction et complétude\n4) Calcul des prédicats\n• Manipulation des quantificateurs\n• Skolémisation, forme clausale\n• Théorie logique\n5) Raisonner automatiquement sur les formules logique\n• Algorithme d'unification\n• Algorithme de résolution Course name: http://example.org/course/UE_XLG3IU020" <http://faiss.org/63935b68568661b3bd42cb427999df7fd8a78c7ec053fedcda6e0e173a5b3a66> .
_:N1a419a699c6a46b2804807a7168ee2d8 <http://example.org/has_score> "0.6991599"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/63935b68568661b3bd42cb427999df7fd8a78c7ec053fedcda6e0e173a5b3a66> .
_:Nac3a40cc4bcc47ba8de160959e20a7dc <http://example.org/has_score> "0.69964516"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/63935b68568661b3bd42cb427999df7fd8a78c7ec053fedcda6e0e173a5b3a66> .
_:Ne4f39c40c5e64b289a026e806b97e661 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-KRR_Fundamental_Knowledge_Representation_and_Reasoning.txt> <http://faiss.org/63935b68568661b3bd42cb427999df7fd8a78c7ec053fedcda6e0e173a5b3a66> .
_:N1a419a699c6a46b2804807a7168ee2d8 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Discrete_Discrete_Mathematics.txt> <http://faiss.org/63935b68568661b3bd42cb427999df7fd8a78c7ec053fedcda6e0e173a5b3a66> .
_:Nac3a40cc4bcc47ba8de160959e20a7dc <http://example.org/has_chunk> ". Parametricity\nIllustrative learning outcomes:\nNon-core:\n1. Construct formal semantics for a small language.\n2. Write a lambda-calculus program and show its evaluation to a normal form.\n3. Discuss the different approaches of operational, denotational, and axiomatic semantics.\n4. Use induction to prove properties of all programs in a language.\n5. Use induction to prove properties of all programs in a language that is well-typed according to a\nformally defined type system.\n6" <http://faiss.org/63935b68568661b3bd42cb427999df7fd8a78c7ec053fedcda6e0e173a5b3a66> .
_:N3a61cb627f47410db5f15f5f7792933e <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/ef72278b65d38a499f6a1cd35a4d76295d53108905b2d0bdbaf231fc347d2416> .
_:N3a61cb627f47410db5f15f5f7792933e <http://schema.org/answer> "1" <http://groq.org/ef72278b65d38a499f6a1cd35a4d76295d53108905b2d0bdbaf231fc347d2416> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU030" <http://groq.org/ef72278b65d38a499f6a1cd35a4d76295d53108905b2d0bdbaf231fc347d2416> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Programmation à Objets Objectif: (résultats d'apprentissage) Connaître les mécanismes d’héritage et de polymorphisme Course content: Classes abstraites Course name: http://example.org/course/UE_XLG3IU030</page1>\n        <page2>Pages: 133 HOURS CS Core = 0 KA Core = 2 + 1 (MSF) FPL-Logic: Logic\nProgramming KA Core: 1\\. Universal vs existential quantifiers. (See also: AI-\nLRR, MSF-Discrete) 2\\. First order predicate logic vs higher order logic. (See\nalso: AI-LRR, MSF-Discrete) 3\\. Expressing complex relations using logical\nconnectives and simpler relations. 4\\. Definitions of Horn clause, facts,\ngoals and subgoals. 5\\. Unification and unification algorithm; unification vs\nassertion vs expression evaluation. 6\\. Mixing relations with functions. (See\nalso: MSF-Discrete) 7\\. Cuts, backtracking, and non-determinism. 8\\. Closed-\nworld vs open-world assumptions. Non-core: 9\\. Memory overhead of variable\ncopying in handling iterative programs. 10\\. Programming constructs to store\npartial computation and pruning search trees. 11\\. Mixing functional\nprogramming and logic programming using concepts such as equational logic,\nnarrowing, residuation, and semantic unification. (See also: FPL-Functional)\n12\\. Higher-order, constraint, and inductive logic programming. (See also: AI-\nLRR) 13\\. Integration with other programming paradigms such as object-oriented\nprogramming. 14\\. Advance programming constructs such as difference-lists,\ncreating user defined data structures, set of, etc. Illustrative learning\noutcomes: KA Core: 1\\. Use a logic language to implement a conventional\nalgorithm. 2\\. Use a logic language to implement an algorithm employing\nimplicit search using clauses, relations, and cuts. 3\\. Use a simple\nillustrative example to show correspondence between First Order Predicate\nLogic (FOPL) and logic programs using Horn clauses. 4\\. Use examples to\nillustrate the unification algorithm and its role of parameter-passing in\nquery reduction. 5\\. Use simple logic programs interleaving relations,\nfunctions, and recursive programming such as factorial and Fibonacci numbers\nand simple complex relationships between entities and illustrate execution and\nparameter-passing using unification and backtracking. Non-core: 6\\. Illustrate\ncomputation of simple programs such as Fibonacci and show overhead of\nrecomputation, and then show how to improve execution overhead.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/ef72278b65d38a499f6a1cd35a4d76295d53108905b2d0bdbaf231fc347d2416> .
_:N3a61cb627f47410db5f15f5f7792933e <http://schema.org/explain> "The lecture covers a significant portion of the KU, including topics such as classes, abstract classes, inheritance, polymorphism, and logic programming." <http://groq.org/ef72278b65d38a499f6a1cd35a4d76295d53108905b2d0bdbaf231fc347d2416> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/ef72278b65d38a499f6a1cd35a4d76295d53108905b2d0bdbaf231fc347d2416> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/has_schema_type> _:N3a61cb627f47410db5f15f5f7792933e <http://groq.org/ef72278b65d38a499f6a1cd35a4d76295d53108905b2d0bdbaf231fc347d2416> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Probabilites discretes Objectif: (résultats d'apprentissage) • Course content: - Couple de variables aléatoires discrètes (conditionnement, indépendance, corrélation).\n- Lois uniforme, Bernoulli, binomiale et hypergéométrique.\n• Course name: http://example.org/course/UE_XLG3MU040</page1>\n        <page2>Pages: 188-189 HOURS CS Core = 11 KA Core = 29 MSF-Probability: Probability CS\nCore: 1\\. Basic notions: sample spaces, events, probability, conditional\nprobability, Bayes' rule 2\\. Discrete random variables and distributions 3\\.\nContinuous random variables and distributions 4\\. Expectation, variance, law\nof large numbers, central limit theorem 5\\. Conditional distributions and\nexpectation 6\\. Applications to computing, the difference between probability\nand statistics (as subjects) KA Core: The recommended topics are the same\nbetween CS core and KA-core, but with far more hours, the KA-core can cover\nthese topics in depth and might include more computing-related applications.\nIllustrative Learning Outcomes: CS Core: 1\\. Basic notions: sample spaces,\nevents, probability, conditional probability, Bayes' rule a. Translate a prose\ndescription of a probabilistic process into a formal setting of sample spaces,\noutcome probabilities, and events. b. Calculate the probability of simple\nevents. c. Determine whether two events are independent. d. Compute\nconditional probabilities, including through applying (and explaining) Bayes'\nRule. 2\\. Discrete random variables and distributions a. Define the concept of\na random variable and indicator random variable. b. Determine whether two\nrandom variables are independent. c. Identify common discrete distributions\n(e.g., uniform, Bernoulli, binomial, geometric). 3\\. Continuous random\nvariables and distributions a. Identify common continuous distributions (e.g.,\nuniform, normal, exponential). b. Calculate probabilities using cumulative\ndensity functions. 4\\. Expectation, variance, law of large numbers, central\nlimit theorem a. Define the concept of expectation and variance of a random\nvariable. b. Compute the expected value and variance of simple or common\ndiscrete/continuous random variables. c. Explain the relevance of the law of\nlarge numbers and central limit theorem to probability calculations. 5\\.\nConditional distributions and expectation a. Explain the distinction between\njoint, marginal, and conditional distributions. b. Compute marginal and\nconditional distributions from a full distribution, for both discrete and\ncontinuous random variables. c. Compute conditional expectations for both\ndiscrete and continuous random variables. 6\\. Applications to computing a.\nDescribe how probability can be used to model real-life situations or\napplications, such as predictive text, hash tables, and quantum computation.\nb. Apply probabilistic processes to solving computational problems, such as\nthrough randomized algorithms or in security contexts.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/7309c92680e4318ce6dc4ba102be5090523fefb12709607dc4c86f2a259eb99b> .
_:N500185c58da145b7b8333c4ae689167a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/7309c92680e4318ce6dc4ba102be5090523fefb12709607dc4c86f2a259eb99b> .
<http://example.org/course/UE_XLG3MU040> <http://example.org/has_schema_type> _:N500185c58da145b7b8333c4ae689167a <http://groq.org/7309c92680e4318ce6dc4ba102be5090523fefb12709607dc4c86f2a259eb99b> .
_:N500185c58da145b7b8333c4ae689167a <http://schema.org/explain> "The lecture covers the basic notions, discrete and continuous random variables, and conditional distributions, which are the core topics of the KU." <http://groq.org/7309c92680e4318ce6dc4ba102be5090523fefb12709607dc4c86f2a259eb99b> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/7309c92680e4318ce6dc4ba102be5090523fefb12709607dc4c86f2a259eb99b> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3MU040" <http://groq.org/7309c92680e4318ce6dc4ba102be5090523fefb12709607dc4c86f2a259eb99b> .
_:N500185c58da145b7b8333c4ae689167a <http://schema.org/answer> "1" <http://groq.org/7309c92680e4318ce6dc4ba102be5090523fefb12709607dc4c86f2a259eb99b> .
_:N296f0b9decac4a38a741ce12e6332ea3 <http://schema.org/explain> "No overlap between professional insertion skills (networking, career projects) and SE-Project Management concepts" <http://groq.org/35ea6ad5ce87f163635a0b0e500c97adc8079d066f9e0e664a94d931c4ff4998> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/has_schema_type> _:N296f0b9decac4a38a741ce12e6332ea3 <http://groq.org/35ea6ad5ce87f163635a0b0e500c97adc8079d066f9e0e664a94d931c4ff4998> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S4 Objectif: (résultats d'apprentissage)\nfaire et savoir-être) et d'un plan d'actions sur les prochaines années : à l'écrit et à l'oral\n- d'identitier et d'animer son réseau (professionnel et élargi)\n- de créer et de faire vivre ses profils numériques professionnels\n- de mener une enquête métier auprès d'un professionnel et de la restituer Course content: - présentation orale de la restitution de l'enquête et des recherches sur le métier\n- équivalent de 8 TD + présentation orale des enquêtes:\n- identication de ses valeurs\n- indentification de ses compétences\n- consrtruction de son projet professionnel et personnel\n- présentation de son projet Course name: http://example.org/course/UE_XLG4TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Project Management: Core\nConcepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nSE-Project Management. 2\\. Apply principles in practical scenarios. 3\\.\nAnalyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/35ea6ad5ce87f163635a0b0e500c97adc8079d066f9e0e664a94d931c4ff4998> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU010" <http://groq.org/35ea6ad5ce87f163635a0b0e500c97adc8079d066f9e0e664a94d931c4ff4998> .
_:N296f0b9decac4a38a741ce12e6332ea3 <http://schema.org/answer> "0" <http://groq.org/35ea6ad5ce87f163635a0b0e500c97adc8079d066f9e0e664a94d931c4ff4998> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/35ea6ad5ce87f163635a0b0e500c97adc8079d066f9e0e664a94d931c4ff4998> .
_:N296f0b9decac4a38a741ce12e6332ea3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/35ea6ad5ce87f163635a0b0e500c97adc8079d066f9e0e664a94d931c4ff4998> .
_:N1d7d7394b5434460a3998812bc221247 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://faiss.org/0b81682029f0ab217f52dd24fbf6be8496a9cefe9a50a501e9e23deea98e840d> .
_:N4007e34528d94c0182a88db34be2858f <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/0b81682029f0ab217f52dd24fbf6be8496a9cefe9a50a501e9e23deea98e840d> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/is_aligned_with> _:N275cada94c9c43f09456936c027fff82 <http://faiss.org/0b81682029f0ab217f52dd24fbf6be8496a9cefe9a50a501e9e23deea98e840d> .
_:N275cada94c9c43f09456936c027fff82 <http://example.org/has_score> "0.6364523"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/0b81682029f0ab217f52dd24fbf6be8496a9cefe9a50a501e9e23deea98e840d> .
_:N4007e34528d94c0182a88db34be2858f <http://example.org/has_score> "0.64398056"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/0b81682029f0ab217f52dd24fbf6be8496a9cefe9a50a501e9e23deea98e840d> .
_:N1d7d7394b5434460a3998812bc221247 <http://example.org/has_score> "0.6486398"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/0b81682029f0ab217f52dd24fbf6be8496a9cefe9a50a501e9e23deea98e840d> .
<http://example.org/faiss> <http://example.org/input> "Label: 2nd year English S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3AU010" <http://faiss.org/0b81682029f0ab217f52dd24fbf6be8496a9cefe9a50a501e9e23deea98e840d> .
_:N275cada94c9c43f09456936c027fff82 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-NLP_Natural_Language_Processing.txt> <http://faiss.org/0b81682029f0ab217f52dd24fbf6be8496a9cefe9a50a501e9e23deea98e840d> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/is_aligned_with> _:N1d7d7394b5434460a3998812bc221247 <http://faiss.org/0b81682029f0ab217f52dd24fbf6be8496a9cefe9a50a501e9e23deea98e840d> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/is_aligned_with> _:N4007e34528d94c0182a88db34be2858f <http://faiss.org/0b81682029f0ab217f52dd24fbf6be8496a9cefe9a50a501e9e23deea98e840d> .
_:N1d7d7394b5434460a3998812bc221247 <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://faiss.org/0b81682029f0ab217f52dd24fbf6be8496a9cefe9a50a501e9e23deea98e840d> .
_:N4007e34528d94c0182a88db34be2858f <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://faiss.org/0b81682029f0ab217f52dd24fbf6be8496a9cefe9a50a501e9e23deea98e840d> .
_:N275cada94c9c43f09456936c027fff82 <http://example.org/has_chunk> ". Examples of use: POS tagging and morphology\n8. Information retrieval (See also: DM-Unstructured)\na. Vector space model\ni. TF & IDF\nb. Precision and recall\n9. Information extraction\n10. Language translation\n11. Text classification, categorization\na. Bag of words model\n12. Deep learning for NLP (See also: AI-ML)\na. RNNs\nb. Transformers\nc. Multi-modal embeddings (e.g., images + text)\nd. Generative language models\nIllustrative Learning Outcomes:\n1" <http://faiss.org/0b81682029f0ab217f52dd24fbf6be8496a9cefe9a50a501e9e23deea98e840d> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Langages et automates Objectif: (résultats d'apprentissage)\n5. Course content: • Langages algébriques\n- Grammaire algébrique\n- Arbre de dérivation\n- Automates à pile\n• Hiérarchie de Chomsky\n- Classification des grammaires;\n- Algorithmes de reconnaissance pour les grammaires de type 1 et 2\n• Analyse lexicale et syntaxique\n- TP de flex et bison Course name: http://example.org/course/UE_XLG4IU020</page1>\n        <page2>Pages:79-80 HOURS CS Core = 0 KA Core = 0 AI-NLP: Natural Language Processing\nNon-core: 1\\. Deterministic and stochastic grammars 2\\. Parsing algorithms a.\nCFGs and chart parsers (e.g., CYK) b. Probabilistic CFGs and weighted CYK 3\\.\nRepresenting meaning/Semantics a. Logic-based knowledge representations b.\nSemantic roles c. Temporal representations d. Beliefs, desires, and intentions\n4\\. Corpus-based methods 5\\. N-grams and HMMs 6\\. Smoothing and backoff 7\\.\nExamples of use: POS tagging and morphology 8\\. Information retrieval (See\nalso: DM-Unstructured) a. Vector space model i. TF & IDF b. Precision and\nrecall 9\\. Information extraction 10\\. Language translation 11\\. Text\nclassification, categorization a. Bag of words model 12\\. Deep learning for\nNLP (See also: AI-ML) a. RNNs b. Transformers c. Multi-modal embeddings (e.g.,\nimages + text) d. Generative language models Illustrative Learning Outcomes:\n1\\. Define and contrast deterministic and stochastic grammars, providing\nexamples to show the adequacy of each. 2\\. Simulate, apply, or implement\nclassic and stochastic algorithms for parsing natural language. 3\\. Identify\nthe challenges of representing meaning. 4\\. List the advantages of using\nstandard corpora. Identify examples of current corpora for a variety of NLP\ntasks. 5\\. Identify techniques for information retrieval, language\ntranslation, and text classification. 6\\. Implement a TF/IDF transform, use it\nto extract features from a corpus, and train an off-the-shelf machine learning\nalgorithm using those features to do text classification.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/0b1fb53982abad5412d2e68dadf17f4d6f98a92102d160acbb70d961e8f98bed> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU020" <http://groq.org/0b1fb53982abad5412d2e68dadf17f4d6f98a92102d160acbb70d961e8f98bed> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/has_schema_type> _:Neaac947cc23e459a807adaf99f5d39fd <http://groq.org/0b1fb53982abad5412d2e68dadf17f4d6f98a92102d160acbb70d961e8f98bed> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/0b1fb53982abad5412d2e68dadf17f4d6f98a92102d160acbb70d961e8f98bed> .
_:Neaac947cc23e459a807adaf99f5d39fd <http://schema.org/explain> "The lecture covers foundational topics like formal languages and parsing, but the KU includes broader and more advanced NLP topics not addressed in the lecture." <http://groq.org/0b1fb53982abad5412d2e68dadf17f4d6f98a92102d160acbb70d961e8f98bed> .
_:Neaac947cc23e459a807adaf99f5d39fd <http://schema.org/answer> "0" <http://groq.org/0b1fb53982abad5412d2e68dadf17f4d6f98a92102d160acbb70d961e8f98bed> .
_:Neaac947cc23e459a807adaf99f5d39fd <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/0b1fb53982abad5412d2e68dadf17f4d6f98a92102d160acbb70d961e8f98bed> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S4 Objectif: (résultats d'apprentissage)\nfaire et savoir-être) et d'un plan d'actions sur les prochaines années : à l'écrit et à l'oral\n- d'identitier et d'animer son réseau (professionnel et élargi)\n- de créer et de faire vivre ses profils numériques professionnels\n- de mener une enquête métier auprès d'un professionnel et de la restituer Course content: - présentation orale de la restitution de l'enquête et des recherches sur le métier\n- équivalent de 8 TD + présentation orale des enquêtes:\n- identication de ses valeurs\n- indentification de ses compétences\n- consrtruction de son projet professionnel et personnel\n- présentation de son projet Course name: http://example.org/course/UE_XLG4TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Testing and Quality Assurance:\nCore Concepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nSE-Testing and Quality Assurance. 2\\. Apply principles in practical scenarios.\n3\\. Analyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/d284c3c60b68f8ab18f36fbc6785d37e104a80e3b9d72226cc74fb703d958c94> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/d284c3c60b68f8ab18f36fbc6785d37e104a80e3b9d72226cc74fb703d958c94> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU010" <http://groq.org/d284c3c60b68f8ab18f36fbc6785d37e104a80e3b9d72226cc74fb703d958c94> .
_:N5ed62b59a8cb41d196e523ae4ef6889d <http://schema.org/answer> "0" <http://groq.org/d284c3c60b68f8ab18f36fbc6785d37e104a80e3b9d72226cc74fb703d958c94> .
_:N5ed62b59a8cb41d196e523ae4ef6889d <http://schema.org/explain> "The lecture focuses on professional development and networking, not software testing or quality assurance." <http://groq.org/d284c3c60b68f8ab18f36fbc6785d37e104a80e3b9d72226cc74fb703d958c94> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/has_schema_type> _:N5ed62b59a8cb41d196e523ae4ef6889d <http://groq.org/d284c3c60b68f8ab18f36fbc6785d37e104a80e3b9d72226cc74fb703d958c94> .
_:N5ed62b59a8cb41d196e523ae4ef6889d <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/d284c3c60b68f8ab18f36fbc6785d37e104a80e3b9d72226cc74fb703d958c94> .
_:Nd09e413f80944e0088bfc331c8c4c121 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/d6be7512bf3f331d502e15aed8292ebbd946d677299d41a0c9b646149229e81b> .
_:Nd09e413f80944e0088bfc331c8c4c121 <http://schema.org/explain> "The lecture focuses on OS mechanisms, while the KU covers shell scripting." <http://groq.org/d6be7512bf3f331d502e15aed8292ebbd946d677299d41a0c9b646149229e81b> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Systèmes d'exploitation Objectif: (résultats d'apprentissage)\nsynchronisation/communication (Application)\n• Etre capable d'utiliser les mécanismes de synchronisation usuels sous Linux (sémaphores,\nmutexes, signaux) (Application)\n• Comprendre le principe de mémoire virtuelle (Initiation)\n• Savoir gérer les entrées/sorties sous Linux (Initiation) Course content: par le système d'exploitation y sont exposées : comment les processus se partagent-ils l'accès au\nprocesseur ? Comment se synchronisent-ils et quels mécanismes leur permettent d'échanger des\ndonnées ? Comment sont gérés la mémoire et les entrées/sorties ? Course name: http://example.org/course/UE_XLG4IU030</page1>\n        <page2>Pages: 133-134 HOURS CS Core = 2 KA Core = 0 FPL-Scripting: Shell Scripting CS\nCore: 1\\. Error/exception handling 2\\. Piping (See also: AR-Organization, SF-\nOverview, OS-Process) 3\\. System commands (See also: SF-Overview) a. Interface\nwith operating systems (See also: SF-Overview, OS-Principles) 4\\. Environment\nvariables (See also: SF-Overview) 5\\. File abstraction and operators (See\nalso: SDF-Fundamentals, OS-Files, SF-Resource) 6\\. Data structures, such as\narrays and lists. (See also: AL-Foundational, SDF-Fundamentals, SDFData-\nStructures) 7\\. Regular expressions (See also: AL-Models) 8\\. Programs and\nprocesses (See also: OS-Process) 9\\. Workflow Illustrative learning outcomes:\nCS Core: 1\\. Create and execute automated scripts to manage various system\ntasks. 2\\. Solve various text processing problems through scripting.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/d6be7512bf3f331d502e15aed8292ebbd946d677299d41a0c9b646149229e81b> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/has_schema_type> _:Nd09e413f80944e0088bfc331c8c4c121 <http://groq.org/d6be7512bf3f331d502e15aed8292ebbd946d677299d41a0c9b646149229e81b> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/d6be7512bf3f331d502e15aed8292ebbd946d677299d41a0c9b646149229e81b> .
_:Nd09e413f80944e0088bfc331c8c4c121 <http://schema.org/answer> "0" <http://groq.org/d6be7512bf3f331d502e15aed8292ebbd946d677299d41a0c9b646149229e81b> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU030" <http://groq.org/d6be7512bf3f331d502e15aed8292ebbd946d677299d41a0c9b646149229e81b> .
_:N222b6beeb68c4fcdbf7765a9d27fa8ea <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/fbf4ec78a43b7943c976bdb8b63b708f01dd5344469a5409e700c592e8d32ae3> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU030" <http://groq.org/fbf4ec78a43b7943c976bdb8b63b708f01dd5344469a5409e700c592e8d32ae3> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/fbf4ec78a43b7943c976bdb8b63b708f01dd5344469a5409e700c592e8d32ae3> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU030</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/fbf4ec78a43b7943c976bdb8b63b708f01dd5344469a5409e700c592e8d32ae3> .
_:N222b6beeb68c4fcdbf7765a9d27fa8ea <http://schema.org/explain> "The lecture does not cover the KU's topics." <http://groq.org/fbf4ec78a43b7943c976bdb8b63b708f01dd5344469a5409e700c592e8d32ae3> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/has_schema_type> _:N222b6beeb68c4fcdbf7765a9d27fa8ea <http://groq.org/fbf4ec78a43b7943c976bdb8b63b708f01dd5344469a5409e700c592e8d32ae3> .
_:N222b6beeb68c4fcdbf7765a9d27fa8ea <http://schema.org/answer> "0" <http://groq.org/fbf4ec78a43b7943c976bdb8b63b708f01dd5344469a5409e700c592e8d32ae3> .

