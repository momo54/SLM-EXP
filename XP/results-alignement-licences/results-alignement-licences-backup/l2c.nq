<http://example.org/course/UE_XLG4AU010> <http://example.org/course/parcours> "LAS SVT Biologie Ecologie option Santé" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3MU050> <http://example.org/course/hours> "TOTAL : 40h Répartition : CM : 16h TD : 24h CI : 0h TP : 0h EAD : 0h" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU050> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU070> <http://example.org/course/objective> "(résultats d'apprentissage) conséquences.\n• Pouvoir s’exprimer spontanément, très couramment, de façon précise et rendre distinctes de\nfines nuances de sens en rapport avec les sujets abordés.\n• Être capable de raisonner par soi-même." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/bibliography> "" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/location> "Lombarderie" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU070> <http://www.w3.org/2000/01/rdf-schema#label> "Simulation de gestion" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/language> "Français" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/language> "Français" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/course/location> "Lombarderie" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/objective> "(résultats d'apprentissage)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/level> "Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/language> "Français" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/hours> "TOTAL : 40h Répartition : CM : 16h TD : 24h CI : 0h TP : 0h EAD : 0h" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/obtention> "La note de CCE peut contenir une ou plusieurs composantes pratiques et éventuellement une ou\nplusieurs composantes orales." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/language> "Français" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/level> "Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/course/objective> "(résultats d'apprentissage) Programmer en un langage procédurale lié à une base de données, par exemple PL/SQL ou" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/objective> "(résultats d'apprentissage)\nfaire et savoir-être) et d'un plan d'actions sur les prochaines années : à l'écrit et à l'oral\n- d'identitier et d'animer son réseau (professionnel et élargi)\n- de créer et de faire vivre ses profils numériques professionnels\n- de mener une enquête métier auprès d'un professionnel et de la restituer" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/language> "Français" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/objective> "(résultats d'apprentissage)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/semester> "3" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/level> "Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/parcours> "L2 Maths CMI Ingénierie Statistique" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/content> "Méthodes d’enseignement" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/parcours> "L2 LAS Informatique option santé" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/responsible> "PERRIN MATTHIEU" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/responsible> "Volume horaire total TOTAL : 0h Répartition : CM : 0h TD : 0h CI : 0h TP : 0h EAD : 0h" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU030> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/hours> "TOTAL : 16h Répartition : CM : 0h TD : 16h CI : 0h TP : 0h EAD : 0h" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/parcours> "L2 LAS Informatique option santé" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/course/level> "Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/code> "XLG4TU020" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/hours> "TOTAL : 16h Répartition : CM : 0h TD : 0h CI : 16h TP : 0h EAD : 0h" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/language> "Français" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/level> "Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/bibliography> "Cf page Madoc du module" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/parcours> "L2 MIASHS" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU050> <http://example.org/course/parcours> "L2 Informatique" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/responsible> "Volume horaire total TOTAL : 16h Répartition : CM : 0h TD : 0h CI : 16h TP : 0h EAD : 0h" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU060> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/methods> "skills)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/content> "Méthodes d’enseignement" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3MU050> <http://example.org/course/obtention> "La note de CCE peut contenir une ou plusieurs composantes pratiques et éventuellement une ou\nplusieurs composantes orales." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/code> "XLG3TU030" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/parcours> "Physique-Mathématiques" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU030> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3AU010> <http://www.w3.org/2000/01/rdf-schema#label> "2nd year English S3" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/course/bibliography> "" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/content> "Méthodes d’enseignement" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3MU050> <http://example.org/course/semester> "3" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/language> "Français" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3MU050> <http://example.org/course/bibliography> "•" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/parcours> "option santé" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/code> "XLG3TU010" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/objective> "(résultats d'apprentissage)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/location> "Niveau Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/responsible> "JABER GUILHEM" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/course/methods> "cours au travers d’activités et de situations pédagogiques variées." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/code> "XLG3TU020" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU050> <http://example.org/course/content> "approfondir les connaissances dans le langage TypeScript, déjà vu en L1\nprésenter un framework de développement web écrit en TypeScript, comme Angular ou Vue." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/semester> "3" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/parcours> "" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU020> <http://www.w3.org/2000/01/rdf-schema#label> "Unité Enseignement de Découverte" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/obtention> "Programme" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU060> <http://example.org/course/level> "Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/course/content> "Approche économique de l’entreprise" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU020> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU050> <http://example.org/course/bibliography> "" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/location> "Lombarderie" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/content> "• Langages algébriques\n- Grammaire algébrique\n- Arbre de dérivation\n- Automates à pile\n• Hiérarchie de Chomsky\n- Classification des grammaires;\n- Algorithmes de reconnaissance pour les grammaires de type 1 et 2\n• Analyse lexicale et syntaxique\n- TP de flex et bison" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/obtention> "Programme" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU050> <http://example.org/course/methods> "Langue d’enseignement Français" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU020> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/responsible> "KERVISION SYLVIE" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/course/parcours> "L2 Informatique" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/parcours> "OPT/IM" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU070> <http://example.org/course/bibliography> "" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU060> <http://example.org/course/parcours> "L2 Informatique" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU070> <http://example.org/course/hours> "TOTAL : 32h Répartition : CM : 0h TD : 0h CI : 12h TP : 20h EAD : 0h" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/course/location> "Lombarderie" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU060> <http://example.org/course/evaluation> "Création numérique 100%" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/parcours> "L2 Physique" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/methods> "- 9 séances de cours en ligne\n- 3 séances de TD en fin de module, spécifiques à chaque parcours" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU060> <http://example.org/course/hours> "TOTAL : 32h Répartition : CM : 5.34h TD : 13.33h CI : 0h TP : 13.33h EAD : 0h" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/evaluation> "Programmation à Objets 100%" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/course/language> "Français\n•" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/semester> "3" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/evaluation> "Algorithmique et Structures de données 2 100%" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/responsible> "GRANVILLIERS LAURENT" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/semester> "4" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/parcours> "Chimie-Biologie" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3MU050> <http://example.org/course/responsible> "PERRIN MATTHIEU" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU040> <http://www.w3.org/2000/01/rdf-schema#label> "Bases de données 2" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/location> "Niveau Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/level> "Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/course/evaluation> "Bases de données 2 100%" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/course/parcours> "L2 LAS Informatique option santé" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/evaluation> "Enjeux de la transition écologique 100%" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/evaluation> "Stage libre 100%" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/course/content> "•" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/code> "XLG3IU010" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3MU050> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/parcours> "Economie" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/parcours> "L2 Physique CMI Physique-Mécanique" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU020> <http://www.w3.org/2000/01/rdf-schema#label> "Langages et automates" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU060> <http://example.org/course/bibliography> "" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/code> "XLG3AU010" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/level> "Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/parcours> "L2 LAS SVT Biologie Ecologie option" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/code> "XLG4AU010" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/course/methods> "L’enseignement se fait en CM, TD et TP en présentiel." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/course/evaluation> "Connaissance de l'entreprise 100%" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/methods> "Langue d’enseignement Français" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/hours> "TOTAL : 10.67h Répartition : CM : 0h TD : 10.67h CI : 0h TP : 0h EAD : 0h" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/objective> "(résultats d'apprentissage)\ndonnées (itératifs et récursifs)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/parcours> "L2 Informatique" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/content> "• Interprétation, modèle, satisfiabilité, validité\n• Correspondance avec le système de preuve: correction et complétude\n4) Calcul des prédicats\n• Manipulation des quantificateurs\n• Skolémisation, forme clausale\n• Théorie logique\n5) Raisonner automatiquement sur les formules logique\n• Algorithme d'unification\n• Algorithme de résolution" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/code> "XLG4TU030" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/prerequisite> "(s) • Informatique fondamentale 1 (913 17 LG 3 INF UE 814)\n• Programmation orientée objets (913 17 LG 3 INF UE 1160)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/bibliography> "Collection Sciences Sup, janvier 2016, 384 pages." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU070> <http://example.org/course/location> "Lombarderie" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/semester> "4" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/course/parcours> "L2 LAS Informatique option santé" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/language> "Français\n- Jaume, M., Journault M., Lésot M.-J., Manoury P., Mounier I. (2020) Logique pour l'informatique." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/responsible> "RUSU Irena" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3MU050> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU050> <http://example.org/course/language> "Français" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU030> <http://www.w3.org/2000/01/rdf-schema#label> "Stage libre" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/bibliography> "and Tools) de Alfred V. Aho, Ravi Sethi, Jeffrey D. Ullman et Monica S. Lam (2ème édition)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/evaluation> "2nd year English S4 100%" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU050> <http://example.org/course/evaluation> "Développement web client 100%" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/methods> "Langue d’enseignement Français\n•" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/hours> "TOTAL : 0h Répartition : CM : 0h TD : 0h CI : 0h TP : 0h EAD : 0h" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU070> <http://example.org/course/content> "Simulation de la gestion ou jeu d’entreprise sur plusieurs exercices d’une entreprise dans un milieu\nconcurrentiel avec un focus sur les décisions de marketing." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/parcours> "OPT/IM" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU050> <http://example.org/course/level> "Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/parcours> "Chimie" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU050> <http://example.org/course/hours> "TOTAL : 40h Répartition : CM : 13.34h TD : 13.33h CI : 0h TP : 13.33h EAD : 0h" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4MU060> <http://www.w3.org/2000/01/rdf-schema#label> "Algèbre linéaire" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/parcours> "L2 LAS Chimie option Santé" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/objective> "(résultats d'apprentissage)\nsynchronisation/communication (Application)\n• Etre capable d'utiliser les mécanismes de synchronisation usuels sous Linux (sémaphores,\nmutexes, signaux) (Application)\n• Comprendre le principe de mémoire virtuelle (Initiation)\n• Savoir gérer les entrées/sorties sous Linux (Initiation)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/parcours> "Info-Maths" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/course/hours> "TOTAL : 40h Répartition : CM : 10.67h TD : 16h CI : 0h TP : 13.33h EAD : 0h" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/bibliography> "- David, R., Nour K., and Raffalli, (2001) C. Introduction à la Logique, Théorie de la démonstration." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/evaluation> "Controverses scient. et techniques dans l’histoire 0%" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/code> "XLG4TU010" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/parcours> "Info-Maths" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/course/parcours> "L2 Informatique" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/hours> "TOTAL : 40h Répartition : CM : 8h TD : 20h CI : 0h TP : 12h EAD : 0h" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/parcours> "Physique-" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/parcours> "option Santé" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU050> <http://example.org/course/parcours> "L2 LAS Informatique option santé" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/level> "Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/course/obtention> "La note de CCE peut contenir une ou plusieurs composantes pratiques et éventuellement une ou\nplusieurs composantes orales." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/objective> "(résultats d'apprentissage)\nconsistance et complétude d'un système de preuves.\n4. Représenter une preuve de la déduction naturelle sous forme d'arbre d'inférence.\n5. Utiliser les algorithmes d'unification et de résolution pour le raisonnement automatique sur les\nformules logiques.\n1) Raisonnement algébrique booléen\n• Dualités des connecteurs logiques\n• Formes normales conjonctive et disjonctive\n2) Systèmes de preuves\n• Système d'inférence associé à une définition inductive\n• Preuve d'appartenance à un ensemble inductif par un arbre de preuves\n• Règles d'inférences de la déduction naturelle pour la logique propositionnelle\n• Distinguer logique classique et logique intuitionniste\n3) Donner du sens aux langages logique" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/course/location> "Lombarderie" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3MU050> <http://www.w3.org/2000/01/rdf-schema#label> "Introduction aux probabilités" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU010> <http://www.w3.org/2000/01/rdf-schema#label> "Algorithmique et Structures de données 1" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/language> "Français" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/parcours> "L2 MIASHS" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/obtention> "Programme" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU050> <http://example.org/course/code> "XLG4IU050" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/bibliography> "XLG4TE012 Methodologie et insertion professionnelle : PPE 2" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/course/responsible> "MONTOYA Gabriela" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/parcours> "Economie" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/level> "Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/parcours> "OPT/IM" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/bibliography> "Matt Weisfeld. The Object-Oriented Thought Process. Addison-Wesley, 5th edition, 2019." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/evaluation> "Algorithmique et Structures de données 1 100%" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU060> <http://example.org/course/language> "Français" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/semester> "4" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/course/semester> "4" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3MU050> <http://example.org/course/code> "XLG3MU050" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3MU050> <http://example.org/course/methods> "Enseignement en présentiel" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU010> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/bibliography> "" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/bibliography> "Donald E. Knuth. The Art of Programming - Volume 1: Fundamental Algorithms. Addison-Wesley,\n1997." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/language> "Français" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/parcours> "option santé" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/parcours> "Sciences de l'environnement" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/level> "Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/course/parcours> "L2 Informatique" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/evaluation> "Systèmes d'exploitation 100%" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU050> <http://www.w3.org/2000/01/rdf-schema#label> "Développement web client" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU050> <http://example.org/course/location> "Lombarderie" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU020> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/prerequisite> "(s)\n• Introduction au développement logiciel (913 17 LG 2 INF UE 1495)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/course/parcours> "L2 LAS Informatique option santé" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/methods> "Enseignement en présentiel" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/semester> "3" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/semester> "4" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/bibliography> "•" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/location> "Niveau Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/location> "Niveau Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU060> <http://example.org/course/parcours> "L2 LAS Informatique option santé" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3MU050> <http://example.org/course/level> "Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/methods> "Enseignement en présentiel" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU050> <http://example.org/course/obtention> "Programme" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/course/responsible> "CATALO MARIE" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/objective> "(résultats d'apprentissage)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU070> <http://example.org/course/parcours> "L2 Informatique" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/bibliography> "" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/location> "Niveau Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/responsible> "Volume horaire total TOTAL : 0h Répartition : CM : 0h TD : 0h CI : 0h TP : 0h EAD : 0h" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/level> "Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU030> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/location> "Lombarderie" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU060> <http://example.org/course/objective> "(résultats d'apprentissage)\n- lister les principaux formats compris par les outils de création (Connaissance) ;\n- estimer les conséquences de choix de format sur la création (Analyse) ;\n- décrire les principaux paradigmes de création numérique (connaissance) ;\n- programmer une application de création numérique répondant à un cahier des\ncharges (Application) ;\n- concevoir un algorithme engendrant une création dans un format imposé (Application) ;" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/obtention> "Programme" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/course/language> "Français" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/course/hours> "TOTAL : 40h Répartition : CM : 16h TD : 24h CI : 0h TP : 0h EAD : 0h" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU070> <http://example.org/course/prerequisite> "(s) Module « connaissance d’entreprise »" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/course/level> "Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/content> "Méthodes d’enseignement" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/parcours> "Chimie" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/hours> "TOTAL : 16h Répartition : CM : 0h TD : 16h CI : 0h TP : 0h EAD : 0h" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU060> <http://example.org/course/location> "Lombarderie" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU070> <http://example.org/course/responsible> "CATALO MARIE" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/code> "XLG4IU010" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU060> <http://example.org/course/prerequisite> "(s) • Mathématiques pour l'informatique 1 (913 17 LG 3 MA UE 919)\n• Logique, dénombrement et suites numériques (913 17 LG 2 MA UE 725)\n• Algèbre linéaire pour info (913 17 LG 2 MA UE 731)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU070> <http://example.org/course/obtention> "des pratiques fera l’objet d’un rapport écrit et d’une soutenance orale expliquant le pourquoi et le\ncomment du niveau de performance atteint par leur entreprise." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/content> "Programme des 9 séances en ligne (d’environ 1h30 de travail chacune) :" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/methods> "Distanciel : Apprentissage en autonomie d'éléments complémentaires aux cours en présentiel." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3MU050> <http://example.org/course/objective> "(résultats d'apprentissage)\n•" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/responsible> "GRANVILLIERS LAURENT" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/semester> "4" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/location> "Niveau Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3MU050> <http://example.org/course/location> "Lombarderie" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/obtention> "une ou plusieurs composantes orales." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/obtention> "Programme" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/parcours> "L2 Maths CMI Ingénierie Statistique" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU010> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU070> <http://example.org/course/language> "Français" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/obtention> "une ou plusieurs composantes orales." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/responsible> "BECHET Denis" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3MU050> <http://example.org/course/language> "Français\n•" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/course/obtention> "une ou plusieurs composantes orales." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/location> "Lombarderie" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/parcours> "L2 Informatique" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU070> <http://example.org/course/level> "Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/hours> "TOTAL : 18h Répartition : CM : 12.667h TD : 5.333h CI : 0h TP : 0h EAD : 0h" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/parcours> "L2 Info-Maths CMI" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3MU050> <http://example.org/course/content> "Définition et calcul de la probabilité conditionnelle\n•" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU010> <http://www.w3.org/2000/01/rdf-schema#label> "Algorithmique et Structures de données 2" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU070> <http://example.org/course/code> "XLG4IU070" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/prerequisite> "(s)\n• Fonctionnement des ordinateurs (913 17 LG 2 INF UE 1266)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/responsible> "LABBE LUCILE" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU070> <http://example.org/course/methods> "décisions et faire le tri dans toutes les informations disponibles. La méthode d’enseignement\nconsiste à exploiter cette situation qui génère une demande de la part des étudiants soit dans le\ncadre d’échanges avec chaque groupe-entreprise soit d’échanges avec l’ensemble des entreprises." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/semester> "3" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/course/obtention> "une ou plusieurs composantes orales." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4MU060> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/prerequisite> "(s) Fonctionnement des ordinateurs (X12I020)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/methods> "Langue d’enseignement Français" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU050> <http://example.org/course/responsible> "Volume horaire total TOTAL : 40h Répartition : CM : 13.34h TD : 13.33h CI : 0h TP : 13.33h EAD : 0h" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/parcours> "L2" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/location> "Lombarderie" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/content> "- présentation orale de la restitution de l'enquête et des recherches sur le métier\n- équivalent de 8 TD + présentation orale des enquêtes:\n- identication de ses valeurs\n- indentification de ses compétences\n- consrtruction de son projet professionnel et personnel\n- présentation de son projet" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/course/bibliography> "Boyd, Vandenberghe : Introduction to Applied Linear Algebra." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU060> <http://example.org/course/responsible> "ENGUEHARD CHANTAL" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU060> <http://example.org/course/obtention> "une ou plusieurs composantes orales." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/parcours> "L2 Physique" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/course/code> "XLG3TU040" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/methods> "Enseignement en présentiel" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/hours> "TOTAL : 40h Répartition : CM : 8h TD : 20h CI : 0h TP : 12h EAD : 0h" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/course/hours> "TOTAL : 36h Répartition : CM : 0h TD : 0h CI : 36h TP : 0h EAD : 0h" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/objective> "(résultats d'apprentissage)\n•\nÉvaluer une implémentation de structure de données en temps et en place mémoire (coûts minimal,\nmaximal, amorti)\n•" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU070> <http://example.org/course/semester> "4" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/course/code> "XLG3IU040" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/evaluation> "Logique pour l'informatique 100%" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/responsible> "LABBE LUCILE" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/code> "XLG3IU020" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3MU050> <http://example.org/course/parcours> "L2 Informatique" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/course/objective> "(résultats d'apprentissage)\nl’entreprise dans son environnement)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/evaluation> "Methodologie et insertion professsionelle : PPE 100%" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/bibliography> "" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU020> <http://www.w3.org/2000/01/rdf-schema#label> "Enjeux de la transition écologique" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/language> "Français" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU070> <http://example.org/course/parcours> "L2 LAS Informatique option santé" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/objective> "(résultats d'apprentissage)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/methods> "Langue d’enseignement Français" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/parcours> "Info-Maths" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/level> "Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/hours> "TOTAL : 0h Répartition : CM : 0h TD : 0h CI : 0h TP : 0h EAD : 0h" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/evaluation> "Langages et automates 100%" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/semester> "3" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/parcours> "OPT/IM" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/parcours> "MIASHS" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/evaluation> "2nd year English S3 100%" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/parcours> "L2 LAS Informatique\noption santé" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/parcours> "option Santé" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3AU010> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU020> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/semester> "4" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/course/responsible> "CANTIN GUILLAUME" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/parcours> "L2 Chimie" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/responsible> "KERVISION SYLVIE" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/level> "Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU030> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/parcours> "L2 Informatique" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/course/objective> "(résultats d'apprentissage) Appliquer un algorithme adéquat pour résoudre un système linéaire\n•" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU010> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/obtention> "Programme\n- UED (XLG4TE020)\n- Sport (XLG4TE101)\n- Danse et maths (XLG4TE102)\n- L'environnement est ma santé (XLG4TE103)\n- Science, culture, société (XLG4TE104)\n- Techniques d’imagerie de l’infiniment petit (XLG4TE105)\n- Présentation de l'UFR Sciences et Techniques (XLG4TE106)\n- Publication scientifique et mécaniques du livre (XLG4TE107)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/objective> "(résultats d'apprentissage)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU010> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/language> "Français" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU010> <http://www.w3.org/2000/01/rdf-schema#label> "Methodologie et insertion professionnelle S4" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/course/semester> "3" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/code> "XLG3IU030" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/level> "Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/hours> "TOTAL : 40h Répartition : CM : 13.33h TD : 18.67h CI : 0h TP : 8h EAD : 0h" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU040> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU020> <http://www.w3.org/2000/01/rdf-schema#label> "Logique pour l'informatique" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/content> "Méthodes d’enseignement" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/parcours> "Economie" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/content> "Classes abstraites" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU050> <http://example.org/course/semester> "4" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/hours> "TOTAL : 40h Répartition : CM : 9.33h TD : 14.67h CI : 0h TP : 16h EAD : 0h" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/content> "Méthodes d’enseignement" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/bibliography> "XLG4TE101 Sport" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/course/methods> "Présentiel : Cours, TD." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/parcours> "L2 Informatique" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/location> "Niveau Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/parcours> "Informatique" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/hours> "TOTAL : 4h Répartition : CM : 0h TD : 4h CI : 0h TP : 0h EAD : 0h" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/course/content> "Vues et contrôle d’accès\n5." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4AU010> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/obtention> "Programme" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/evaluation> "Stage libre 100%" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/language> "Français" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU060> <http://example.org/course/code> "XLG4IU060" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/obtention> "• une évaluation de la restitution de leur poster métier (suite à un entretien avec un professionnel,\nles étudiants, en groupe de 3 à 4, doivent en faire une restitution avec support et présentation\norale)." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/bibliography> "Dernière modification par PATRICIA BERTONCINI, le 2024-08-23 12:41:45" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/course/code> "XLG4MU060" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/objective> "(résultats d'apprentissage)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/course/semester> "3" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU050> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/course/methods> "Bibliographie" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/content> "par le système d'exploitation y sont exposées : comment les processus se partagent-ils l'accès au\nprocesseur ? Comment se synchronisent-ils et quels mécanismes leur permettent d'échanger des\ndonnées ? Comment sont gérés la mémoire et les entrées/sorties ?" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/obtention> "une ou plusieurs composantes orales." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/evaluation> "Methodologie et insertion professionnelle : PPE 2 0%" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/course/content> "Structures de données non-linéaires associatives (table associative, ensemble, classe-union)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/methods> "Langue d’enseignement Français" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/location> "Niveau Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU070> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/course/evaluation> "Algèbre linéaire 100%" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU060> <http://example.org/course/semester> "4" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/parcours> "Physique-" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/course/methods> "Langue d’enseignement Français" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/obtention> "Programme" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3MU050> <http://example.org/course/evaluation> "Introduction aux probabilités 100%" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU010> <http://www.w3.org/2000/01/rdf-schema#label> "Methodologie et insertion professionnelle S3" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/course/language> "Français" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/course/obtention> "La note de CCE peut contenir une ou plusieurs composantes pratiques et éventuellement une ou\nplusieurs composantes orales." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/course/code> "XLG4IU030" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/course/bibliography> "•" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/course/level> "Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/course/parcours> "L2 MIASHS" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU070> <http://example.org/course/evaluation> "Simulation de gestion 100%" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU060> <http://example.org/course/content> "- principaux supports de création numérique et limitations associées (bitmap,vectoriel, 2D, 3D,\ndécoupes, impressions, machine outils numériques,etc.);\n- principaux formats compris par les outils de création et les conséquences sur la création;\n- paradigmes de création numérique (impératif, événementiel, émergeant, etc.);" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/parcours> "L2 LAS Physique option Santé" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/parcours> "L2 Info-Maths CMI OPT/IM" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/course/parcours> "L2" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU030> <http://www.w3.org/2000/01/rdf-schema#label> "Stage libre" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/course/level> "Licence" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3MU050> <http://example.org/course/parcours> "L2 LAS Informatique option santé" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/parcours> "L2 LAS Mathématiques option Santé" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU030> <http://www.w3.org/2000/01/rdf-schema#label> "Programmation à Objets" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/code> "XLG4IU020" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/content> "et mise en pratique dans l’approche de résolution de problèmes « Diviser pour régner »." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU060> <http://example.org/course/methods> "Travaux Pratiques sur machine" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/location> "Lombarderie" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/parcours> "" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU030> <http://www.w3.org/2000/01/rdf-schema#label> "Systèmes d'exploitation" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/semester> "4" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4AU010> <http://www.w3.org/2000/01/rdf-schema#label> "2nd year English S4" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU060> <http://www.w3.org/2000/01/rdf-schema#label> "Création numérique" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/course/objective> "(résultats d'apprentissage) Connaître les mécanismes d’héritage et de polymorphisme" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU040> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.org/course/UE> <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/course/responsible> "DUMAY JUSTINE" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/course/objective> "(résultats d'apprentissage)\n5." <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4IU050> <http://example.org/course/objective> "(résultats d'apprentissage)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/language> "Français\n•" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/methods> "Langue d’enseignement Français" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU040> <http://www.w3.org/2000/01/rdf-schema#label> "Connaissance de l'entreprise" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/parcours> "L2 SVT" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/course/semester> "3" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/course/hours> "TOTAL : 40h Répartition : CM : 10.67h TD : 16h CI : 0h TP : 13.33h EAD : 0h" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/course/prerequisite> "(s)" <http://readrdf.org/065e5eb4b81f8b8246b950d02fcd6ab807a3a9e71a809930165ddf0af60d792e> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/c78c4e52e9887b5307572fad631173aed447cf498b89ab30d8a9ba8450628a67> .
_:Nbc683424ef8c49279ab8c732bd4d3f6c <http://schema.org/explain> "The lecture focuses on object-oriented programming concepts, while the KU covers functional programming topics." <http://groq.org/c78c4e52e9887b5307572fad631173aed447cf498b89ab30d8a9ba8450628a67> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Programmation à Objets Objectif: (résultats d'apprentissage) Connaître les mécanismes d’héritage et de polymorphisme Course content: Classes abstraites Course name: http://example.org/course/UE_XLG3IU030</page1>\n        <page2>Pages: 131-132-133 HOURS CS Core = 4 KA Core = 3 FPL-Functional: Functional\nProgramming CS Core: 1\\. Lambda expressions and evaluation: (See also: AL-\nModels, FPL-Formalism) a. Variable binding and scope rules. (See also: SDF-\nFundamentals) b. Parameter-passing. (See also: SDF-Fundamentals) c. Nested\nlambda expressions and reduction order. 2\\. Effect-free programming: a.\nFunction calls have no side effects, facilitating compositional reasoning. b.\nImmutable variables and data copying vs reduction. c. Use of recursion vs\nloops vs pipelining (map/reduce). 3\\. Processing structured data (e.g., trees)\nvia functions with cases for each data variant: a. Functions defined over\ncompound data in terms of functions applied to the constituent pieces. b.\nPersistent data structures. 4\\. Using higher-order functions (taking,\nreturning, and storing functions). KA Core: 5\\. Metaprogramming and\nreflection. 6\\. Function closures (functions using variables in the enclosing\nlexical environment). a. Basic meaning and definition - creating closures at\nrun-time by capturing the environment. b. Canonical idioms: call-backs,\narguments to iterators, reusable code via function arguments. c. Using a\nclosure to encapsulate data in its environment. d. Delayed versus eager\nevaluation. Non-core: 7\\. Graph reduction machine and call-by-need. 8\\.\nImplementing delayed evaluation. 9\\. Integration with logic programming\nparadigm using concepts such as equational logic, narrowing, residuation and\nsemantic unification. (See also: FPL-Logic) 10\\. Integration with other\nprogramming paradigms such as imperative and object-oriented. Illustrative\nlearning outcomes: CS Core: 1\\. Develop basic algorithms that avoid assigning\nto mutable states or considering reference equality. 2\\. Develop useful\nfunctions that take and return other functions. 3\\. Compare and contrast how\ncomputational solutions to a problem differ in procedural, functional, and\nobject-oriented approaches. 4\\. Compare and contrast mechanisms to define and\nprotect data elements within procedural, functional, and object-oriented\napproaches. KA Core: 5\\. Explain a simple example of lambda expression being\nimplemented using a virtual machine, such as a SECD machine, showing storage\nand reclaim of the environment. 6\\. Correctly interpret variables and lexical\nscope in a program using function closures. 7\\. Use functional encapsulation\nmechanisms such as closures and modular interfaces. 8\\. Compare and contrast\nstateful vs stateless execution. 9\\. Define and use iterators and other\noperations on aggregates, including operations that take functions as\narguments, in multiple programming languages, selecting the most natural\nidioms for each language. (See also: FPL-OOP) Non-core: 10\\. Illustrate graph\nreduction using a l-expression using a shared subexpression. 11\\. Illustrate\nthe execution of a simple nested l-expression using an abstract machine, such\nas an ABC machine. 12\\. Illustrate narrowing, residuation, and semantic\nunification using simple illustrative examples. 13\\. Illustrate the\nconcurrency constructs using simple programming examples of known concepts\nsuch as a buffer being read and written concurrently or sequentially. (See\nalso: FPL-OOP)</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/c78c4e52e9887b5307572fad631173aed447cf498b89ab30d8a9ba8450628a67> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/has_schema_type> _:Nbc683424ef8c49279ab8c732bd4d3f6c <http://groq.org/c78c4e52e9887b5307572fad631173aed447cf498b89ab30d8a9ba8450628a67> .
_:Nbc683424ef8c49279ab8c732bd4d3f6c <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/c78c4e52e9887b5307572fad631173aed447cf498b89ab30d8a9ba8450628a67> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU030" <http://groq.org/c78c4e52e9887b5307572fad631173aed447cf498b89ab30d8a9ba8450628a67> .
_:Nbc683424ef8c49279ab8c732bd4d3f6c <http://schema.org/answer> "0" <http://groq.org/c78c4e52e9887b5307572fad631173aed447cf498b89ab30d8a9ba8450628a67> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/has_schema_type> _:N80731f4476324668bd1eb27e18967ed0 <http://groq.org/1ebc3c91950de8af7c5f7a7774e72c76a3b62607219bbb54b2e5361a9fec38ef> .
_:N80731f4476324668bd1eb27e18967ed0 <http://schema.org/answer> "1" <http://groq.org/1ebc3c91950de8af7c5f7a7774e72c76a3b62607219bbb54b2e5361a9fec38ef> .
_:N80731f4476324668bd1eb27e18967ed0 <http://schema.org/explain> "The lecture covers 7 out of 8 learning outcomes and 4 out of 5 fundamental concepts, substantially covering the knowledge described in the KU." <http://groq.org/1ebc3c91950de8af7c5f7a7774e72c76a3b62607219bbb54b2e5361a9fec38ef> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/1ebc3c91950de8af7c5f7a7774e72c76a3b62607219bbb54b2e5361a9fec38ef> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU030" <http://groq.org/1ebc3c91950de8af7c5f7a7774e72c76a3b62607219bbb54b2e5361a9fec38ef> .
_:N80731f4476324668bd1eb27e18967ed0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/1ebc3c91950de8af7c5f7a7774e72c76a3b62607219bbb54b2e5361a9fec38ef> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU030</page1>\n        <page2>Pages: 150-151 HOURS CS Core = 3 KA Core = 2 GIT-Fundamentals: Fundamental\nConcepts CS Core: 1\\. Overview of graphics and visualization. 2\\. Basic\ngraphics pipeline architecture. 3\\. 2D and 3D transformations. 4\\.\nRasterization and rendering techniques. 5\\. Fundamental shading models. KA\nCore: 6\\. Advanced rendering techniques. 7\\. Applications of visualization in\ndifferent fields. 8\\. Interaction methods for graphical environments.\nIllustrative Learning Outcomes: 1\\. Explain the graphics rendering pipeline.\n2\\. Differentiate between rasterization and ray tracing. 3\\. Apply\ntransformations to 2D and 3D models.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/1ebc3c91950de8af7c5f7a7774e72c76a3b62607219bbb54b2e5361a9fec38ef> .
_:N61bf935c08a84d1c9a952e3c00295b55 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/81a10d70e39c6e55b5c6cab6b9fee04215825365c162e41187fde95dd6504a83> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/has_schema_type> _:N61bf935c08a84d1c9a952e3c00295b55 <http://groq.org/81a10d70e39c6e55b5c6cab6b9fee04215825365c162e41187fde95dd6504a83> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Programmation à Objets Objectif: (résultats d'apprentissage) Connaître les mécanismes d’héritage et de polymorphisme Course content: Classes abstraites Course name: http://example.org/course/UE_XLG3IU030</page1>\n        <page2>Pages: 131-132-133 HOURS CS Core = 4 KA Core = 3 FPL-Functional: Functional\nProgramming CS Core: 1\\. Lambda expressions and evaluation: (See also: AL-\nModels, FPL-Formalism) a. Variable binding and scope rules. (See also: SDF-\nFundamentals) b. Parameter-passing. (See also: SDF-Fundamentals) c. Nested\nlambda expressions and reduction order. 2\\. Effect-free programming: a.\nFunction calls have no side effects, facilitating compositional reasoning. b.\nImmutable variables and data copying vs reduction. c. Use of recursion vs\nloops vs pipelining (map/reduce). 3\\. Processing structured data (e.g., trees)\nvia functions with cases for each data variant: a. Functions defined over\ncompound data in terms of functions applied to the constituent pieces. b.\nPersistent data structures. 4\\. Using higher-order functions (taking,\nreturning, and storing functions). KA Core: 5\\. Metaprogramming and\nreflection. 6\\. Function closures (functions using variables in the enclosing\nlexical environment). a. Basic meaning and definition - creating closures at\nrun-time by capturing the environment. b. Canonical idioms: call-backs,\narguments to iterators, reusable code via function arguments. c. Using a\nclosure to encapsulate data in its environment. d. Delayed versus eager\nevaluation. Non-core: 7\\. Graph reduction machine and call-by-need. 8\\.\nImplementing delayed evaluation. 9\\. Integration with logic programming\nparadigm using concepts such as equational logic, narrowing, residuation and\nsemantic unification. (See also: FPL-Logic) 10\\. Integration with other\nprogramming paradigms such as imperative and object-oriented. Illustrative\nlearning outcomes: CS Core: 1\\. Develop basic algorithms that avoid assigning\nto mutable states or considering reference equality. 2\\. Develop useful\nfunctions that take and return other functions. 3\\. Compare and contrast how\ncomputational solutions to a problem differ in procedural, functional, and\nobject-oriented approaches. 4\\. Compare and contrast mechanisms to define and\nprotect data elements within procedural, functional, and object-oriented\napproaches. KA Core: 5\\. Explain a simple example of lambda expression being\nimplemented using a virtual machine, such as a SECD machine, showing storage\nand reclaim of the environment. 6\\. Correctly interpret variables and lexical\nscope in a program using function closures. 7\\. Use functional encapsulation\nmechanisms such as closures and modular interfaces. 8\\. Compare and contrast\nstateful vs stateless execution. 9\\. Define and use iterators and other\noperations on aggregates, including operations that take functions as\narguments, in multiple programming languages, selecting the most natural\nidioms for each language. (See also: FPL-OOP) Non-core: 10\\. Illustrate graph\nreduction using a l-expression using a shared subexpression. 11\\. Illustrate\nthe execution of a simple nested l-expression using an abstract machine, such\nas an ABC machine. 12\\. Illustrate narrowing, residuation, and semantic\nunification using simple illustrative examples. 13\\. Illustrate the\nconcurrency constructs using simple programming examples of known concepts\nsuch as a buffer being read and written concurrently or sequentially. (See\nalso: FPL-OOP)</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/81a10d70e39c6e55b5c6cab6b9fee04215825365c162e41187fde95dd6504a83> .
_:N61bf935c08a84d1c9a952e3c00295b55 <http://schema.org/answer> "1" <http://groq.org/81a10d70e39c6e55b5c6cab6b9fee04215825365c162e41187fde95dd6504a83> .
_:N61bf935c08a84d1c9a952e3c00295b55 <http://schema.org/explain> "The lecture covers a significant portion of the KU, including topics such as lambda expressions, effect-free programming, and higher-order functions, which are all core components of the KU." <http://groq.org/81a10d70e39c6e55b5c6cab6b9fee04215825365c162e41187fde95dd6504a83> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU030" <http://groq.org/81a10d70e39c6e55b5c6cab6b9fee04215825365c162e41187fde95dd6504a83> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/81a10d70e39c6e55b5c6cab6b9fee04215825365c162e41187fde95dd6504a83> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4AU010" <http://groq.org/75cbd42f3854cfcce765b504b3224adf705e2aa936e57a50bcce2e9fcde32f19> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/75cbd42f3854cfcce765b504b3224adf705e2aa936e57a50bcce2e9fcde32f19> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/has_schema_type> _:N75c46bc5276e4ca8b40619d98a0b57cc <http://groq.org/75cbd42f3854cfcce765b504b3224adf705e2aa936e57a50bcce2e9fcde32f19> .
_:N75c46bc5276e4ca8b40619d98a0b57cc <http://schema.org/explain> "Lecture focuses on teaching methods (English education), while KU covers technical CS topics like software architecture." <http://groq.org/75cbd42f3854cfcce765b504b3224adf705e2aa936e57a50bcce2e9fcde32f19> .
_:N75c46bc5276e4ca8b40619d98a0b57cc <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/75cbd42f3854cfcce765b504b3224adf705e2aa936e57a50bcce2e9fcde32f19> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S4 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4AU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Software Architecture: Core\nConcepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nSE-Software Architecture. 2\\. Apply principles in practical scenarios. 3\\.\nAnalyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/75cbd42f3854cfcce765b504b3224adf705e2aa936e57a50bcce2e9fcde32f19> .
_:N75c46bc5276e4ca8b40619d98a0b57cc <http://schema.org/answer> "0" <http://groq.org/75cbd42f3854cfcce765b504b3224adf705e2aa936e57a50bcce2e9fcde32f19> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/e6030ab104869ff1b9103f0dccd1abdf5f1f9337f21f2c082932cafeba1b92eb> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Création numérique Objectif: (résultats d'apprentissage)\n- lister les principaux formats compris par les outils de création (Connaissance) ;\n- estimer les conséquences de choix de format sur la création (Analyse) ;\n- décrire les principaux paradigmes de création numérique (connaissance) ;\n- programmer une application de création numérique répondant à un cahier des\ncharges (Application) ;\n- concevoir un algorithme engendrant une création dans un format imposé (Application) ; Course content: - principaux supports de création numérique et limitations associées (bitmap,vectoriel, 2D, 3D,\ndécoupes, impressions, machine outils numériques,etc.);\n- principaux formats compris par les outils de création et les conséquences sur la création;\n- paradigmes de création numérique (impératif, événementiel, émergeant, etc.); Course name: http://example.org/course/UE_XLG4IU060</page1>\n        <page2>Pages:103-103 HOURS CS Core = 1 KA Core = 0 AR-Representation: Machine-Level\nData Representation CS Core: 1\\. Overview and history of computer architecture\n(See also: SPD-Game) 2\\. Bits, bytes, and words 3\\. Unsigned, signed and two's\ncomplement representations 4\\. Numeric data representation and number bases a.\nFixed-point b. Floating-point 5\\. Representation of non-numeric data 6\\.\nRepresentation of records, arrays and UTF data types (See also: AL-\nFoundational) Illustrative Learning Outcomes: CS Core: 1\\. Discuss why\neverything in computers are data, including instructions. 2\\. Explain how\nfixed-length number representations can affect accuracy and precision. 3\\.\nDescribe how negative integers are stored in sign-magnitude and\ntwo's-complement representations. 4\\. Discuss how different formats can\nrepresent numerical data. 5\\. Explain the bit-level representation of non-\nnumeric data, such as characters, strings, records, and arrays. 6\\. Translate\nnumerical data from one format to another. 7\\. Describe how a single adder\n(without overflow detection) can handle both signed (two's complement) and\nunsigned (binary) input without \"knowing\" which format a given input is using.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/e6030ab104869ff1b9103f0dccd1abdf5f1f9337f21f2c082932cafeba1b92eb> .
<http://example.org/course/UE_XLG4IU060> <http://example.org/has_schema_type> _:N2247209c1dbb4b65a86147227ee3d74a <http://groq.org/e6030ab104869ff1b9103f0dccd1abdf5f1f9337f21f2c082932cafeba1b92eb> .
_:N2247209c1dbb4b65a86147227ee3d74a <http://schema.org/answer> "0" <http://groq.org/e6030ab104869ff1b9103f0dccd1abdf5f1f9337f21f2c082932cafeba1b92eb> .
_:N2247209c1dbb4b65a86147227ee3d74a <http://schema.org/explain> "The lecture focuses on digital creation tools and formats, while the KU covers machine-level data representation, with little overlap." <http://groq.org/e6030ab104869ff1b9103f0dccd1abdf5f1f9337f21f2c082932cafeba1b92eb> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU060" <http://groq.org/e6030ab104869ff1b9103f0dccd1abdf5f1f9337f21f2c082932cafeba1b92eb> .
_:N2247209c1dbb4b65a86147227ee3d74a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/e6030ab104869ff1b9103f0dccd1abdf5f1f9337f21f2c082932cafeba1b92eb> .
<http://example.org/faiss> <http://example.org/input> "Label: Programmation à Objets Objectif: (résultats d'apprentissage) Connaître les mécanismes d’héritage et de polymorphisme Course content: Classes abstraites Course name: http://example.org/course/UE_XLG3IU030" <http://faiss.org/47ff5cf9e80e1f46ff0c4d26fed728862246690856ffaeda61a78aedb9d86ebf> .
_:Ncb9daca9ffa44eaea32296e7db15645d <http://example.org/has_score> "0.6819768"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/47ff5cf9e80e1f46ff0c4d26fed728862246690856ffaeda61a78aedb9d86ebf> .
_:Nbc8d01c8625c4f08a3f537f64abd8d1d <http://example.org/has_score> "0.6746223"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/47ff5cf9e80e1f46ff0c4d26fed728862246690856ffaeda61a78aedb9d86ebf> .
_:Ncb9daca9ffa44eaea32296e7db15645d <http://example.org/has_chunk> ".\nc. Relationship between subtyping and inheritance.\nKA Core:\n11. Collection classes, iterators, and other common library components.\n12. Metaprogramming and reflection.\nIllustrative Learning Outcomes:\nCS Core:\n1. Enumerate the differences between imperative and object-oriented programming paradigms.\n2. Compose a class through design, implementation, and testing to meet behavioral requirements.\n3. Build a simple class hierarchy utilizing subclassing that allows code to be reused for distinct\nsubclasses.\n4" <http://faiss.org/47ff5cf9e80e1f46ff0c4d26fed728862246690856ffaeda61a78aedb9d86ebf> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/is_aligned_with> _:Nbc8d01c8625c4f08a3f537f64abd8d1d <http://faiss.org/47ff5cf9e80e1f46ff0c4d26fed728862246690856ffaeda61a78aedb9d86ebf> .
_:N102f84ff7e21423495a5dc75ab0fada8 <http://example.org/has_chunk> ". (See also: AI-LRR)\n13. Integration with other programming paradigms such as object-oriented programming.\n14. Advance programming constructs such as difference-lists, creating user defined data structures, set\nof, etc.\nIllustrative learning outcomes:\nKA Core:\n1. Use a logic language to implement a conventional algorithm.\n2. Use a logic language to implement an algorithm employing implicit search using clauses, relations,\nand cuts.\n3" <http://faiss.org/47ff5cf9e80e1f46ff0c4d26fed728862246690856ffaeda61a78aedb9d86ebf> .
_:Nbc8d01c8625c4f08a3f537f64abd8d1d <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Functional_Functional_Programming.txt> <http://faiss.org/47ff5cf9e80e1f46ff0c4d26fed728862246690856ffaeda61a78aedb9d86ebf> .
_:N102f84ff7e21423495a5dc75ab0fada8 <http://example.org/has_score> "0.6790555"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/47ff5cf9e80e1f46ff0c4d26fed728862246690856ffaeda61a78aedb9d86ebf> .
_:Nbc8d01c8625c4f08a3f537f64abd8d1d <http://example.org/has_chunk> ". (See also: FPL-Logic)\n10. Integration with other programming paradigms such as imperative and object-oriented.\nIllustrative learning outcomes:\nCS Core:\n1. Develop basic algorithms that avoid assigning to mutable states or considering reference equality.\n2. Develop useful functions that take and return other functions.\n3. Compare and contrast how computational solutions to a problem differ in procedural, functional,\nand object-oriented approaches.\n4" <http://faiss.org/47ff5cf9e80e1f46ff0c4d26fed728862246690856ffaeda61a78aedb9d86ebf> .
_:N102f84ff7e21423495a5dc75ab0fada8 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Logic_Logic_Programming.txt> <http://faiss.org/47ff5cf9e80e1f46ff0c4d26fed728862246690856ffaeda61a78aedb9d86ebf> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/is_aligned_with> _:Ncb9daca9ffa44eaea32296e7db15645d <http://faiss.org/47ff5cf9e80e1f46ff0c4d26fed728862246690856ffaeda61a78aedb9d86ebf> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/is_aligned_with> _:N102f84ff7e21423495a5dc75ab0fada8 <http://faiss.org/47ff5cf9e80e1f46ff0c4d26fed728862246690856ffaeda61a78aedb9d86ebf> .
_:Ncb9daca9ffa44eaea32296e7db15645d <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-OOP_Object-Oriented_Programming.txt> <http://faiss.org/47ff5cf9e80e1f46ff0c4d26fed728862246690856ffaeda61a78aedb9d86ebf> .
_:N53eb88cb15424f2889c957907d8f3482 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/6c5650a8951df768b226bf651c526fb41c743f437252a49fc1b603202bef4257> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/6c5650a8951df768b226bf651c526fb41c743f437252a49fc1b603202bef4257> .
_:N53eb88cb15424f2889c957907d8f3482 <http://schema.org/explain> "The lecture focuses on database-specific topics, which do not align with the broader advanced programming constructs in the KU." <http://groq.org/6c5650a8951df768b226bf651c526fb41c743f437252a49fc1b603202bef4257> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Bases de données 2 Objectif: (résultats d'apprentissage) Programmer en un langage procédurale lié à une base de données, par exemple PL/SQL ou Course content: Vues et contrôle d’accès\n5. Course name: http://example.org/course/UE_XLG3IU040</page1>\n        <page2>Pages: 144 HOURS CS Core = 0 KA Core = 0 FPL-Constructs: Advanced Programming\nConstructs Non-core: 1\\. Encapsulation mechanisms 2\\. Delayed evaluation and\ninfinite streams 3\\. Compare and contrast delayed evaluation vs eager\nevaluation 4\\. Unification vs assertion vs expression evaluation 5\\. Control\nabstractions: exception handling, continuations, monads. 6\\. Object-oriented\nabstractions: multiple inheritance, mixins, traits, multimethods 7\\.\nMetaprogramming: macros, generative programming, model-based development 8\\.\nString manipulation via pattern-matching (regular expressions) 9\\. Dynamic\ncode evaluation (\"eval\") 10\\. Language support for checking assertions,\ninvariants, and pre/post-conditions 11\\. Domain specific languages, such as\ndatabase languages, data science languages, embedded computing languages,\nsynchronous languages, hardware interface languages 12\\. Massive parallel high\nperformance computing models and languages Illustrative learning outcomes:\nNon-core: 1\\. Use various advanced programming constructs and idioms\ncorrectly. 2\\. Discuss how various advanced programming constructs aim to\nimprove program structure, software quality, and programmer productivity. 3\\.\nDiscuss how various advanced programming constructs interact with the\ndefinition and implementation of other language features.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/6c5650a8951df768b226bf651c526fb41c743f437252a49fc1b603202bef4257> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/has_schema_type> _:N53eb88cb15424f2889c957907d8f3482 <http://groq.org/6c5650a8951df768b226bf651c526fb41c743f437252a49fc1b603202bef4257> .
_:N53eb88cb15424f2889c957907d8f3482 <http://schema.org/answer> "0" <http://groq.org/6c5650a8951df768b226bf651c526fb41c743f437252a49fc1b603202bef4257> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU040" <http://groq.org/6c5650a8951df768b226bf651c526fb41c743f437252a49fc1b603202bef4257> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/d5b798c3cde7c48f6cd81e23cc236345cbd209dcd4caad7df50bdaa925e8735a> .
_:N73e02b669a8a448080d3303e20c91295 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/d5b798c3cde7c48f6cd81e23cc236345cbd209dcd4caad7df50bdaa925e8735a> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU030" <http://groq.org/d5b798c3cde7c48f6cd81e23cc236345cbd209dcd4caad7df50bdaa925e8735a> .
_:N73e02b669a8a448080d3303e20c91295 <http://schema.org/explain> "The lecture focuses on operating systems concepts, while the KU covers programming language translation and theory." <http://groq.org/d5b798c3cde7c48f6cd81e23cc236345cbd209dcd4caad7df50bdaa925e8735a> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Systèmes d'exploitation Objectif: (résultats d'apprentissage)\nsynchronisation/communication (Application)\n• Etre capable d'utiliser les mécanismes de synchronisation usuels sous Linux (sémaphores,\nmutexes, signaux) (Application)\n• Comprendre le principe de mémoire virtuelle (Initiation)\n• Savoir gérer les entrées/sorties sous Linux (Initiation) Course content: par le système d'exploitation y sont exposées : comment les processus se partagent-ils l'accès au\nprocesseur ? Comment se synchronisent-ils et quels mécanismes leur permettent d'échanger des\ndonnées ? Comment sont gérés la mémoire et les entrées/sorties ? Course name: http://example.org/course/UE_XLG4IU030</page1>\n        <page2>Pages: 139-140 HOURS CS Core = 2 KA Core = 3 FPL-Translation: Language\nTranslation and Execution CS Core: 1\\. Execution models for JIT (Just-In-\nTime), compiler, interpreter 2\\. Use of intermediate code, e.g., bytecode 3\\.\nLimitations and benefits of JIT, compiler, and interpreter 4\\. Cross\ncompilers/transpilers 5\\. BNF and extended BNF representation of context-free\ngrammar 6\\. Parse tree using a simple sentence such as arithmetic expression\nor if-then-else statement 7\\. Execution as native code or within a virtual\nmachine 8\\. Language translation pipeline: syntax analysis, parsing, optional\ntype-checking, translation/code generation and optimization, linking, loading,\nexecution KA Core: 9\\. Run-time representation of core language constructs\nsuch as objects (method tables) and functions that can be passed as parameters\nto and returned from functions (closures) 10\\. Secure compiler development\n(See also: SEC-Foundations, SEC-Coding) Illustrative learning outcomes: CS\nCore: 1\\. Explain and understand the differences between compiled, JIT, and\ninterpreted language implementations, including the benefits and limitations\nof each. 2\\. Differentiate syntax and parsing from semantics and evaluation.\n3\\. Use BNF and extended BNF to specify the syntax of simple constructs such\nas if-then-else, type declaration and iterative constructs for known languages\nsuch as C++ or Python. 4\\. Illustrate the parse tree using a simple\nsentence/arithmetic expression. 5\\. Illustrate translation of syntax diagrams\nto BNF/extended BNF for simple constructs such as if-thenelse, type\ndeclaration, iterative constructs, etc. 6\\. Illustrate ambiguity in parsing\nusing nested if-then-else/arithmetic expression and show resolution using\nprecedence order. KA-Core: 7\\. Discuss the benefits and limitations of garbage\ncollection, including the notion of reachability.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/d5b798c3cde7c48f6cd81e23cc236345cbd209dcd4caad7df50bdaa925e8735a> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/has_schema_type> _:N73e02b669a8a448080d3303e20c91295 <http://groq.org/d5b798c3cde7c48f6cd81e23cc236345cbd209dcd4caad7df50bdaa925e8735a> .
_:N73e02b669a8a448080d3303e20c91295 <http://schema.org/answer> "0" <http://groq.org/d5b798c3cde7c48f6cd81e23cc236345cbd209dcd4caad7df50bdaa925e8735a> .
_:Na865d5f773a94c078edcd5a2a22b4e4d <http://schema.org/answer> "0" <http://groq.org/fbb997269ec99c59c8364ac35d9a0a30ee9fc9c38f6dcb9a8bb1ca54b2e38396> .
_:Na865d5f773a94c078edcd5a2a22b4e4d <http://schema.org/explain> "No overlap in subject matter; ecological transition vs formal methods in CS" <http://groq.org/fbb997269ec99c59c8364ac35d9a0a30ee9fc9c38f6dcb9a8bb1ca54b2e38396> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/has_schema_type> _:Na865d5f773a94c078edcd5a2a22b4e4d <http://groq.org/fbb997269ec99c59c8364ac35d9a0a30ee9fc9c38f6dcb9a8bb1ca54b2e38396> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Enjeux de la transition écologique Objectif: (résultats d'apprentissage) Course content: Programme des 9 séances en ligne (d’environ 1h30 de travail chacune) : Course name: http://example.org/course/UE_XLG3TU020</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/fbb997269ec99c59c8364ac35d9a0a30ee9fc9c38f6dcb9a8bb1ca54b2e38396> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/fbb997269ec99c59c8364ac35d9a0a30ee9fc9c38f6dcb9a8bb1ca54b2e38396> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU020" <http://groq.org/fbb997269ec99c59c8364ac35d9a0a30ee9fc9c38f6dcb9a8bb1ca54b2e38396> .
_:Na865d5f773a94c078edcd5a2a22b4e4d <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/fbb997269ec99c59c8364ac35d9a0a30ee9fc9c38f6dcb9a8bb1ca54b2e38396> .
_:Nf92b4a6c91b443ada3a91610225384f8 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Logic_Logic_Programming.txt> <http://faiss.org/8c8aac17df75f50486a664d63c736892313486109da8cd7e8421a7b3d3cb8de8> .
_:N1eb6e0590eef4584b0a2e4c0bdafd02a <http://example.org/has_score> "0.6602001"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/8c8aac17df75f50486a664d63c736892313486109da8cd7e8421a7b3d3cb8de8> .
<http://example.org/faiss> <http://example.org/input> "Label: Algèbre linéaire Objectif: (résultats d'apprentissage) Appliquer un algorithme adéquat pour résoudre un système linéaire\n• Course content: • Course name: http://example.org/course/UE_XLG4MU060" <http://faiss.org/8c8aac17df75f50486a664d63c736892313486109da8cd7e8421a7b3d3cb8de8> .
_:N1eb6e0590eef4584b0a2e4c0bdafd02a <http://example.org/has_chunk> ". CS applications: gradient descent for machine learning, forward and inverse kinematics,\napplications of calculus to probability\nNote: the calculus topics listed above are aligned with computer science goals rather than with\ntraditional calculus courses. For example, multivariate calculus is often a course by itself, but computer\nscience undergraduates only need parts of it for machine learning.\nIllustrative Learning Outcomes:\nKA Core:\n1. Sequences, series, limits\na" <http://faiss.org/8c8aac17df75f50486a664d63c736892313486109da8cd7e8421a7b3d3cb8de8> .
_:Nf92b4a6c91b443ada3a91610225384f8 <http://example.org/has_chunk> ". (See also: AI-LRR)\n13. Integration with other programming paradigms such as object-oriented programming.\n14. Advance programming constructs such as difference-lists, creating user defined data structures, set\nof, etc.\nIllustrative learning outcomes:\nKA Core:\n1. Use a logic language to implement a conventional algorithm.\n2. Use a logic language to implement an algorithm employing implicit search using clauses, relations,\nand cuts.\n3" <http://faiss.org/8c8aac17df75f50486a664d63c736892313486109da8cd7e8421a7b3d3cb8de8> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/is_aligned_with> _:N481f9fe587e047dcaa1115771dc69597 <http://faiss.org/8c8aac17df75f50486a664d63c736892313486109da8cd7e8421a7b3d3cb8de8> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/is_aligned_with> _:N1eb6e0590eef4584b0a2e4c0bdafd02a <http://faiss.org/8c8aac17df75f50486a664d63c736892313486109da8cd7e8421a7b3d3cb8de8> .
_:N481f9fe587e047dcaa1115771dc69597 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://faiss.org/8c8aac17df75f50486a664d63c736892313486109da8cd7e8421a7b3d3cb8de8> .
_:Nf92b4a6c91b443ada3a91610225384f8 <http://example.org/has_score> "0.6841686"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/8c8aac17df75f50486a664d63c736892313486109da8cd7e8421a7b3d3cb8de8> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/is_aligned_with> _:Nf92b4a6c91b443ada3a91610225384f8 <http://faiss.org/8c8aac17df75f50486a664d63c736892313486109da8cd7e8421a7b3d3cb8de8> .
_:N1eb6e0590eef4584b0a2e4c0bdafd02a <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Calculus.txt> <http://faiss.org/8c8aac17df75f50486a664d63c736892313486109da8cd7e8421a7b3d3cb8de8> .
_:N481f9fe587e047dcaa1115771dc69597 <http://example.org/has_score> "0.6617768"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/8c8aac17df75f50486a664d63c736892313486109da8cd7e8421a7b3d3cb8de8> .
_:N481f9fe587e047dcaa1115771dc69597 <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://faiss.org/8c8aac17df75f50486a664d63c736892313486109da8cd7e8421a7b3d3cb8de8> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/e98ca2b7b0406f84f916e99f22dfe3f81e216ad567a0a37ecc0c38c4216b3d1d> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/has_schema_type> _:N1492d68fd6de45daa143c1bed87f1869 <http://groq.org/e98ca2b7b0406f84f916e99f22dfe3f81e216ad567a0a37ecc0c38c4216b3d1d> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Langages et automates Objectif: (résultats d'apprentissage)\n5. Course content: • Langages algébriques\n- Grammaire algébrique\n- Arbre de dérivation\n- Automates à pile\n• Hiérarchie de Chomsky\n- Classification des grammaires;\n- Algorithmes de reconnaissance pour les grammaires de type 1 et 2\n• Analyse lexicale et syntaxique\n- TP de flex et bison Course name: http://example.org/course/UE_XLG4IU020</page1>\n        <page2>Pages: 141 HOURS CS Core = 0 KA Core = 0 FPL-Syntax: Syntax Analysis Non-core:\n1\\. Regular grammars vs context-free grammars (See also: AL-Models) 2\\.\nScanning and parsing based on language specifications 3\\. Lexical analysis\nusing regular expressions 4\\. Tokens and their use 5\\. Parsing strategies\nincluding top-down (e.g., recursive descent, or LL) and bottom-up (e.g., LR or\nGLR) techniques a. Lookahead tables and their application to parsing 6\\.\nLanguage theory: a. Chomsky hierarchy (See also: AL-Models) b. Left-\nmost/right-most derivation and ambiguity c. Grammar transformation 7\\. Parser\nerror recovery mechanisms 8\\. Generating scanners and parsers from declarative\nspecifications Illustrative learning outcomes: Non-core: 1\\. Use formal\ngrammars to specify the syntax of languages. 2\\. Illustrate the role of\nlookahead tables in parsing. 3\\. Use declarative tools to generate parsers and\nscanners. 4\\. Recognize key issues in syntax definitions: ambiguity,\nassociativity, precedence.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/e98ca2b7b0406f84f916e99f22dfe3f81e216ad567a0a37ecc0c38c4216b3d1d> .
_:N1492d68fd6de45daa143c1bed87f1869 <http://schema.org/answer> "1" <http://groq.org/e98ca2b7b0406f84f916e99f22dfe3f81e216ad567a0a37ecc0c38c4216b3d1d> .
_:N1492d68fd6de45daa143c1bed87f1869 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/e98ca2b7b0406f84f916e99f22dfe3f81e216ad567a0a37ecc0c38c4216b3d1d> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU020" <http://groq.org/e98ca2b7b0406f84f916e99f22dfe3f81e216ad567a0a37ecc0c38c4216b3d1d> .
_:N1492d68fd6de45daa143c1bed87f1869 <http://schema.org/explain> "Covers grammars, Chomsky hierarchy, lexical/syntax analysis, and tools (flex/bison), but lacks detailed parsing strategies and error recovery." <http://groq.org/e98ca2b7b0406f84f916e99f22dfe3f81e216ad567a0a37ecc0c38c4216b3d1d> .
_:N5027788a445941d69e175cd4b6a9e477 <http://schema.org/explain> "The lecture covers topics such as development platforms, programming languages, and platform constraints, which align with the Knowledge Unit's content." <http://groq.org/7b0e93d7fba78cd60087190038248e551c999231e20fee3acf89513e27091470> .
_:N5027788a445941d69e175cd4b6a9e477 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/7b0e93d7fba78cd60087190038248e551c999231e20fee3acf89513e27091470> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3AU010</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/7b0e93d7fba78cd60087190038248e551c999231e20fee3acf89513e27091470> .
_:N5027788a445941d69e175cd4b6a9e477 <http://schema.org/answer> "1" <http://groq.org/7b0e93d7fba78cd60087190038248e551c999231e20fee3acf89513e27091470> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3AU010" <http://groq.org/7b0e93d7fba78cd60087190038248e551c999231e20fee3acf89513e27091470> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/has_schema_type> _:N5027788a445941d69e175cd4b6a9e477 <http://groq.org/7b0e93d7fba78cd60087190038248e551c999231e20fee3acf89513e27091470> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/7b0e93d7fba78cd60087190038248e551c999231e20fee3acf89513e27091470> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Développement web client Objectif: (résultats d'apprentissage) Course content: approfondir les connaissances dans le langage TypeScript, déjà vu en L1\nprésenter un framework de développement web écrit en TypeScript, comme Angular ou Vue. Course name: http://example.org/course/UE_XLG4IU050</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/2f86173e38b0107d0dd4f80dc2566e384d93c0e7f07934e23db51b864eebf14d> .
_:N3f802cd79bed42028abf118690634ecd <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/2f86173e38b0107d0dd4f80dc2566e384d93c0e7f07934e23db51b864eebf14d> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/2f86173e38b0107d0dd4f80dc2566e384d93c0e7f07934e23db51b864eebf14d> .
_:N3f802cd79bed42028abf118690634ecd <http://schema.org/explain> "Lecture focuses on TypeScript and web frameworks, while KU covers broader platform constraints and multiple development domains not addressed." <http://groq.org/2f86173e38b0107d0dd4f80dc2566e384d93c0e7f07934e23db51b864eebf14d> .
<http://example.org/course/UE_XLG4IU050> <http://example.org/has_schema_type> _:N3f802cd79bed42028abf118690634ecd <http://groq.org/2f86173e38b0107d0dd4f80dc2566e384d93c0e7f07934e23db51b864eebf14d> .
_:N3f802cd79bed42028abf118690634ecd <http://schema.org/answer> "0" <http://groq.org/2f86173e38b0107d0dd4f80dc2566e384d93c0e7f07934e23db51b864eebf14d> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU050" <http://groq.org/2f86173e38b0107d0dd4f80dc2566e384d93c0e7f07934e23db51b864eebf14d> .
_:Nd7c84eb1a92742a8bb8df5f2b4fbadd1 <http://schema.org/answer> "1" <http://groq.org/226a6d25f5f41356359ab0cc1cb594f25e140a6f3c870fb6c9e5e6f26eb574cc> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Simulation de gestion Objectif: (résultats d'apprentissage) conséquences.\n• Pouvoir s’exprimer spontanément, très couramment, de façon précise et rendre distinctes de\nfines nuances de sens en rapport avec les sujets abordés.\n• Être capable de raisonner par soi-même. Course content: Simulation de la gestion ou jeu d’entreprise sur plusieurs exercices d’une entreprise dans un milieu\nconcurrentiel avec un focus sur les décisions de marketing. Course name: http://example.org/course/UE_XLG4IU070</page1>\n        <page2>Pages: 152-153 HOURS CS Core = 3 KA Core = 2 GIT-Animation and Simulation:\nCore Principles CS Core: 1\\. Key concepts in animation and simulation. 2\\.\nProcedural animation and physics-based modeling. 3\\. Motion capture techniques\nand keyframe animation. 4\\. Real-time simulation techniques for interactive\napplications. KA Core: 5\\. AI-based animation and behavioral modeling. 6\\.\nCrowd simulation and group behaviors in animations. 7\\. Advanced physics-based\nsimulations. Illustrative Learning Outcomes: 1\\. Apply keyframe animation\ntechniques to an interactive application. 2\\. Differentiate between procedural\nand AI-driven animation. 3\\. Understand the role of physics in real-time\nsimulations.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/226a6d25f5f41356359ab0cc1cb594f25e140a6f3c870fb6c9e5e6f26eb574cc> .
<http://example.org/course/UE_XLG4IU070> <http://example.org/has_schema_type> _:Nd7c84eb1a92742a8bb8df5f2b4fbadd1 <http://groq.org/226a6d25f5f41356359ab0cc1cb594f25e140a6f3c870fb6c9e5e6f26eb574cc> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU070" <http://groq.org/226a6d25f5f41356359ab0cc1cb594f25e140a6f3c870fb6c9e5e6f26eb574cc> .
_:Nd7c84eb1a92742a8bb8df5f2b4fbadd1 <http://schema.org/explain> "The lecture covers the simulation of business management, which aligns with the KU's focus on animation and simulation, and the course content mentions key concepts, procedural animation, and real-time simulation techniques, which are also covered in the KU." <http://groq.org/226a6d25f5f41356359ab0cc1cb594f25e140a6f3c870fb6c9e5e6f26eb574cc> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/226a6d25f5f41356359ab0cc1cb594f25e140a6f3c870fb6c9e5e6f26eb574cc> .
_:Nd7c84eb1a92742a8bb8df5f2b4fbadd1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/226a6d25f5f41356359ab0cc1cb594f25e140a6f3c870fb6c9e5e6f26eb574cc> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/has_schema_type> _:Nc42d5cfe3f4649c0b66e9907e0a558ad <http://groq.org/35ea6ad5ce87f163635a0b0e500c97adc8079d066f9e0e664a94d931c4ff4998> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S4 Objectif: (résultats d'apprentissage)\nfaire et savoir-être) et d'un plan d'actions sur les prochaines années : à l'écrit et à l'oral\n- d'identitier et d'animer son réseau (professionnel et élargi)\n- de créer et de faire vivre ses profils numériques professionnels\n- de mener une enquête métier auprès d'un professionnel et de la restituer Course content: - présentation orale de la restitution de l'enquête et des recherches sur le métier\n- équivalent de 8 TD + présentation orale des enquêtes:\n- identication de ses valeurs\n- indentification de ses compétences\n- consrtruction de son projet professionnel et personnel\n- présentation de son projet Course name: http://example.org/course/UE_XLG4TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Project Management: Core\nConcepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nSE-Project Management. 2\\. Apply principles in practical scenarios. 3\\.\nAnalyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/35ea6ad5ce87f163635a0b0e500c97adc8079d066f9e0e664a94d931c4ff4998> .
_:Nc42d5cfe3f4649c0b66e9907e0a558ad <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/35ea6ad5ce87f163635a0b0e500c97adc8079d066f9e0e664a94d931c4ff4998> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/35ea6ad5ce87f163635a0b0e500c97adc8079d066f9e0e664a94d931c4ff4998> .
_:Nc42d5cfe3f4649c0b66e9907e0a558ad <http://schema.org/explain> "Lecture focuses on professional networking and self-development, while KU addresses SE-Project Management concepts and technical application." <http://groq.org/35ea6ad5ce87f163635a0b0e500c97adc8079d066f9e0e664a94d931c4ff4998> .
_:Nc42d5cfe3f4649c0b66e9907e0a558ad <http://schema.org/answer> "0" <http://groq.org/35ea6ad5ce87f163635a0b0e500c97adc8079d066f9e0e664a94d931c4ff4998> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU010" <http://groq.org/35ea6ad5ce87f163635a0b0e500c97adc8079d066f9e0e664a94d931c4ff4998> .
_:N9e4f48ea6f574012a75505dbaad0e29d <http://schema.org/answer> "0" <http://groq.org/62c4dc11fed30220ade68d357f5a9694a0fa6d74394c108bad82659434067b0d> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3AU010</page1>\n        <page2>Pages:79-80 HOURS CS Core = 0 KA Core = 0 AI-NLP: Natural Language Processing\nNon-core: 1\\. Deterministic and stochastic grammars 2\\. Parsing algorithms a.\nCFGs and chart parsers (e.g., CYK) b. Probabilistic CFGs and weighted CYK 3\\.\nRepresenting meaning/Semantics a. Logic-based knowledge representations b.\nSemantic roles c. Temporal representations d. Beliefs, desires, and intentions\n4\\. Corpus-based methods 5\\. N-grams and HMMs 6\\. Smoothing and backoff 7\\.\nExamples of use: POS tagging and morphology 8\\. Information retrieval (See\nalso: DM-Unstructured) a. Vector space model i. TF & IDF b. Precision and\nrecall 9\\. Information extraction 10\\. Language translation 11\\. Text\nclassification, categorization a. Bag of words model 12\\. Deep learning for\nNLP (See also: AI-ML) a. RNNs b. Transformers c. Multi-modal embeddings (e.g.,\nimages + text) d. Generative language models Illustrative Learning Outcomes:\n1\\. Define and contrast deterministic and stochastic grammars, providing\nexamples to show the adequacy of each. 2\\. Simulate, apply, or implement\nclassic and stochastic algorithms for parsing natural language. 3\\. Identify\nthe challenges of representing meaning. 4\\. List the advantages of using\nstandard corpora. Identify examples of current corpora for a variety of NLP\ntasks. 5\\. Identify techniques for information retrieval, language\ntranslation, and text classification. 6\\. Implement a TF/IDF transform, use it\nto extract features from a corpus, and train an off-the-shelf machine learning\nalgorithm using those features to do text classification.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/62c4dc11fed30220ade68d357f5a9694a0fa6d74394c108bad82659434067b0d> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/62c4dc11fed30220ade68d357f5a9694a0fa6d74394c108bad82659434067b0d> .
_:N9e4f48ea6f574012a75505dbaad0e29d <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/62c4dc11fed30220ade68d357f5a9694a0fa6d74394c108bad82659434067b0d> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3AU010" <http://groq.org/62c4dc11fed30220ade68d357f5a9694a0fa6d74394c108bad82659434067b0d> .
_:N9e4f48ea6f574012a75505dbaad0e29d <http://schema.org/explain> "Lecture focuses on teaching methods, while KU covers NLP technical content like parsing algorithms and semantics." <http://groq.org/62c4dc11fed30220ade68d357f5a9694a0fa6d74394c108bad82659434067b0d> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/has_schema_type> _:N9e4f48ea6f574012a75505dbaad0e29d <http://groq.org/62c4dc11fed30220ade68d357f5a9694a0fa6d74394c108bad82659434067b0d> .
_:N88a75679b1ef4030971b68e7dd048b39 <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://faiss.org/5f7d35236a03dbaa203325d39fbf8a9274ef2e5bffdfc12f4f4d271a26d35ff4> .
<http://example.org/faiss> <http://example.org/input> "Label: Développement web client Objectif: (résultats d'apprentissage) Course content: approfondir les connaissances dans le langage TypeScript, déjà vu en L1\nprésenter un framework de développement web écrit en TypeScript, comme Angular ou Vue. Course name: http://example.org/course/UE_XLG4IU050" <http://faiss.org/5f7d35236a03dbaa203325d39fbf8a9274ef2e5bffdfc12f4f4d271a26d35ff4> .
_:N094d9a96fa054e83ad1541fa5cc733b2 <http://example.org/has_chunk> "Illustrative Learning Outcomes:\nCS Core:           \nIn these learning outcomes, the term \"develop\" means \"design, write, test, and debug.\" \n1. Develop programs that use the fundamental programming constructs: assignment and expressions, basic I/O, conditional and iterative statements. \n2. Develop programs using functions with parameter passing.  \n3. Develop programs that effectively use the different structured data types provided in the language like arrays/lists, dictionaries, and sets. \n4" <http://faiss.org/5f7d35236a03dbaa203325d39fbf8a9274ef2e5bffdfc12f4f4d271a26d35ff4> .
<http://example.org/course/UE_XLG4IU050> <http://example.org/is_aligned_with> _:N88a75679b1ef4030971b68e7dd048b39 <http://faiss.org/5f7d35236a03dbaa203325d39fbf8a9274ef2e5bffdfc12f4f4d271a26d35ff4> .
_:N094d9a96fa054e83ad1541fa5cc733b2 <http://example.org/has_score> "0.6764416"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/5f7d35236a03dbaa203325d39fbf8a9274ef2e5bffdfc12f4f4d271a26d35ff4> .
_:N6b9b7a8443b545e8a800ef9de04b13fe <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Development_Fundamentals_SDF/SDF-Fundamental_Programming_Concepts_and_Practices.txt> <http://faiss.org/5f7d35236a03dbaa203325d39fbf8a9274ef2e5bffdfc12f4f4d271a26d35ff4> .
_:N88a75679b1ef4030971b68e7dd048b39 <http://example.org/has_score> "0.7331935"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/5f7d35236a03dbaa203325d39fbf8a9274ef2e5bffdfc12f4f4d271a26d35ff4> .
_:N094d9a96fa054e83ad1541fa5cc733b2 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Development_Fundamentals_SDF/SDF-Fundamental_Programming_Concepts_and_Practices.txt> <http://faiss.org/5f7d35236a03dbaa203325d39fbf8a9274ef2e5bffdfc12f4f4d271a26d35ff4> .
<http://example.org/course/UE_XLG4IU050> <http://example.org/is_aligned_with> _:N6b9b7a8443b545e8a800ef9de04b13fe <http://faiss.org/5f7d35236a03dbaa203325d39fbf8a9274ef2e5bffdfc12f4f4d271a26d35ff4> .
_:N6b9b7a8443b545e8a800ef9de04b13fe <http://example.org/has_chunk> ". \n4. Develop programs that use file I/O to provide data persistence across multiple executions.  \n5. Develop programs that use language-provided libraries and frameworks (where applicable).  \n6. Develop programs that use APIs to access or update data (e.g., from the web).  \n7. Develop programs that create simple classes and instantiate objects of those classes (if supported by the language). \n8. Explain the concept of recursion and identify when and how to use it effectively. \n9" <http://faiss.org/5f7d35236a03dbaa203325d39fbf8a9274ef2e5bffdfc12f4f4d271a26d35ff4> .
_:N88a75679b1ef4030971b68e7dd048b39 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://faiss.org/5f7d35236a03dbaa203325d39fbf8a9274ef2e5bffdfc12f4f4d271a26d35ff4> .
<http://example.org/course/UE_XLG4IU050> <http://example.org/is_aligned_with> _:N094d9a96fa054e83ad1541fa5cc733b2 <http://faiss.org/5f7d35236a03dbaa203325d39fbf8a9274ef2e5bffdfc12f4f4d271a26d35ff4> .
_:N6b9b7a8443b545e8a800ef9de04b13fe <http://example.org/has_score> "0.67557645"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/5f7d35236a03dbaa203325d39fbf8a9274ef2e5bffdfc12f4f4d271a26d35ff4> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU040" <http://groq.org/d34b958972edbc281cf6f9ebffddd933047696730445a8e6a48d8361d4a5da4d> .
_:N17bc3f02127244a1a5871d4a65f99c33 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/d34b958972edbc281cf6f9ebffddd933047696730445a8e6a48d8361d4a5da4d> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/has_schema_type> _:N17bc3f02127244a1a5871d4a65f99c33 <http://groq.org/d34b958972edbc281cf6f9ebffddd933047696730445a8e6a48d8361d4a5da4d> .
_:N17bc3f02127244a1a5871d4a65f99c33 <http://schema.org/answer> "1" <http://groq.org/d34b958972edbc281cf6f9ebffddd933047696730445a8e6a48d8361d4a5da4d> .
_:N17bc3f02127244a1a5871d4a65f99c33 <http://schema.org/explain> "The lecture covers the key concepts of GIT-Augmented Reality, its practical applications, and its importance in computing, which aligns with the KU's learning outcomes." <http://groq.org/d34b958972edbc281cf6f9ebffddd933047696730445a8e6a48d8361d4a5da4d> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/d34b958972edbc281cf6f9ebffddd933047696730445a8e6a48d8361d4a5da4d> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Connaissance de l'entreprise Objectif: (résultats d'apprentissage)\nl’entreprise dans son environnement) Course content: Approche économique de l’entreprise Course name: http://example.org/course/UE_XLG3TU040</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD GIT-Augmented Reality: Core\nConcepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nGIT-Augmented Reality. 2\\. Apply principles in practical scenarios. 3\\.\nAnalyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/d34b958972edbc281cf6f9ebffddd933047696730445a8e6a48d8361d4a5da4d> .
_:N8bf85414b62a4bb696fd1f701413be35 <http://schema.org/answer> "0" <http://groq.org/a8e3a88609c8bb7d776777929ab57157506e0a961513a0720fec8532ce078c44> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/a8e3a88609c8bb7d776777929ab57157506e0a961513a0720fec8532ce078c44> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Simulation de gestion Objectif: (résultats d'apprentissage) conséquences.\n• Pouvoir s’exprimer spontanément, très couramment, de façon précise et rendre distinctes de\nfines nuances de sens en rapport avec les sujets abordés.\n• Être capable de raisonner par soi-même. Course content: Simulation de la gestion ou jeu d’entreprise sur plusieurs exercices d’une entreprise dans un milieu\nconcurrentiel avec un focus sur les décisions de marketing. Course name: http://example.org/course/UE_XLG4IU070</page1>\n        <page2>Pages : 244-245-246 CS Core : None, KA Core : 4 (+16) (Additional hours here\nare hours shared with other Areas) KA Core: 1\\. Historical and contemporary\nplatforms for games (See also: AR-Logic) a. Evolution of Game Platforms (e.g.,\nBrown Box to Metaverse and beyond; Improvement in Computing Architectures (CPU\nand GPU); Platform Convergence and Mobility) b. Typical Game Platforms (e.g.,\nPersonal Computer; Home Console; Handheld Console; Arcade Machine; Interactive\nTelevision; Mobile Phone; Tablet; Integrated Head-Mounted Display; Immersive\nInstallations and Simulators; Internet of Things enabled Devices; CAVE\nSystems; Web Browsers; Cloud-based Streaming Systems) c. Characteristics and\nConstraints of Different Game Platforms (e.g., Features (local storage,\ninternetworking, peripherals); Run-time performance (GPU/CPU frequency, number\nof cores); Chipsets (physics processing units, vector co-processors);\nExpansion Bandwidth (PCIe); Network throughput (Ethernet); Memory types and\ncapacities (DDR/GDDR); Maximum stack depth; Power consumption; Thermal design;\nEndian) d. Typical Sensors, Controllers, and Actuators (e.g., distinctive\ncontrol system designs -peripherals (mouse, keypad, joystick), game\ncontrollers, wearables, interactive surfaces; electronics and bespoke\nhardware; computer vision, inside-out tracking, and outside-in tracking; IoT-\nenabled electronics and I/O) (See also: GIT-Interaction) e. eSports Ecosystems\n(e.g., evolution of gameplay across platforms; games and eSports; game events\nsuch as LAN/arcade tournaments and international events such as the Olympic\neSports Series; streamed media and spectatorship; multimedia technologies and\nbroadcast management; professional play; data and machine learning for\ncoaching and training) 2\\. Real-time Simulation and Rendering Systems a. CPU\nand GPU architectures (e.g., Flynn's taxonomy; parallelization; instruction\nsets; standard components - graphics compute array, graphics memory\ncontroller, video graphics array basic input/output system; bus interface;\npower management unit; video processing unit; display interface) (See also:\nAR-Heterogeneity) b. Pipelines for physical simulations and graphical\nrendering: (e.g., tile-based, immediate-mode). (See also: GIT-Rendering) c.\nCommon Contexts for Algorithms, Data Structures, and Mathematical Functions\n(e.g., game loops; spatial partitioning, viewport culling, and level of\ndetail; collision detection and resolution; physical simulation; behavior for\nintelligent agents; procedural content generation) (See also: MSF-Discrete,\nAL-Foundational) d. Media representations (e.g., I/O, and computation\ntechniques for virtual worlds: audio; music; sprites; models and textures;\ntext; dialogue; multimedia (e.g., olfaction, tactile)) (See also: GIT-\nFundamentals) 3\\. Game Development Tools and Techniques a. Programming\nLanguages (e.g., C++; C#; Lua; Python; JavaScript) b. Shader Languages (e.g.,\nHLSL, GLSL; Shader Graph) c. Graphics Libraries and APIs (e.g., DirectX; SDL;\nOpenGL; Metal; Vulkan; WebGL). (See also: GIT-Rendering, HCI-Design) d. Common\nDevelopment Tools and Environments (e.g., IDEs; Debuggers; Profilers; Version\nControl Systems including those handling binary assets; Development Kits and\nProduction/Consumer Kits; Emulators) (See also: SDF-Practices, SE-Tools) 4\\.\nGame Engines a. Open Game Engines (e.g., Unreal; Unity; Godot; CryEngine;\nPhyre; Source 2; Pygame and Ren'Py; Phaser; Twine; Spring RTS) b. Techniques\n(e.g., Ideation, Prototyping, Iterative Design and Implementation, Compiling\nExecutable Builds, Development Operations and Quality Assurance - Play Testing\nand Technical Testing, Profiling; Optimization, Porting; Internationalization\nand Localization, Networking) (See also: AR-Performance-Energy, SE-\nRequirements) 5\\. Game Design a. Vocabulary (e.g., game definitions;\nmechanics-dynamics-aesthetics model; industry terminology; experience design;\nmodels of experience and emotion) b. Design Thinking and User-Centered\nExperience Design (e.g., methods of designing games; iteration, incrementing,\nand the double-diamond; phases of pre- and post-production; quality assurance,\nincluding alpha and beta testing; stakeholder and customer involvement;\ncommunity management) (See also: SE-Design) c. Genres (e.g., adventure;\nwalking simulator; first-person shooter; real-time strategy; multiplayer\nonline battle arena (MOBA); role-playing game (rpg)) d. Audiences and Player\nTaxonomies (e.g., people who play games; diversity and broadening\nparticipation; pleasures, player types, and preferences; Bartle, yee) (See\nalso: HCI-User) e. Proliferation of digital game technologies to domains\nbeyond entertainment (e.g., Education and Training; Serious Games; Virtual\nProduction; eSports; Gamification; Immersive Experience Design; Creative\nIndustry Practice; Artistic Practice; Procedural Rhetoric) (See also: AI-SEP)\nIllustrative Learning Outcomes: KA Core: 1\\. Recall the characteristics of\ncommon general-purpose graphics processing architectures. 2\\. Identify the key\nstages of the immediate-mode rendering pipeline. 3\\. Describe the key\nconstraints a specific game platform will likely impose on developers. 4\\.\nExplain how eSports are streamed to large audiences over the internet. 5\\.\nTranslate complex mathematical functions into performant source code. 6\\. Use\nan industry-standard graphics API to render a 3D model in a virtual scene. 7\\.\nModify a shader to change a visual effect according to stated requirements.\n8\\. Implement a game for a particular platform according to the specification.\n9\\. Optimize a function for processing collision detection in a simulated\nenvironment. 10\\. Assess a game's run-time and memory performance using an\nindustry-standard tool and development environment. 11\\. Compare the\ninterfaces of different game platforms, highlighting their respective\nimplications for human-computer interaction. 12\\. Recommend an appropriate set\nof development tools and techniques for implementing a game of a particular\ngenre for a given platform. 13\\. Discuss the key challenges in making a\ndigital game that is cross-platform compatible. 14\\. Express how game\ndevelopers can enhance the accessibility of a game interface. 15\\. Create\nnovel forms of gameplay using frontier game platforms.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/a8e3a88609c8bb7d776777929ab57157506e0a961513a0720fec8532ce078c44> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU070" <http://groq.org/a8e3a88609c8bb7d776777929ab57157506e0a961513a0720fec8532ce078c44> .
<http://example.org/course/UE_XLG4IU070> <http://example.org/has_schema_type> _:N8bf85414b62a4bb696fd1f701413be35 <http://groq.org/a8e3a88609c8bb7d776777929ab57157506e0a961513a0720fec8532ce078c44> .
_:N8bf85414b62a4bb696fd1f701413be35 <http://schema.org/explain> "Lecture focuses on business simulation decisions, while KU covers technical game development, platforms, and engines." <http://groq.org/a8e3a88609c8bb7d776777929ab57157506e0a961513a0720fec8532ce078c44> .
_:N8bf85414b62a4bb696fd1f701413be35 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/a8e3a88609c8bb7d776777929ab57157506e0a961513a0720fec8532ce078c44> .
_:Ncc1f9c2db4b34224b8290946f7849fe4 <http://schema.org/answer> "0" <http://groq.org/3a6bdc97e63a8fc7b82f427a6d64c8ca55463ff5c0baa8b24deb778ae09040e8> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/has_schema_type> _:Ncc1f9c2db4b34224b8290946f7849fe4 <http://groq.org/3a6bdc97e63a8fc7b82f427a6d64c8ca55463ff5c0baa8b24deb778ae09040e8> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/3a6bdc97e63a8fc7b82f427a6d64c8ca55463ff5c0baa8b24deb778ae09040e8> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU030" <http://groq.org/3a6bdc97e63a8fc7b82f427a6d64c8ca55463ff5c0baa8b24deb778ae09040e8> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU030</page1>\n        <page2>Pages: 150-151 HOURS CS Core = 3 KA Core = 2 GIT-Fundamentals: Fundamental\nConcepts CS Core: 1\\. Overview of graphics and visualization. 2\\. Basic\ngraphics pipeline architecture. 3\\. 2D and 3D transformations. 4\\.\nRasterization and rendering techniques. 5\\. Fundamental shading models. KA\nCore: 6\\. Advanced rendering techniques. 7\\. Applications of visualization in\ndifferent fields. 8\\. Interaction methods for graphical environments.\nIllustrative Learning Outcomes: 1\\. Explain the graphics rendering pipeline.\n2\\. Differentiate between rasterization and ray tracing. 3\\. Apply\ntransformations to 2D and 3D models.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/3a6bdc97e63a8fc7b82f427a6d64c8ca55463ff5c0baa8b24deb778ae09040e8> .
_:Ncc1f9c2db4b34224b8290946f7849fe4 <http://schema.org/explain> "The lecture focuses on teaching methods, not the technical graphics content of the KU." <http://groq.org/3a6bdc97e63a8fc7b82f427a6d64c8ca55463ff5c0baa8b24deb778ae09040e8> .
_:Ncc1f9c2db4b34224b8290946f7849fe4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/3a6bdc97e63a8fc7b82f427a6d64c8ca55463ff5c0baa8b24deb778ae09040e8> .
<http://example.org/faiss> <http://example.org/input> "Label: Methodologie et insertion professionnelle S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU010" <http://faiss.org/dde8d17a29465bb0715432ec1d08694149848e02a084ed910e537f64e941a256> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/is_aligned_with> _:N52eb0fa5f910462dbf8f079cd09a2898 <http://faiss.org/dde8d17a29465bb0715432ec1d08694149848e02a084ed910e537f64e941a256> .
_:Nb9e66ccc58084494a4d52a1c6558d971 <http://example.org/has_score> "0.6541157"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/dde8d17a29465bb0715432ec1d08694149848e02a084ed910e537f64e941a256> .
_:Nbf823ffb188e4bd881f1d9010af6295d <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Graphics_and_Interactive_Techniques_GIT/GIT-3D_Modeling.txt> <http://faiss.org/dde8d17a29465bb0715432ec1d08694149848e02a084ed910e537f64e941a256> .
_:Nb9e66ccc58084494a4d52a1c6558d971 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://faiss.org/dde8d17a29465bb0715432ec1d08694149848e02a084ed910e537f64e941a256> .
_:Nbf823ffb188e4bd881f1d9010af6295d <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nGIT-3D Modeling: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of GIT-3D Modeling.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/dde8d17a29465bb0715432ec1d08694149848e02a084ed910e537f64e941a256> .
_:N52eb0fa5f910462dbf8f079cd09a2898 <http://example.org/has_score> "0.6525782"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/dde8d17a29465bb0715432ec1d08694149848e02a084ed910e537f64e941a256> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/is_aligned_with> _:Nbf823ffb188e4bd881f1d9010af6295d <http://faiss.org/dde8d17a29465bb0715432ec1d08694149848e02a084ed910e537f64e941a256> .
_:Nbf823ffb188e4bd881f1d9010af6295d <http://example.org/has_score> "0.6349528"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/dde8d17a29465bb0715432ec1d08694149848e02a084ed910e537f64e941a256> .
_:Nb9e66ccc58084494a4d52a1c6558d971 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/dde8d17a29465bb0715432ec1d08694149848e02a084ed910e537f64e941a256> .
_:N52eb0fa5f910462dbf8f079cd09a2898 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://faiss.org/dde8d17a29465bb0715432ec1d08694149848e02a084ed910e537f64e941a256> .
_:N52eb0fa5f910462dbf8f079cd09a2898 <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://faiss.org/dde8d17a29465bb0715432ec1d08694149848e02a084ed910e537f64e941a256> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/is_aligned_with> _:Nb9e66ccc58084494a4d52a1c6558d971 <http://faiss.org/dde8d17a29465bb0715432ec1d08694149848e02a084ed910e537f64e941a256> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU040" <http://groq.org/5ef7d2dafe0b5aa2cfc056c0286a41515feeee8736f932990ea81991590d4ad1> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/5ef7d2dafe0b5aa2cfc056c0286a41515feeee8736f932990ea81991590d4ad1> .
_:Ne433d279adc6453cb330666440e3ef1e <http://schema.org/answer> "0" <http://groq.org/5ef7d2dafe0b5aa2cfc056c0286a41515feeee8736f932990ea81991590d4ad1> .
_:Ne433d279adc6453cb330666440e3ef1e <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/5ef7d2dafe0b5aa2cfc056c0286a41515feeee8736f932990ea81991590d4ad1> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/has_schema_type> _:Ne433d279adc6453cb330666440e3ef1e <http://groq.org/5ef7d2dafe0b5aa2cfc056c0286a41515feeee8736f932990ea81991590d4ad1> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Connaissance de l'entreprise Objectif: (résultats d'apprentissage)\nl’entreprise dans son environnement) Course content: Approche économique de l’entreprise Course name: http://example.org/course/UE_XLG3TU040</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD GIT-3D Modeling: Core Concepts CS\nCore: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic 3\nKA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of GIT-3D Modeling.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/5ef7d2dafe0b5aa2cfc056c0286a41515feeee8736f932990ea81991590d4ad1> .
_:Ne433d279adc6453cb330666440e3ef1e <http://schema.org/explain> "No overlap in topics (business economics vs 3D modeling)" <http://groq.org/5ef7d2dafe0b5aa2cfc056c0286a41515feeee8736f932990ea81991590d4ad1> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/2c7e301aeec9a075253475ddd6c5943901db7cb7206812a866a600abb5b71e42> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU010" <http://groq.org/2c7e301aeec9a075253475ddd6c5943901db7cb7206812a866a600abb5b71e42> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU010</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/2c7e301aeec9a075253475ddd6c5943901db7cb7206812a866a600abb5b71e42> .
_:N78e6561fcaea4402ac2b38318596def2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/2c7e301aeec9a075253475ddd6c5943901db7cb7206812a866a600abb5b71e42> .
_:N78e6561fcaea4402ac2b38318596def2 <http://schema.org/explain> "The lecture does not cover the technical details of development platforms and programming constraints described in the KU." <http://groq.org/2c7e301aeec9a075253475ddd6c5943901db7cb7206812a866a600abb5b71e42> .
_:N78e6561fcaea4402ac2b38318596def2 <http://schema.org/answer> "0" <http://groq.org/2c7e301aeec9a075253475ddd6c5943901db7cb7206812a866a600abb5b71e42> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/has_schema_type> _:N78e6561fcaea4402ac2b38318596def2 <http://groq.org/2c7e301aeec9a075253475ddd6c5943901db7cb7206812a866a600abb5b71e42> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algèbre linéaire Objectif: (résultats d'apprentissage) Appliquer un algorithme adéquat pour résoudre un système linéaire\n• Course content: • Course name: http://example.org/course/UE_XLG4MU060</page1>\n        <page2>Pages: 133 HOURS CS Core = 0 KA Core = 2 + 1 (MSF) FPL-Logic: Logic\nProgramming KA Core: 1\\. Universal vs existential quantifiers. (See also: AI-\nLRR, MSF-Discrete) 2\\. First order predicate logic vs higher order logic. (See\nalso: AI-LRR, MSF-Discrete) 3\\. Expressing complex relations using logical\nconnectives and simpler relations. 4\\. Definitions of Horn clause, facts,\ngoals and subgoals. 5\\. Unification and unification algorithm; unification vs\nassertion vs expression evaluation. 6\\. Mixing relations with functions. (See\nalso: MSF-Discrete) 7\\. Cuts, backtracking, and non-determinism. 8\\. Closed-\nworld vs open-world assumptions. Non-core: 9\\. Memory overhead of variable\ncopying in handling iterative programs. 10\\. Programming constructs to store\npartial computation and pruning search trees. 11\\. Mixing functional\nprogramming and logic programming using concepts such as equational logic,\nnarrowing, residuation, and semantic unification. (See also: FPL-Functional)\n12\\. Higher-order, constraint, and inductive logic programming. (See also: AI-\nLRR) 13\\. Integration with other programming paradigms such as object-oriented\nprogramming. 14\\. Advance programming constructs such as difference-lists,\ncreating user defined data structures, set of, etc. Illustrative learning\noutcomes: KA Core: 1\\. Use a logic language to implement a conventional\nalgorithm. 2\\. Use a logic language to implement an algorithm employing\nimplicit search using clauses, relations, and cuts. 3\\. Use a simple\nillustrative example to show correspondence between First Order Predicate\nLogic (FOPL) and logic programs using Horn clauses. 4\\. Use examples to\nillustrate the unification algorithm and its role of parameter-passing in\nquery reduction. 5\\. Use simple logic programs interleaving relations,\nfunctions, and recursive programming such as factorial and Fibonacci numbers\nand simple complex relationships between entities and illustrate execution and\nparameter-passing using unification and backtracking. Non-core: 6\\. Illustrate\ncomputation of simple programs such as Fibonacci and show overhead of\nrecomputation, and then show how to improve execution overhead.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/cd66bbb1b4cc92621fedd9065b2c38c89a1ecd6e7acdea37aa993dba460c68a9> .
_:N1b796aa301334d8990aef06101716335 <http://schema.org/answer> "1" <http://groq.org/cd66bbb1b4cc92621fedd9065b2c38c89a1ecd6e7acdea37aa993dba460c68a9> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/has_schema_type> _:N1b796aa301334d8990aef06101716335 <http://groq.org/cd66bbb1b4cc92621fedd9065b2c38c89a1ecd6e7acdea37aa993dba460c68a9> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4MU060" <http://groq.org/cd66bbb1b4cc92621fedd9065b2c38c89a1ecd6e7acdea37aa993dba460c68a9> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/cd66bbb1b4cc92621fedd9065b2c38c89a1ecd6e7acdea37aa993dba460c68a9> .
_:N1b796aa301334d8990aef06101716335 <http://schema.org/explain> "The lecture covers a significant portion of the KU, including topics such as universal vs existential quantifiers, first-order predicate logic, and unification, which are core components of the KU." <http://groq.org/cd66bbb1b4cc92621fedd9065b2c38c89a1ecd6e7acdea37aa993dba460c68a9> .
_:N1b796aa301334d8990aef06101716335 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/cd66bbb1b4cc92621fedd9065b2c38c89a1ecd6e7acdea37aa993dba460c68a9> .
_:Na43baf665712478aa536289b62a1b1ef <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/b78c7991790946aca2887a2a1c6d93854fbcc3fb101b8a731f8095ac580cc5e4> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/b78c7991790946aca2887a2a1c6d93854fbcc3fb101b8a731f8095ac580cc5e4> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/has_schema_type> _:Na43baf665712478aa536289b62a1b1ef <http://groq.org/b78c7991790946aca2887a2a1c6d93854fbcc3fb101b8a731f8095ac580cc5e4> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU030" <http://groq.org/b78c7991790946aca2887a2a1c6d93854fbcc3fb101b8a731f8095ac580cc5e4> .
_:Na43baf665712478aa536289b62a1b1ef <http://schema.org/answer> "0" <http://groq.org/b78c7991790946aca2887a2a1c6d93854fbcc3fb101b8a731f8095ac580cc5e4> .
_:Na43baf665712478aa536289b62a1b1ef <http://schema.org/explain> "The lecture does not cover the technical details of the Knowledge Unit." <http://groq.org/b78c7991790946aca2887a2a1c6d93854fbcc3fb101b8a731f8095ac580cc5e4> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU030</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/b78c7991790946aca2887a2a1c6d93854fbcc3fb101b8a731f8095ac580cc5e4> .
_:N17f29253deb144f0af02b0bd5445850f <http://schema.org/answer> "1" <http://groq.org/921f0c2342c76d38a408d44fc98bf68a7c9433a23bf7490b525bc218f7a8c9a2> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU010" <http://groq.org/921f0c2342c76d38a408d44fc98bf68a7c9433a23bf7490b525bc218f7a8c9a2> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU010</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/921f0c2342c76d38a408d44fc98bf68a7c9433a23bf7490b525bc218f7a8c9a2> .
_:N17f29253deb144f0af02b0bd5445850f <http://schema.org/explain> "The lecture covers topics such as development platforms, programming languages, and platform constraints, which align with the Knowledge Unit's content." <http://groq.org/921f0c2342c76d38a408d44fc98bf68a7c9433a23bf7490b525bc218f7a8c9a2> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/921f0c2342c76d38a408d44fc98bf68a7c9433a23bf7490b525bc218f7a8c9a2> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/has_schema_type> _:N17f29253deb144f0af02b0bd5445850f <http://groq.org/921f0c2342c76d38a408d44fc98bf68a7c9433a23bf7490b525bc218f7a8c9a2> .
_:N17f29253deb144f0af02b0bd5445850f <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/921f0c2342c76d38a408d44fc98bf68a7c9433a23bf7490b525bc218f7a8c9a2> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/5f6479641cd433db78767d961e3cfba5a15e61f5126a4fde76d2023dc08f08c3> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/has_schema_type> _:N009557b48129499d8f4f74809f091a58 <http://groq.org/5f6479641cd433db78767d961e3cfba5a15e61f5126a4fde76d2023dc08f08c3> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Programmation à Objets Objectif: (résultats d'apprentissage) Connaître les mécanismes d’héritage et de polymorphisme Course content: Classes abstraites Course name: http://example.org/course/UE_XLG3IU030</page1>\n        <page2>Pages: 130-131 HOURS CS Core = 4 + 1 (SDF) KA Core = 1 FPL-OOP: Object-\nOriented Programming CS Core: 1\\. Imperative programming as a subset of\nobject-oriented programming. 2\\. Object-oriented design: a. Decomposition into\nobjects carrying state and having behavior. b. Class-hierarchy design for\nmodeling. 3\\. Definition of classes: fields, methods, and constructors. (See\nalso: SDF-Fundamentals) 4\\. Subclasses, inheritance (including multiple\ninheritance), and method overriding. 5\\. Dynamic dispatch: definition of\nmethod-call. 6\\. Exception handling. (See also: SDF-Fundamentals, PDC-\nCoordination, SE-Construction) 7\\. Object-oriented idioms for encapsulation:\na. Privacy, data hiding, and visibility of class members. b. Interfaces\nrevealing only method signatures. c. Abstract base classes, traits and mixins.\n8\\. Dynamic vs static properties. 9\\. Composition vs inheritance. 10\\.\nSubtyping: a. Subtype polymorphism; implicit upcasts in typed languages. b.\nNotion of behavioral replacement: subtypes acting like supertype. c.\nRelationship between subtyping and inheritance. KA Core: 11\\. Collection\nclasses, iterators, and other common library components. 12\\. Metaprogramming\nand reflection. Illustrative Learning Outcomes: CS Core: 1\\. Enumerate the\ndifferences between imperative and object-oriented programming paradigms. 2\\.\nCompose a class through design, implementation, and testing to meet behavioral\nrequirements. 3\\. Build a simple class hierarchy utilizing subclassing that\nallows code to be reused for distinct subclasses. 4\\. Predict and validate\ncontrol flow in a program using dynamic dispatch. 5\\. Compare and contrast how\ncomputational solutions to a problem differ in procedural, functional, and\nobject-oriented approaches. 6\\. Compare and contrast mechanisms to define and\nprotect data elements within procedural, functional, and object-oriented\napproaches. 7\\. Compare and contrast the benefits and costs/impact of using\ninheritance (subclasses) and composition (specifically, how to base\ncomposition on higher order functions). 8\\. Explain the relationship between\nobject-oriented inheritance (code-sharing and overriding) and subtyping (the\nidea of a subtype being usable in a context that expects the supertype). 9\\.\nUse object-oriented encapsulation mechanisms such as interfaces and private\nmembers. 10\\. Define and use iterators and other operations on aggregates,\nincluding operations that take functions as arguments, in multiple programming\nlanguages, selecting the most natural idioms for each language. (See also:\nFPL-Functional) KA Core: 11\\. Use collection classes and iterators effectively\nto solve a problem.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/5f6479641cd433db78767d961e3cfba5a15e61f5126a4fde76d2023dc08f08c3> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU030" <http://groq.org/5f6479641cd433db78767d961e3cfba5a15e61f5126a4fde76d2023dc08f08c3> .
_:N009557b48129499d8f4f74809f091a58 <http://schema.org/answer> "0" <http://groq.org/5f6479641cd433db78767d961e3cfba5a15e61f5126a4fde76d2023dc08f08c3> .
_:N009557b48129499d8f4f74809f091a58 <http://schema.org/explain> "The lecture covers some aspects of inheritance and polymorphism but does not address the full scope of the KU, which includes additional topics like dynamic dispatch, exception handling, and composition vs. inheritance." <http://groq.org/5f6479641cd433db78767d961e3cfba5a15e61f5126a4fde76d2023dc08f08c3> .
_:N009557b48129499d8f4f74809f091a58 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/5f6479641cd433db78767d961e3cfba5a15e61f5126a4fde76d2023dc08f08c3> .
_:N4623ba6ed263453bb84936cd773f12f9 <http://schema.org/answer> "1" <http://groq.org/ebbfcd03b877a01e764161f1762a2d2d2c8599ff5e7e1a2fa9836e606db8bda0> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/has_schema_type> _:N4623ba6ed263453bb84936cd773f12f9 <http://groq.org/ebbfcd03b877a01e764161f1762a2d2d2c8599ff5e7e1a2fa9836e606db8bda0> .
_:N4623ba6ed263453bb84936cd773f12f9 <http://schema.org/explain> "The lecture covers key concepts of SE-Formal Methods, applying principles in practical scenarios, and analyzing the importance of this topic in computing, which aligns with the KU's learning outcomes." <http://groq.org/ebbfcd03b877a01e764161f1762a2d2d2c8599ff5e7e1a2fa9836e606db8bda0> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3AU010" <http://groq.org/ebbfcd03b877a01e764161f1762a2d2d2c8599ff5e7e1a2fa9836e606db8bda0> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3AU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/ebbfcd03b877a01e764161f1762a2d2d2c8599ff5e7e1a2fa9836e606db8bda0> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/ebbfcd03b877a01e764161f1762a2d2d2c8599ff5e7e1a2fa9836e606db8bda0> .
_:N4623ba6ed263453bb84936cd773f12f9 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/ebbfcd03b877a01e764161f1762a2d2d2c8599ff5e7e1a2fa9836e606db8bda0> .
_:Nbf2722b4ff684ac187ba685b40369df6 <http://example.org/has_chunk> ". (See also: AI-LRR)\n13. Integration with other programming paradigms such as object-oriented programming.\n14. Advance programming constructs such as difference-lists, creating user defined data structures, set\nof, etc.\nIllustrative learning outcomes:\nKA Core:\n1. Use a logic language to implement a conventional algorithm.\n2. Use a logic language to implement an algorithm employing implicit search using clauses, relations,\nand cuts.\n3" <http://faiss.org/ba3b0080ad908e36fe9b801489a607f005d25f547e1d0e884ff7279086f4aea8> .
_:Nad037c7a0ad347bc8a83472a3c4067dd <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-Foundational_Foundational_Data_Structures_and_Algorithms.txt> <http://faiss.org/ba3b0080ad908e36fe9b801489a607f005d25f547e1d0e884ff7279086f4aea8> .
_:Nad037c7a0ad347bc8a83472a3c4067dd <http://example.org/has_score> "0.69644845"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/ba3b0080ad908e36fe9b801489a607f005d25f547e1d0e884ff7279086f4aea8> .
_:Nb88696f0402e4d849470c8e8852a9c12 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-Complexity_Complexity.txt> <http://faiss.org/ba3b0080ad908e36fe9b801489a607f005d25f547e1d0e884ff7279086f4aea8> .
_:Nbf2722b4ff684ac187ba685b40369df6 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Logic_Logic_Programming.txt> <http://faiss.org/ba3b0080ad908e36fe9b801489a607f005d25f547e1d0e884ff7279086f4aea8> .
_:Nb88696f0402e4d849470c8e8852a9c12 <http://example.org/has_score> "0.6920693"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/ba3b0080ad908e36fe9b801489a607f005d25f547e1d0e884ff7279086f4aea8> .
_:Nbf2722b4ff684ac187ba685b40369df6 <http://example.org/has_score> "0.6956569"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/ba3b0080ad908e36fe9b801489a607f005d25f547e1d0e884ff7279086f4aea8> .
<http://example.org/faiss> <http://example.org/input> "Label: Algorithmique et Structures de données 1 Objectif: (résultats d'apprentissage)\n•\nÉvaluer une implémentation de structure de données en temps et en place mémoire (coûts minimal,\nmaximal, amorti)\n• Course content: et mise en pratique dans l’approche de résolution de problèmes « Diviser pour régner ». Course name: http://example.org/course/UE_XLG3IU010" <http://faiss.org/ba3b0080ad908e36fe9b801489a607f005d25f547e1d0e884ff7279086f4aea8> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/is_aligned_with> _:Nbf2722b4ff684ac187ba685b40369df6 <http://faiss.org/ba3b0080ad908e36fe9b801489a607f005d25f547e1d0e884ff7279086f4aea8> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/is_aligned_with> _:Nad037c7a0ad347bc8a83472a3c4067dd <http://faiss.org/ba3b0080ad908e36fe9b801489a607f005d25f547e1d0e884ff7279086f4aea8> .
_:Nad037c7a0ad347bc8a83472a3c4067dd <http://example.org/has_chunk> "AL-Foundational: Foundational Data Structures and Algorithms\nCS Core: (See also: SDF-Data-Structures, SDF-Algorithms)\n1. Abstract Data Type (ADT) and operations on an ADT (See also: FPL-Types)\na. Dictionary operations (insert, delete, find)\n2. Arrays\na. Numeric vs non-numeric, character strings\nb. Single (vector) vs multidimensional (matrix)\n3. Records/Structs/Tuples and Objects (See also: FPL-OOP)\n4. Linked lists (for historical reasons)\na. Single vs Double and Linear vs Circular\n5. Stacks\n6" <http://faiss.org/ba3b0080ad908e36fe9b801489a607f005d25f547e1d0e884ff7279086f4aea8> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/is_aligned_with> _:Nb88696f0402e4d849470c8e8852a9c12 <http://faiss.org/ba3b0080ad908e36fe9b801489a607f005d25f547e1d0e884ff7279086f4aea8> .
_:Nb88696f0402e4d849470c8e8852a9c12 <http://example.org/has_chunk> ". Space Complexity\ni. NSpace and PSpace\nii. Savitch’s theorem\nIllustrative Learning Outcomes:\nCS Core:\n1. Prepare a presentation that explains to first year students the basic concepts of algorithmic\ncomplexity including best, average, and worst-case algorithm behavior, Big- O, Omega, and Theta\nnotations, complexity classes, time and space tradeoffs, empirical measurement, and impact on\npractical problems.\n2. Using examples, explain each of the foundational complexity classes in this unit.\n3" <http://faiss.org/ba3b0080ad908e36fe9b801489a607f005d25f547e1d0e884ff7279086f4aea8> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU020" <http://groq.org/051faf7a278571726883f57ab4a2916b9dc3c4321804507c19c47c7274643ecf> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Logique pour l'informatique Objectif: (résultats d'apprentissage)\nconsistance et complétude d'un système de preuves.\n4. Représenter une preuve de la déduction naturelle sous forme d'arbre d'inférence.\n5. Utiliser les algorithmes d'unification et de résolution pour le raisonnement automatique sur les\nformules logiques.\n1) Raisonnement algébrique booléen\n• Dualités des connecteurs logiques\n• Formes normales conjonctive et disjonctive\n2) Systèmes de preuves\n• Système d'inférence associé à une définition inductive\n• Preuve d'appartenance à un ensemble inductif par un arbre de preuves\n• Règles d'inférences de la déduction naturelle pour la logique propositionnelle\n• Distinguer logique classique et logique intuitionniste\n3) Donner du sens aux langages logique Course content: • Interprétation, modèle, satisfiabilité, validité\n• Correspondance avec le système de preuve: correction et complétude\n4) Calcul des prédicats\n• Manipulation des quantificateurs\n• Skolémisation, forme clausale\n• Théorie logique\n5) Raisonner automatiquement sur les formules logique\n• Algorithme d'unification\n• Algorithme de résolution Course name: http://example.org/course/UE_XLG3IU020</page1>\n        <page2>Pages:70-70 HOURS CS Core = 2 KA Core = 2 AI-KRR: Fundamental Knowledge\nRepresentation and Reasoning CS Core: 1\\. Types of representations a.\nSymbolic, logical i. Creating a representation from a natural language problem\nstatement b. Learned subsymbolic representations c. Graphical models (e.g.,\nnaive Bayes, Bayesian network) 2\\. Review of probabilistic reasoning, Bayes\ntheorem (See also: MSF-Probability) 3\\. Bayesian reasoning a. Bayesian\ninference KA Core: 4\\. Random variables and probability distributions a.\nAxioms of probability b. Probabilistic inference c. Bayes' Rule (derivation)\nd. Bayesian inference (more complex examples) 5\\. Independence 6\\. Conditional\nIndependence 7\\. Markov chains and Markov models 8\\. Utility and decision\nmaking Illustrative Learning Outcomes: 1\\. Given a natural language problem\nstatement, encode it as a symbolic or logical representation. 2\\. Explain how\nwe can make decisions under uncertainty, using concepts such as Bayes theorem\nand utility. 3\\. Compute a probabilistic inference in a real-world problem\nusing Bayes' theorem to determine the probability of a hypothesis given\nevidence. 4\\. Apply Bayes' rule to determine the probability of a hypothesis\ngiven evidence. 5\\. Compute the probability of outcomes and test whether\noutcomes are independent. 71 AI-ML: Machine Learning CS Core: 1\\. Definition\nand examples of a broad variety of machine learning tasks a. Supervised\nlearning i. Classification ii. Regression b. Reinforcement learning c.\nUnsupervised learning i. Clustering 2\\. Fundamental ideas: a. No free lunch\ntheorem: no one learner can solve all problems; representational design\ndecisions have consequences. b. Sources of error and undecidability</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/051faf7a278571726883f57ab4a2916b9dc3c4321804507c19c47c7274643ecf> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/051faf7a278571726883f57ab4a2916b9dc3c4321804507c19c47c7274643ecf> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/has_schema_type> _:Nca52b14899b342f8bcd44e31aa39f9ec <http://groq.org/051faf7a278571726883f57ab4a2916b9dc3c4321804507c19c47c7274643ecf> .
_:Nca52b14899b342f8bcd44e31aa39f9ec <http://schema.org/answer> "0" <http://groq.org/051faf7a278571726883f57ab4a2916b9dc3c4321804507c19c47c7274643ecf> .
_:Nca52b14899b342f8bcd44e31aa39f9ec <http://schema.org/explain> "Lecture covers logic/proof systems but lacks KU's probabilistic reasoning, Bayesian methods, and ML topics" <http://groq.org/051faf7a278571726883f57ab4a2916b9dc3c4321804507c19c47c7274643ecf> .
_:Nca52b14899b342f8bcd44e31aa39f9ec <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/051faf7a278571726883f57ab4a2916b9dc3c4321804507c19c47c7274643ecf> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/eb739977e1f7860d231e4474a883619f8618ae3f6da02ca2515afe31ec2a2756> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/has_schema_type> _:N68046293fc7e406d9b4f366e4c6cf4f8 <http://groq.org/eb739977e1f7860d231e4474a883619f8618ae3f6da02ca2515afe31ec2a2756> .
_:N68046293fc7e406d9b4f366e4c6cf4f8 <http://schema.org/answer> "0" <http://groq.org/eb739977e1f7860d231e4474a883619f8618ae3f6da02ca2515afe31ec2a2756> .
_:N68046293fc7e406d9b4f366e4c6cf4f8 <http://schema.org/explain> "The lecture does not cover the technical content of the KU." <http://groq.org/eb739977e1f7860d231e4474a883619f8618ae3f6da02ca2515afe31ec2a2756> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU030" <http://groq.org/eb739977e1f7860d231e4474a883619f8618ae3f6da02ca2515afe31ec2a2756> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU030</page1>\n        <page2>Pages: 150-151 HOURS CS Core = 3 KA Core = 2 GIT-Fundamentals: Fundamental\nConcepts CS Core: 1\\. Overview of graphics and visualization. 2\\. Basic\ngraphics pipeline architecture. 3\\. 2D and 3D transformations. 4\\.\nRasterization and rendering techniques. 5\\. Fundamental shading models. KA\nCore: 6\\. Advanced rendering techniques. 7\\. Applications of visualization in\ndifferent fields. 8\\. Interaction methods for graphical environments.\nIllustrative Learning Outcomes: 1\\. Explain the graphics rendering pipeline.\n2\\. Differentiate between rasterization and ray tracing. 3\\. Apply\ntransformations to 2D and 3D models.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/eb739977e1f7860d231e4474a883619f8618ae3f6da02ca2515afe31ec2a2756> .
_:N68046293fc7e406d9b4f366e4c6cf4f8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/eb739977e1f7860d231e4474a883619f8618ae3f6da02ca2515afe31ec2a2756> .
_:Nfdf67f3d8c8b42a4aa8c72842811b07e <http://schema.org/explain> "Lecture focuses on OOP (inheritance/polymorphism), while KU centers on functional programming concepts (lambda, closures, immutability) not covered in the lecture." <http://groq.org/e868f26034de75c0d6df1b9e2ef9fd0106d1ecb3a881369cb8fc1d1124df7872> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/e868f26034de75c0d6df1b9e2ef9fd0106d1ecb3a881369cb8fc1d1124df7872> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Programmation à Objets Objectif: (résultats d'apprentissage) Connaître les mécanismes d’héritage et de polymorphisme Course content: Classes abstraites Course name: http://example.org/course/UE_XLG3IU030</page1>\n        <page2>Pages: 131-132-133 HOURS CS Core = 4 KA Core = 3 FPL-Functional: Functional\nProgramming CS Core: 1\\. Lambda expressions and evaluation: (See also: AL-\nModels, FPL-Formalism) a. Variable binding and scope rules. (See also: SDF-\nFundamentals) b. Parameter-passing. (See also: SDF-Fundamentals) c. Nested\nlambda expressions and reduction order. 2\\. Effect-free programming: a.\nFunction calls have no side effects, facilitating compositional reasoning. b.\nImmutable variables and data copying vs reduction. c. Use of recursion vs\nloops vs pipelining (map/reduce). 3\\. Processing structured data (e.g., trees)\nvia functions with cases for each data variant: a. Functions defined over\ncompound data in terms of functions applied to the constituent pieces. b.\nPersistent data structures. 4\\. Using higher-order functions (taking,\nreturning, and storing functions). KA Core: 5\\. Metaprogramming and\nreflection. 6\\. Function closures (functions using variables in the enclosing\nlexical environment). a. Basic meaning and definition - creating closures at\nrun-time by capturing the environment. b. Canonical idioms: call-backs,\narguments to iterators, reusable code via function arguments. c. Using a\nclosure to encapsulate data in its environment. d. Delayed versus eager\nevaluation. Non-core: 7\\. Graph reduction machine and call-by-need. 8\\.\nImplementing delayed evaluation. 9\\. Integration with logic programming\nparadigm using concepts such as equational logic, narrowing, residuation and\nsemantic unification. (See also: FPL-Logic) 10\\. Integration with other\nprogramming paradigms such as imperative and object-oriented. Illustrative\nlearning outcomes: CS Core: 1\\. Develop basic algorithms that avoid assigning\nto mutable states or considering reference equality. 2\\. Develop useful\nfunctions that take and return other functions. 3\\. Compare and contrast how\ncomputational solutions to a problem differ in procedural, functional, and\nobject-oriented approaches. 4\\. Compare and contrast mechanisms to define and\nprotect data elements within procedural, functional, and object-oriented\napproaches. KA Core: 5\\. Explain a simple example of lambda expression being\nimplemented using a virtual machine, such as a SECD machine, showing storage\nand reclaim of the environment. 6\\. Correctly interpret variables and lexical\nscope in a program using function closures. 7\\. Use functional encapsulation\nmechanisms such as closures and modular interfaces. 8\\. Compare and contrast\nstateful vs stateless execution. 9\\. Define and use iterators and other\noperations on aggregates, including operations that take functions as\narguments, in multiple programming languages, selecting the most natural\nidioms for each language. (See also: FPL-OOP) Non-core: 10\\. Illustrate graph\nreduction using a l-expression using a shared subexpression. 11\\. Illustrate\nthe execution of a simple nested l-expression using an abstract machine, such\nas an ABC machine. 12\\. Illustrate narrowing, residuation, and semantic\nunification using simple illustrative examples. 13\\. Illustrate the\nconcurrency constructs using simple programming examples of known concepts\nsuch as a buffer being read and written concurrently or sequentially. (See\nalso: FPL-OOP)</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/e868f26034de75c0d6df1b9e2ef9fd0106d1ecb3a881369cb8fc1d1124df7872> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU030" <http://groq.org/e868f26034de75c0d6df1b9e2ef9fd0106d1ecb3a881369cb8fc1d1124df7872> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/has_schema_type> _:Nfdf67f3d8c8b42a4aa8c72842811b07e <http://groq.org/e868f26034de75c0d6df1b9e2ef9fd0106d1ecb3a881369cb8fc1d1124df7872> .
_:Nfdf67f3d8c8b42a4aa8c72842811b07e <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/e868f26034de75c0d6df1b9e2ef9fd0106d1ecb3a881369cb8fc1d1124df7872> .
_:Nfdf67f3d8c8b42a4aa8c72842811b07e <http://schema.org/answer> "0" <http://groq.org/e868f26034de75c0d6df1b9e2ef9fd0106d1ecb3a881369cb8fc1d1124df7872> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/b650ccb7c0dfbbcfbbaf5f75a485c10c74e49a294c554f87d23014cf77a7042d> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU040" <http://groq.org/b650ccb7c0dfbbcfbbaf5f75a485c10c74e49a294c554f87d23014cf77a7042d> .
_:Na0b5a7e6927c40639150d9d7f1b6e3b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/b650ccb7c0dfbbcfbbaf5f75a485c10c74e49a294c554f87d23014cf77a7042d> .
_:Na0b5a7e6927c40639150d9d7f1b6e3b1 <http://schema.org/answer> "0" <http://groq.org/b650ccb7c0dfbbcfbbaf5f75a485c10c74e49a294c554f87d23014cf77a7042d> .
_:Na0b5a7e6927c40639150d9d7f1b6e3b1 <http://schema.org/explain> "The lecture focuses on business economics, while the KU covers computer science and augmented reality, with no overlap." <http://groq.org/b650ccb7c0dfbbcfbbaf5f75a485c10c74e49a294c554f87d23014cf77a7042d> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/has_schema_type> _:Na0b5a7e6927c40639150d9d7f1b6e3b1 <http://groq.org/b650ccb7c0dfbbcfbbaf5f75a485c10c74e49a294c554f87d23014cf77a7042d> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Connaissance de l'entreprise Objectif: (résultats d'apprentissage)\nl’entreprise dans son environnement) Course content: Approche économique de l’entreprise Course name: http://example.org/course/UE_XLG3TU040</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD GIT-Augmented Reality: Core\nConcepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nGIT-Augmented Reality. 2\\. Apply principles in practical scenarios. 3\\.\nAnalyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/b650ccb7c0dfbbcfbbaf5f75a485c10c74e49a294c554f87d23014cf77a7042d> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/d808ab28183898da96ace8f0be8580b3e51a9963daa2e07c700573143a4fe4bc> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/has_schema_type> _:N7ad52b8730bc496b85cbf052dfd79af3 <http://groq.org/d808ab28183898da96ace8f0be8580b3e51a9963daa2e07c700573143a4fe4bc> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 2 Objectif: (résultats d'apprentissage)\ndonnées (itératifs et récursifs) Course content: Structures de données non-linéaires associatives (table associative, ensemble, classe-union) Course name: http://example.org/course/UE_XLG4IU010</page1>\n        <page2>Pages:88-90 HOURS CS Core = 11 KA Core = 6 AL-Foundational: Foundational Data\nStructures and Algorithms CS Core: (See also: SDF-Data-Structures, SDF-\nAlgorithms) 1\\. Abstract Data Type (ADT) and operations on an ADT (See also:\nFPL-Types) a. Dictionary operations (insert, delete, find) 2\\. Arrays a.\nNumeric vs non-numeric, character strings b. Single (vector) vs\nmultidimensional (matrix) 3\\. Records/Structs/Tuples and Objects (See also:\nFPL-OOP) 4\\. Linked lists (for historical reasons) a. Single vs Double and\nLinear vs Circular 5\\. Stacks 6\\. Queues and deques a. Heap-based priority\nqueue 7\\. Hash tables/maps a. Collision resolution and complexity (e.g.,\nprobing, chaining, rehash) 8\\. Graphs (e.g., [un]directed, [a]cyclic,\n[un]connected, and [un]weighted) (See also: MSF-Discrete) a. Graph\nrepresentation: adjacency list vs matrix 9\\. Trees (See also: MSF-Discrete) a.\nBinary, n-ary, and search trees b. Balanced (e.g., AVL, Red-Black, Heap) 10\\.\nSets (See also: MSF-Discrete) 11\\. Search algorithms a. O(n) complexity (e.g.,\nlinear/sequential array/list search) b. O(log2 n) complexity (e.g., binary\nsearch) c. O(logb n) complexity (e.g., uninformed depth/breadth-first tree\nsearch) 12\\. Sorting algorithms (e.g., stable, unstable) a. O(n2) complexity\n(e.g., insertion, selection), b. O(n log n) complexity (e.g., quicksort,\nmerge, timsort) 13\\. Graph algorithms a. Shortest path (e.g., Dijkstra's,\nFloyd's) b. Minimal spanning tree (e.g., Prim's, Kruskal's) KA Core: 14\\.\nSorting algorithms a. O(n log n) complexity heapsort b. Pseudo O(n) complexity\n(e.g., bucket, counting, radix) 15\\. Graph algorithms a. Transitive closure\n(e.g., Warshall's) b. Topological sort 16\\. Matching a. Efficient string\nmatching (e.g., Boyer-Moore, Knuth-Morris-Pratt) b. Longest common subsequence\nmatching c. Regular expression matching Non-core: 17\\. Cryptography algorithms\n(e.g., SHA-256) (See also: SEC-Crypto) 18\\. Parallel algorithms (See also:\nPDC-Algorithms, FPL-Parallel) 19\\. Consensus algorithms (e.g., Blockchain)\n(See also: SEC-Crypto) a. Proof of work vs proof of stake (See also: SEP-\nSustainability) 20\\. Quantum computing algorithms (See also: AL-Models, AR-\nQuantum) a. Oracle-based (e.g., Deutsch-Jozsa, Bernstein-Vazirani, Simon) b.\nSuperpolynomial speed-up via QFT (e.g., Shor's) c. Polynomial speed-up via\namplitude amplification (e.g., Grover's) 21\\. Fast-Fourier Transform (FFT)\nalgorithm 22\\. Differential evolution algorithm Illustrative Learning\nOutcomes: CS Core: 1\\. For each ADT/Data-Structure in this unit a. Explain its\ndefinition, properties, representation(s), and associated ADT operations. b.\nExplain step-by-step how the ADT operations associated with the data structure\ntransform it. 2\\. For each algorithm in this unit explain step-by-step how the\nalgorithm operates. 3\\. For each algorithmic approach (e.g., sorting) in this\nunit apply a prototypical example of the approach (e.g., merge sort). 90 4\\.\nGiven requirements for a problem, develop multiple solutions using various\ndata structures and algorithms. Subsequently, evaluate the suitability,\nstrengths, and weaknesses selecting an approach that best satisfies the\nrequirements. 5\\. Explain how collision avoidance and collision resolution is\nhandled in hash tables. 6\\. Explain factors beyond computational efficiency\nthat influence the choice of algorithms, such as programming time,\nmaintainability, and the use of application-specific patterns in the input\ndata. 7\\. Explain the heap property and the use of heaps as an implementation\nof a priority queue. KA Core: 8\\. For each of the algorithms and algorithmic\napproaches in the KA Core topics: a. Explain a prototypical example of the\nalgorithm, and b. Explain step-by-step how the algorithm operates. Non-core:\n9\\. An appreciation of quantum computation and its application to certain\nproblems.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/d808ab28183898da96ace8f0be8580b3e51a9963daa2e07c700573143a4fe4bc> .
_:N7ad52b8730bc496b85cbf052dfd79af3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/d808ab28183898da96ace8f0be8580b3e51a9963daa2e07c700573143a4fe4bc> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU010" <http://groq.org/d808ab28183898da96ace8f0be8580b3e51a9963daa2e07c700573143a4fe4bc> .
_:N7ad52b8730bc496b85cbf052dfd79af3 <http://schema.org/answer> "0" <http://groq.org/d808ab28183898da96ace8f0be8580b3e51a9963daa2e07c700573143a4fe4bc> .
_:N7ad52b8730bc496b85cbf052dfd79af3 <http://schema.org/explain> "The lecture focuses on specific data structures without covering the broader range of topics in the KU." <http://groq.org/d808ab28183898da96ace8f0be8580b3e51a9963daa2e07c700573143a4fe4bc> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/d9e26e2fc44cee27be43c2f42c8f365fd7784683548b1b8c9a74392fea232356> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3AU010</page1>\n        <page2>Pages:79-80 HOURS CS Core = 0 KA Core = 0 AI-NLP: Natural Language Processing\nNon-core: 1\\. Deterministic and stochastic grammars 2\\. Parsing algorithms a.\nCFGs and chart parsers (e.g., CYK) b. Probabilistic CFGs and weighted CYK 3\\.\nRepresenting meaning/Semantics a. Logic-based knowledge representations b.\nSemantic roles c. Temporal representations d. Beliefs, desires, and intentions\n4\\. Corpus-based methods 5\\. N-grams and HMMs 6\\. Smoothing and backoff 7\\.\nExamples of use: POS tagging and morphology 8\\. Information retrieval (See\nalso: DM-Unstructured) a. Vector space model i. TF & IDF b. Precision and\nrecall 9\\. Information extraction 10\\. Language translation 11\\. Text\nclassification, categorization a. Bag of words model 12\\. Deep learning for\nNLP (See also: AI-ML) a. RNNs b. Transformers c. Multi-modal embeddings (e.g.,\nimages + text) d. Generative language models Illustrative Learning Outcomes:\n1\\. Define and contrast deterministic and stochastic grammars, providing\nexamples to show the adequacy of each. 2\\. Simulate, apply, or implement\nclassic and stochastic algorithms for parsing natural language. 3\\. Identify\nthe challenges of representing meaning. 4\\. List the advantages of using\nstandard corpora. Identify examples of current corpora for a variety of NLP\ntasks. 5\\. Identify techniques for information retrieval, language\ntranslation, and text classification. 6\\. Implement a TF/IDF transform, use it\nto extract features from a corpus, and train an off-the-shelf machine learning\nalgorithm using those features to do text classification.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/d9e26e2fc44cee27be43c2f42c8f365fd7784683548b1b8c9a74392fea232356> .
_:N520b8dbf635348518a7d96a9626f4a46 <http://schema.org/explain> "The lecture focuses on teaching methods in English and does not cover the NLP topics outlined in the KU." <http://groq.org/d9e26e2fc44cee27be43c2f42c8f365fd7784683548b1b8c9a74392fea232356> .
_:N520b8dbf635348518a7d96a9626f4a46 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/d9e26e2fc44cee27be43c2f42c8f365fd7784683548b1b8c9a74392fea232356> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3AU010" <http://groq.org/d9e26e2fc44cee27be43c2f42c8f365fd7784683548b1b8c9a74392fea232356> .
_:N520b8dbf635348518a7d96a9626f4a46 <http://schema.org/answer> "0" <http://groq.org/d9e26e2fc44cee27be43c2f42c8f365fd7784683548b1b8c9a74392fea232356> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/has_schema_type> _:N520b8dbf635348518a7d96a9626f4a46 <http://groq.org/d9e26e2fc44cee27be43c2f42c8f365fd7784683548b1b8c9a74392fea232356> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/d6be7512bf3f331d502e15aed8292ebbd946d677299d41a0c9b646149229e81b> .
_:N66400f85172148c98d509e23095702fc <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/d6be7512bf3f331d502e15aed8292ebbd946d677299d41a0c9b646149229e81b> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Systèmes d'exploitation Objectif: (résultats d'apprentissage)\nsynchronisation/communication (Application)\n• Etre capable d'utiliser les mécanismes de synchronisation usuels sous Linux (sémaphores,\nmutexes, signaux) (Application)\n• Comprendre le principe de mémoire virtuelle (Initiation)\n• Savoir gérer les entrées/sorties sous Linux (Initiation) Course content: par le système d'exploitation y sont exposées : comment les processus se partagent-ils l'accès au\nprocesseur ? Comment se synchronisent-ils et quels mécanismes leur permettent d'échanger des\ndonnées ? Comment sont gérés la mémoire et les entrées/sorties ? Course name: http://example.org/course/UE_XLG4IU030</page1>\n        <page2>Pages: 133-134 HOURS CS Core = 2 KA Core = 0 FPL-Scripting: Shell Scripting CS\nCore: 1\\. Error/exception handling 2\\. Piping (See also: AR-Organization, SF-\nOverview, OS-Process) 3\\. System commands (See also: SF-Overview) a. Interface\nwith operating systems (See also: SF-Overview, OS-Principles) 4\\. Environment\nvariables (See also: SF-Overview) 5\\. File abstraction and operators (See\nalso: SDF-Fundamentals, OS-Files, SF-Resource) 6\\. Data structures, such as\narrays and lists. (See also: AL-Foundational, SDF-Fundamentals, SDFData-\nStructures) 7\\. Regular expressions (See also: AL-Models) 8\\. Programs and\nprocesses (See also: OS-Process) 9\\. Workflow Illustrative learning outcomes:\nCS Core: 1\\. Create and execute automated scripts to manage various system\ntasks. 2\\. Solve various text processing problems through scripting.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/d6be7512bf3f331d502e15aed8292ebbd946d677299d41a0c9b646149229e81b> .
_:N66400f85172148c98d509e23095702fc <http://schema.org/answer> "0" <http://groq.org/d6be7512bf3f331d502e15aed8292ebbd946d677299d41a0c9b646149229e81b> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU030" <http://groq.org/d6be7512bf3f331d502e15aed8292ebbd946d677299d41a0c9b646149229e81b> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/has_schema_type> _:N66400f85172148c98d509e23095702fc <http://groq.org/d6be7512bf3f331d502e15aed8292ebbd946d677299d41a0c9b646149229e81b> .
_:N66400f85172148c98d509e23095702fc <http://schema.org/explain> "The lecture focuses on OS concepts like synchronization and memory, while the KU is about scripting and data structures, with little overlap." <http://groq.org/d6be7512bf3f331d502e15aed8292ebbd946d677299d41a0c9b646149229e81b> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/9dede1cbb6908bb1f7b2c8349c5b5da2c675c41987f301628efa2934e3277384> .
_:N8d0f1aa445a643c0890822641718da4b <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/9dede1cbb6908bb1f7b2c8349c5b5da2c675c41987f301628efa2934e3277384> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 1 Objectif: (résultats d'apprentissage)\n•\nÉvaluer une implémentation de structure de données en temps et en place mémoire (coûts minimal,\nmaximal, amorti)\n• Course content: et mise en pratique dans l’approche de résolution de problèmes « Diviser pour régner ». Course name: http://example.org/course/UE_XLG3IU010</page1>\n        <page2>Pages: 133 HOURS CS Core = 0 KA Core = 2 + 1 (MSF) FPL-Logic: Logic\nProgramming KA Core: 1\\. Universal vs existential quantifiers. (See also: AI-\nLRR, MSF-Discrete) 2\\. First order predicate logic vs higher order logic. (See\nalso: AI-LRR, MSF-Discrete) 3\\. Expressing complex relations using logical\nconnectives and simpler relations. 4\\. Definitions of Horn clause, facts,\ngoals and subgoals. 5\\. Unification and unification algorithm; unification vs\nassertion vs expression evaluation. 6\\. Mixing relations with functions. (See\nalso: MSF-Discrete) 7\\. Cuts, backtracking, and non-determinism. 8\\. Closed-\nworld vs open-world assumptions. Non-core: 9\\. Memory overhead of variable\ncopying in handling iterative programs. 10\\. Programming constructs to store\npartial computation and pruning search trees. 11\\. Mixing functional\nprogramming and logic programming using concepts such as equational logic,\nnarrowing, residuation, and semantic unification. (See also: FPL-Functional)\n12\\. Higher-order, constraint, and inductive logic programming. (See also: AI-\nLRR) 13\\. Integration with other programming paradigms such as object-oriented\nprogramming. 14\\. Advance programming constructs such as difference-lists,\ncreating user defined data structures, set of, etc. Illustrative learning\noutcomes: KA Core: 1\\. Use a logic language to implement a conventional\nalgorithm. 2\\. Use a logic language to implement an algorithm employing\nimplicit search using clauses, relations, and cuts. 3\\. Use a simple\nillustrative example to show correspondence between First Order Predicate\nLogic (FOPL) and logic programs using Horn clauses. 4\\. Use examples to\nillustrate the unification algorithm and its role of parameter-passing in\nquery reduction. 5\\. Use simple logic programs interleaving relations,\nfunctions, and recursive programming such as factorial and Fibonacci numbers\nand simple complex relationships between entities and illustrate execution and\nparameter-passing using unification and backtracking. Non-core: 6\\. Illustrate\ncomputation of simple programs such as Fibonacci and show overhead of\nrecomputation, and then show how to improve execution overhead.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/9dede1cbb6908bb1f7b2c8349c5b5da2c675c41987f301628efa2934e3277384> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU010" <http://groq.org/9dede1cbb6908bb1f7b2c8349c5b5da2c675c41987f301628efa2934e3277384> .
_:N8d0f1aa445a643c0890822641718da4b <http://schema.org/explain> "The lecture focuses on algorithmics and data structures, while the KU covers logic programming concepts." <http://groq.org/9dede1cbb6908bb1f7b2c8349c5b5da2c675c41987f301628efa2934e3277384> .
_:N8d0f1aa445a643c0890822641718da4b <http://schema.org/answer> "0" <http://groq.org/9dede1cbb6908bb1f7b2c8349c5b5da2c675c41987f301628efa2934e3277384> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/has_schema_type> _:N8d0f1aa445a643c0890822641718da4b <http://groq.org/9dede1cbb6908bb1f7b2c8349c5b5da2c675c41987f301628efa2934e3277384> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Systèmes d'exploitation Objectif: (résultats d'apprentissage)\nsynchronisation/communication (Application)\n• Etre capable d'utiliser les mécanismes de synchronisation usuels sous Linux (sémaphores,\nmutexes, signaux) (Application)\n• Comprendre le principe de mémoire virtuelle (Initiation)\n• Savoir gérer les entrées/sorties sous Linux (Initiation) Course content: par le système d'exploitation y sont exposées : comment les processus se partagent-ils l'accès au\nprocesseur ? Comment se synchronisent-ils et quels mécanismes leur permettent d'échanger des\ndonnées ? Comment sont gérés la mémoire et les entrées/sorties ? Course name: http://example.org/course/UE_XLG4IU030</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD PDC-Synchronization and\nConcurrency: Core Concepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder\ntopic 2 3\\. Placeholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\.\nPlaceholder advanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key\nconcepts of PDC-Synchronization and Concurrency. 2\\. Apply principles in\npractical scenarios. 3\\. Analyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/40c62c1df17c90a766897330dd6eee2a753bc0be7e87bd63ddafbb9e4382e9f3> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/40c62c1df17c90a766897330dd6eee2a753bc0be7e87bd63ddafbb9e4382e9f3> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/has_schema_type> _:N162a7077398541329b74e5d75594662b <http://groq.org/40c62c1df17c90a766897330dd6eee2a753bc0be7e87bd63ddafbb9e4382e9f3> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU030" <http://groq.org/40c62c1df17c90a766897330dd6eee2a753bc0be7e87bd63ddafbb9e4382e9f3> .
_:N162a7077398541329b74e5d75594662b <http://schema.org/explain> "Covers synchronization mechanisms (semaphores, mutexes) and virtual memory, aligning with PDC-Synchronization/Concurrency core concepts." <http://groq.org/40c62c1df17c90a766897330dd6eee2a753bc0be7e87bd63ddafbb9e4382e9f3> .
_:N162a7077398541329b74e5d75594662b <http://schema.org/answer> "1" <http://groq.org/40c62c1df17c90a766897330dd6eee2a753bc0be7e87bd63ddafbb9e4382e9f3> .
_:N162a7077398541329b74e5d75594662b <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/40c62c1df17c90a766897330dd6eee2a753bc0be7e87bd63ddafbb9e4382e9f3> .
_:N726aad7cb4f041a48461be62531c2a0b <http://example.org/has_chunk> "Illustrative Learning Outcomes:\n1. Apply keyframe animation techniques to an interactive application.\n2. Differentiate between procedural and AI-driven animation.\n3. Understand the role of physics in real-time simulations." <http://faiss.org/5b6f3192ab7c603e0f5b4e43f2f0ec7c77b45e9ad0fb0b35b14f2a6d42abe7ed> .
_:N0896203d46604871baf548e07bc9bf11 <http://example.org/has_chunk> ". Design Thinking and User-Centered Experience Design (e.g., methods of designing games; iteration, incrementing, and the double-diamond; phases of pre- and post-production; quality assurance, including alpha and beta testing; stakeholder and customer involvement; community management) (See also: SE-Design) \nc. Genres (e.g., adventure; walking simulator; first-person shooter; real-time strategy; multiplayer online battle arena (MOBA); role-playing game (rpg)) \nd. Audiences and Player Taxonomies (e.g" <http://faiss.org/5b6f3192ab7c603e0f5b4e43f2f0ec7c77b45e9ad0fb0b35b14f2a6d42abe7ed> .
_:N1a09e21612574060a9975d8623e5c5ab <http://example.org/has_score> "0.6699781"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/5b6f3192ab7c603e0f5b4e43f2f0ec7c77b45e9ad0fb0b35b14f2a6d42abe7ed> .
_:N1a09e21612574060a9975d8623e5c5ab <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Game_Platforms.txt> <http://faiss.org/5b6f3192ab7c603e0f5b4e43f2f0ec7c77b45e9ad0fb0b35b14f2a6d42abe7ed> .
<http://example.org/course/UE_XLG4IU070> <http://example.org/is_aligned_with> _:N0896203d46604871baf548e07bc9bf11 <http://faiss.org/5b6f3192ab7c603e0f5b4e43f2f0ec7c77b45e9ad0fb0b35b14f2a6d42abe7ed> .
_:N0896203d46604871baf548e07bc9bf11 <http://example.org/has_score> "0.67700875"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/5b6f3192ab7c603e0f5b4e43f2f0ec7c77b45e9ad0fb0b35b14f2a6d42abe7ed> .
<http://example.org/faiss> <http://example.org/input> "Label: Simulation de gestion Objectif: (résultats d'apprentissage) conséquences.\n• Pouvoir s’exprimer spontanément, très couramment, de façon précise et rendre distinctes de\nfines nuances de sens en rapport avec les sujets abordés.\n• Être capable de raisonner par soi-même. Course content: Simulation de la gestion ou jeu d’entreprise sur plusieurs exercices d’une entreprise dans un milieu\nconcurrentiel avec un focus sur les décisions de marketing. Course name: http://example.org/course/UE_XLG4IU070" <http://faiss.org/5b6f3192ab7c603e0f5b4e43f2f0ec7c77b45e9ad0fb0b35b14f2a6d42abe7ed> .
_:N1a09e21612574060a9975d8623e5c5ab <http://example.org/has_chunk> ". Audiences and Player Taxonomies (e.g., people who play games; diversity and broadening participation; pleasures, player types, and preferences; Bartle, yee) (See also: HCI-User) \ne. Proliferation of digital game technologies to domains beyond entertainment (e.g., Education and Training; Serious Games; Virtual Production; eSports; Gamification; Immersive Experience Design; Creative Industry Practice; Artistic Practice; Procedural Rhetoric) (See also: AI-SEP) \n \nIllustrative Learning Outcomes: \nKA Core: \n1" <http://faiss.org/5b6f3192ab7c603e0f5b4e43f2f0ec7c77b45e9ad0fb0b35b14f2a6d42abe7ed> .
<http://example.org/course/UE_XLG4IU070> <http://example.org/is_aligned_with> _:N1a09e21612574060a9975d8623e5c5ab <http://faiss.org/5b6f3192ab7c603e0f5b4e43f2f0ec7c77b45e9ad0fb0b35b14f2a6d42abe7ed> .
_:N726aad7cb4f041a48461be62531c2a0b <http://example.org/has_score> "0.6805508"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/5b6f3192ab7c603e0f5b4e43f2f0ec7c77b45e9ad0fb0b35b14f2a6d42abe7ed> .
_:N726aad7cb4f041a48461be62531c2a0b <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Graphics_and_Interactive_Techniques_GIT/GIT-Animation_and_Simulation.txt> <http://faiss.org/5b6f3192ab7c603e0f5b4e43f2f0ec7c77b45e9ad0fb0b35b14f2a6d42abe7ed> .
<http://example.org/course/UE_XLG4IU070> <http://example.org/is_aligned_with> _:N726aad7cb4f041a48461be62531c2a0b <http://faiss.org/5b6f3192ab7c603e0f5b4e43f2f0ec7c77b45e9ad0fb0b35b14f2a6d42abe7ed> .
_:N0896203d46604871baf548e07bc9bf11 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Game_Platforms.txt> <http://faiss.org/5b6f3192ab7c603e0f5b4e43f2f0ec7c77b45e9ad0fb0b35b14f2a6d42abe7ed> .
_:Ndc1ed677a1d9489694a8aef3655791e8 <http://schema.org/answer> "0" <http://groq.org/289034ec686ad3e69f2d48839a3c85df96adb40d2aa79de05a6b7fe70c0fd045> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Langages et automates Objectif: (résultats d'apprentissage)\n5. Course content: • Langages algébriques\n- Grammaire algébrique\n- Arbre de dérivation\n- Automates à pile\n• Hiérarchie de Chomsky\n- Classification des grammaires;\n- Algorithmes de reconnaissance pour les grammaires de type 1 et 2\n• Analyse lexicale et syntaxique\n- TP de flex et bison Course name: http://example.org/course/UE_XLG4IU020</page1>\n        <page2>Pages:79-80 HOURS CS Core = 0 KA Core = 0 AI-NLP: Natural Language Processing\nNon-core: 1\\. Deterministic and stochastic grammars 2\\. Parsing algorithms a.\nCFGs and chart parsers (e.g., CYK) b. Probabilistic CFGs and weighted CYK 3\\.\nRepresenting meaning/Semantics a. Logic-based knowledge representations b.\nSemantic roles c. Temporal representations d. Beliefs, desires, and intentions\n4\\. Corpus-based methods 5\\. N-grams and HMMs 6\\. Smoothing and backoff 7\\.\nExamples of use: POS tagging and morphology 8\\. Information retrieval (See\nalso: DM-Unstructured) a. Vector space model i. TF & IDF b. Precision and\nrecall 9\\. Information extraction 10\\. Language translation 11\\. Text\nclassification, categorization a. Bag of words model 12\\. Deep learning for\nNLP (See also: AI-ML) a. RNNs b. Transformers c. Multi-modal embeddings (e.g.,\nimages + text) d. Generative language models Illustrative Learning Outcomes:\n1\\. Define and contrast deterministic and stochastic grammars, providing\nexamples to show the adequacy of each. 2\\. Simulate, apply, or implement\nclassic and stochastic algorithms for parsing natural language. 3\\. Identify\nthe challenges of representing meaning. 4\\. List the advantages of using\nstandard corpora. Identify examples of current corpora for a variety of NLP\ntasks. 5\\. Identify techniques for information retrieval, language\ntranslation, and text classification. 6\\. Implement a TF/IDF transform, use it\nto extract features from a corpus, and train an off-the-shelf machine learning\nalgorithm using those features to do text classification.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/289034ec686ad3e69f2d48839a3c85df96adb40d2aa79de05a6b7fe70c0fd045> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/289034ec686ad3e69f2d48839a3c85df96adb40d2aa79de05a6b7fe70c0fd045> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/has_schema_type> _:Ndc1ed677a1d9489694a8aef3655791e8 <http://groq.org/289034ec686ad3e69f2d48839a3c85df96adb40d2aa79de05a6b7fe70c0fd045> .
_:Ndc1ed677a1d9489694a8aef3655791e8 <http://schema.org/explain> "Lecture covers grammars/automata but lacks NLP topics like stochastic parsing, semantics, IR, and deep learning" <http://groq.org/289034ec686ad3e69f2d48839a3c85df96adb40d2aa79de05a6b7fe70c0fd045> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU020" <http://groq.org/289034ec686ad3e69f2d48839a3c85df96adb40d2aa79de05a6b7fe70c0fd045> .
_:Ndc1ed677a1d9489694a8aef3655791e8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/289034ec686ad3e69f2d48839a3c85df96adb40d2aa79de05a6b7fe70c0fd045> .
_:N08c32c945df24daabcfb6fd707499860 <http://schema.org/answer> "1" <http://groq.org/de3a074f5910d369dd3644c8a7e785f3b0faba183d1b7804fd022e6d26491de9> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/has_schema_type> _:N08c32c945df24daabcfb6fd707499860 <http://groq.org/de3a074f5910d369dd3644c8a7e785f3b0faba183d1b7804fd022e6d26491de9> .
_:N08c32c945df24daabcfb6fd707499860 <http://schema.org/explain> "The lecture covers most of the topics mentioned in the KU, including classes, inheritance, polymorphism, and object-oriented design." <http://groq.org/de3a074f5910d369dd3644c8a7e785f3b0faba183d1b7804fd022e6d26491de9> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Programmation à Objets Objectif: (résultats d'apprentissage) Connaître les mécanismes d’héritage et de polymorphisme Course content: Classes abstraites Course name: http://example.org/course/UE_XLG3IU030</page1>\n        <page2>Pages: 130-131 HOURS CS Core = 4 + 1 (SDF) KA Core = 1 FPL-OOP: Object-\nOriented Programming CS Core: 1\\. Imperative programming as a subset of\nobject-oriented programming. 2\\. Object-oriented design: a. Decomposition into\nobjects carrying state and having behavior. b. Class-hierarchy design for\nmodeling. 3\\. Definition of classes: fields, methods, and constructors. (See\nalso: SDF-Fundamentals) 4\\. Subclasses, inheritance (including multiple\ninheritance), and method overriding. 5\\. Dynamic dispatch: definition of\nmethod-call. 6\\. Exception handling. (See also: SDF-Fundamentals, PDC-\nCoordination, SE-Construction) 7\\. Object-oriented idioms for encapsulation:\na. Privacy, data hiding, and visibility of class members. b. Interfaces\nrevealing only method signatures. c. Abstract base classes, traits and mixins.\n8\\. Dynamic vs static properties. 9\\. Composition vs inheritance. 10\\.\nSubtyping: a. Subtype polymorphism; implicit upcasts in typed languages. b.\nNotion of behavioral replacement: subtypes acting like supertype. c.\nRelationship between subtyping and inheritance. KA Core: 11\\. Collection\nclasses, iterators, and other common library components. 12\\. Metaprogramming\nand reflection. Illustrative Learning Outcomes: CS Core: 1\\. Enumerate the\ndifferences between imperative and object-oriented programming paradigms. 2\\.\nCompose a class through design, implementation, and testing to meet behavioral\nrequirements. 3\\. Build a simple class hierarchy utilizing subclassing that\nallows code to be reused for distinct subclasses. 4\\. Predict and validate\ncontrol flow in a program using dynamic dispatch. 5\\. Compare and contrast how\ncomputational solutions to a problem differ in procedural, functional, and\nobject-oriented approaches. 6\\. Compare and contrast mechanisms to define and\nprotect data elements within procedural, functional, and object-oriented\napproaches. 7\\. Compare and contrast the benefits and costs/impact of using\ninheritance (subclasses) and composition (specifically, how to base\ncomposition on higher order functions). 8\\. Explain the relationship between\nobject-oriented inheritance (code-sharing and overriding) and subtyping (the\nidea of a subtype being usable in a context that expects the supertype). 9\\.\nUse object-oriented encapsulation mechanisms such as interfaces and private\nmembers. 10\\. Define and use iterators and other operations on aggregates,\nincluding operations that take functions as arguments, in multiple programming\nlanguages, selecting the most natural idioms for each language. (See also:\nFPL-Functional) KA Core: 11\\. Use collection classes and iterators effectively\nto solve a problem.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/de3a074f5910d369dd3644c8a7e785f3b0faba183d1b7804fd022e6d26491de9> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU030" <http://groq.org/de3a074f5910d369dd3644c8a7e785f3b0faba183d1b7804fd022e6d26491de9> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/de3a074f5910d369dd3644c8a7e785f3b0faba183d1b7804fd022e6d26491de9> .
_:N08c32c945df24daabcfb6fd707499860 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/de3a074f5910d369dd3644c8a7e785f3b0faba183d1b7804fd022e6d26491de9> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/86870a93aa3b9b7f244cd1238496e2603b1dab3a1eedabdc7f5cc9dd85447b04> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/has_schema_type> _:Nad778b9277724f39b02ccf6e5b25b09c <http://groq.org/86870a93aa3b9b7f244cd1238496e2603b1dab3a1eedabdc7f5cc9dd85447b04> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU010" <http://groq.org/86870a93aa3b9b7f244cd1238496e2603b1dab3a1eedabdc7f5cc9dd85447b04> .
_:Nad778b9277724f39b02ccf6e5b25b09c <http://schema.org/explain> "The lecture focuses on teaching methodologies and professional integration, which does not cover the technical content of the Knowledge Unit on SE-Formal Methods." <http://groq.org/86870a93aa3b9b7f244cd1238496e2603b1dab3a1eedabdc7f5cc9dd85447b04> .
_:Nad778b9277724f39b02ccf6e5b25b09c <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/86870a93aa3b9b7f244cd1238496e2603b1dab3a1eedabdc7f5cc9dd85447b04> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/86870a93aa3b9b7f244cd1238496e2603b1dab3a1eedabdc7f5cc9dd85447b04> .
_:Nad778b9277724f39b02ccf6e5b25b09c <http://schema.org/answer> "0" <http://groq.org/86870a93aa3b9b7f244cd1238496e2603b1dab3a1eedabdc7f5cc9dd85447b04> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4AU010" <http://groq.org/256fdc79ca087d1ba9b0d213aa96ac0fbb4b61f2fb2c6b201be9cedefea27f6d> .
_:Nb354e4bb323b4eb49cefc7c58263f00a <http://schema.org/explain> "The lecture covers key concepts of SE-Formal Methods, applying principles in practical scenarios, and analyzing the importance of this topic in computing, which aligns with the KU's learning outcomes." <http://groq.org/256fdc79ca087d1ba9b0d213aa96ac0fbb4b61f2fb2c6b201be9cedefea27f6d> .
_:Nb354e4bb323b4eb49cefc7c58263f00a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/256fdc79ca087d1ba9b0d213aa96ac0fbb4b61f2fb2c6b201be9cedefea27f6d> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S4 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4AU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/256fdc79ca087d1ba9b0d213aa96ac0fbb4b61f2fb2c6b201be9cedefea27f6d> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/has_schema_type> _:Nb354e4bb323b4eb49cefc7c58263f00a <http://groq.org/256fdc79ca087d1ba9b0d213aa96ac0fbb4b61f2fb2c6b201be9cedefea27f6d> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/256fdc79ca087d1ba9b0d213aa96ac0fbb4b61f2fb2c6b201be9cedefea27f6d> .
_:Nb354e4bb323b4eb49cefc7c58263f00a <http://schema.org/answer> "1" <http://groq.org/256fdc79ca087d1ba9b0d213aa96ac0fbb4b61f2fb2c6b201be9cedefea27f6d> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/f719ab2fa0e73bd09dbb7fe30172b93c97cc934f6b1428d8513038d3039874d7> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Introduction aux probabilités Objectif: (résultats d'apprentissage)\n• Course content: Définition et calcul de la probabilité conditionnelle\n• Course name: http://example.org/course/UE_XLG3MU050</page1>\n        <page2>Pages: 188-189 HOURS CS Core = 11 KA Core = 29 MSF-Probability: Probability CS\nCore: 1\\. Basic notions: sample spaces, events, probability, conditional\nprobability, Bayes' rule 2\\. Discrete random variables and distributions 3\\.\nContinuous random variables and distributions 4\\. Expectation, variance, law\nof large numbers, central limit theorem 5\\. Conditional distributions and\nexpectation 6\\. Applications to computing, the difference between probability\nand statistics (as subjects) KA Core: The recommended topics are the same\nbetween CS core and KA-core, but with far more hours, the KA-core can cover\nthese topics in depth and might include more computing-related applications.\nIllustrative Learning Outcomes: CS Core: 1\\. Basic notions: sample spaces,\nevents, probability, conditional probability, Bayes' rule a. Translate a prose\ndescription of a probabilistic process into a formal setting of sample spaces,\noutcome probabilities, and events. b. Calculate the probability of simple\nevents. c. Determine whether two events are independent. d. Compute\nconditional probabilities, including through applying (and explaining) Bayes'\nRule. 2\\. Discrete random variables and distributions a. Define the concept of\na random variable and indicator random variable. b. Determine whether two\nrandom variables are independent. c. Identify common discrete distributions\n(e.g., uniform, Bernoulli, binomial, geometric). 3\\. Continuous random\nvariables and distributions a. Identify common continuous distributions (e.g.,\nuniform, normal, exponential). b. Calculate probabilities using cumulative\ndensity functions. 4\\. Expectation, variance, law of large numbers, central\nlimit theorem a. Define the concept of expectation and variance of a random\nvariable. b. Compute the expected value and variance of simple or common\ndiscrete/continuous random variables. c. Explain the relevance of the law of\nlarge numbers and central limit theorem to probability calculations. 5\\.\nConditional distributions and expectation a. Explain the distinction between\njoint, marginal, and conditional distributions. b. Compute marginal and\nconditional distributions from a full distribution, for both discrete and\ncontinuous random variables. c. Compute conditional expectations for both\ndiscrete and continuous random variables. 6\\. Applications to computing a.\nDescribe how probability can be used to model real-life situations or\napplications, such as predictive text, hash tables, and quantum computation.\nb. Apply probabilistic processes to solving computational problems, such as\nthrough randomized algorithms or in security contexts.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/f719ab2fa0e73bd09dbb7fe30172b93c97cc934f6b1428d8513038d3039874d7> .
_:N7d14a475b6d74c039db192166f1a8eed <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/f719ab2fa0e73bd09dbb7fe30172b93c97cc934f6b1428d8513038d3039874d7> .
<http://example.org/course/UE_XLG3MU050> <http://example.org/has_schema_type> _:N7d14a475b6d74c039db192166f1a8eed <http://groq.org/f719ab2fa0e73bd09dbb7fe30172b93c97cc934f6b1428d8513038d3039874d7> .
_:N7d14a475b6d74c039db192166f1a8eed <http://schema.org/answer> "0" <http://groq.org/f719ab2fa0e73bd09dbb7fe30172b93c97cc934f6b1428d8513038d3039874d7> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3MU050" <http://groq.org/f719ab2fa0e73bd09dbb7fe30172b93c97cc934f6b1428d8513038d3039874d7> .
_:N7d14a475b6d74c039db192166f1a8eed <http://schema.org/explain> "The lecture covers only conditional probability, a small part of the KU." <http://groq.org/f719ab2fa0e73bd09dbb7fe30172b93c97cc934f6b1428d8513038d3039874d7> .
_:N7adf8aa34c19461d9404187af32c4a08 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Graphics_and_Interactive_Techniques_GIT/GIT-3D_Modeling.txt> <http://faiss.org/db809157b4506702d89bccbeb8650bdd49d2c0e71707062068829e08b561ca11> .
<http://example.org/faiss> <http://example.org/input> "Label: Connaissance de l'entreprise Objectif: (résultats d'apprentissage)\nl’entreprise dans son environnement) Course content: Approche économique de l’entreprise Course name: http://example.org/course/UE_XLG3TU040" <http://faiss.org/db809157b4506702d89bccbeb8650bdd49d2c0e71707062068829e08b561ca11> .
_:Nb50119367baa4e308588c6b35271fa31 <http://example.org/has_chunk> ". Graph data (link traversal)\nc. Techniques for avoiding inefficient raw data access (e.g., “avg daily price”): materialized views\nand special data structures (e.g., Hyperloglog, bitmap)\nd. Geo-Spatial data (e.g., GIS databases) (See also: SPD-Interactive)\nIllustrative Learning Outcomes:\nCS Core:\n1. Describe the components of the relational data model.\n2. Model 1:1, 1:n, and n:m relationships using the relational data model.\nKA Core:\n3" <http://faiss.org/db809157b4506702d89bccbeb8650bdd49d2c0e71707062068829e08b561ca11> .
_:Nb50119367baa4e308588c6b35271fa31 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Date_Management_DM/DM-Modeling_Data_Modeling.txt> <http://faiss.org/db809157b4506702d89bccbeb8650bdd49d2c0e71707062068829e08b561ca11> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/is_aligned_with> _:N7adf8aa34c19461d9404187af32c4a08 <http://faiss.org/db809157b4506702d89bccbeb8650bdd49d2c0e71707062068829e08b561ca11> .
_:N0d760a35966c4377bd0764f8d2ebf610 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nGIT-Augmented Reality: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of GIT-Augmented Reality.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/db809157b4506702d89bccbeb8650bdd49d2c0e71707062068829e08b561ca11> .
_:N7adf8aa34c19461d9404187af32c4a08 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nGIT-3D Modeling: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of GIT-3D Modeling.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/db809157b4506702d89bccbeb8650bdd49d2c0e71707062068829e08b561ca11> .
_:Nb50119367baa4e308588c6b35271fa31 <http://example.org/has_score> "0.62942916"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/db809157b4506702d89bccbeb8650bdd49d2c0e71707062068829e08b561ca11> .
_:N7adf8aa34c19461d9404187af32c4a08 <http://example.org/has_score> "0.62821126"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/db809157b4506702d89bccbeb8650bdd49d2c0e71707062068829e08b561ca11> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/is_aligned_with> _:N0d760a35966c4377bd0764f8d2ebf610 <http://faiss.org/db809157b4506702d89bccbeb8650bdd49d2c0e71707062068829e08b561ca11> .
_:N0d760a35966c4377bd0764f8d2ebf610 <http://example.org/has_score> "0.634079"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/db809157b4506702d89bccbeb8650bdd49d2c0e71707062068829e08b561ca11> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/is_aligned_with> _:Nb50119367baa4e308588c6b35271fa31 <http://faiss.org/db809157b4506702d89bccbeb8650bdd49d2c0e71707062068829e08b561ca11> .
_:N0d760a35966c4377bd0764f8d2ebf610 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Graphics_and_Interactive_Techniques_GIT/GIT-Augmented_Reality.txt> <http://faiss.org/db809157b4506702d89bccbeb8650bdd49d2c0e71707062068829e08b561ca11> .
_:N9fa66971970a43f596cf3ff4b507be81 <http://schema.org/explain> "The lecture covers a significant portion of the KU, including topics such as classes, abstract classes, inheritance, polymorphism, and logic programming." <http://groq.org/ef72278b65d38a499f6a1cd35a4d76295d53108905b2d0bdbaf231fc347d2416> .
_:N9fa66971970a43f596cf3ff4b507be81 <http://schema.org/answer> "1" <http://groq.org/ef72278b65d38a499f6a1cd35a4d76295d53108905b2d0bdbaf231fc347d2416> .
_:N9fa66971970a43f596cf3ff4b507be81 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/ef72278b65d38a499f6a1cd35a4d76295d53108905b2d0bdbaf231fc347d2416> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/has_schema_type> _:N9fa66971970a43f596cf3ff4b507be81 <http://groq.org/ef72278b65d38a499f6a1cd35a4d76295d53108905b2d0bdbaf231fc347d2416> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/ef72278b65d38a499f6a1cd35a4d76295d53108905b2d0bdbaf231fc347d2416> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Programmation à Objets Objectif: (résultats d'apprentissage) Connaître les mécanismes d’héritage et de polymorphisme Course content: Classes abstraites Course name: http://example.org/course/UE_XLG3IU030</page1>\n        <page2>Pages: 133 HOURS CS Core = 0 KA Core = 2 + 1 (MSF) FPL-Logic: Logic\nProgramming KA Core: 1\\. Universal vs existential quantifiers. (See also: AI-\nLRR, MSF-Discrete) 2\\. First order predicate logic vs higher order logic. (See\nalso: AI-LRR, MSF-Discrete) 3\\. Expressing complex relations using logical\nconnectives and simpler relations. 4\\. Definitions of Horn clause, facts,\ngoals and subgoals. 5\\. Unification and unification algorithm; unification vs\nassertion vs expression evaluation. 6\\. Mixing relations with functions. (See\nalso: MSF-Discrete) 7\\. Cuts, backtracking, and non-determinism. 8\\. Closed-\nworld vs open-world assumptions. Non-core: 9\\. Memory overhead of variable\ncopying in handling iterative programs. 10\\. Programming constructs to store\npartial computation and pruning search trees. 11\\. Mixing functional\nprogramming and logic programming using concepts such as equational logic,\nnarrowing, residuation, and semantic unification. (See also: FPL-Functional)\n12\\. Higher-order, constraint, and inductive logic programming. (See also: AI-\nLRR) 13\\. Integration with other programming paradigms such as object-oriented\nprogramming. 14\\. Advance programming constructs such as difference-lists,\ncreating user defined data structures, set of, etc. Illustrative learning\noutcomes: KA Core: 1\\. Use a logic language to implement a conventional\nalgorithm. 2\\. Use a logic language to implement an algorithm employing\nimplicit search using clauses, relations, and cuts. 3\\. Use a simple\nillustrative example to show correspondence between First Order Predicate\nLogic (FOPL) and logic programs using Horn clauses. 4\\. Use examples to\nillustrate the unification algorithm and its role of parameter-passing in\nquery reduction. 5\\. Use simple logic programs interleaving relations,\nfunctions, and recursive programming such as factorial and Fibonacci numbers\nand simple complex relationships between entities and illustrate execution and\nparameter-passing using unification and backtracking. Non-core: 6\\. Illustrate\ncomputation of simple programs such as Fibonacci and show overhead of\nrecomputation, and then show how to improve execution overhead.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/ef72278b65d38a499f6a1cd35a4d76295d53108905b2d0bdbaf231fc347d2416> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU030" <http://groq.org/ef72278b65d38a499f6a1cd35a4d76295d53108905b2d0bdbaf231fc347d2416> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Unité Enseignement de Découverte Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU020</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/e27b3f6316394e876016f595684002405ae68056343505fe07b9ae91ce674aea> .
_:Nfe2724406d1a4166be12001d3bb6663f <http://schema.org/explain> "Lecture focuses on teaching methods, not SE-Formal Methods content" <http://groq.org/e27b3f6316394e876016f595684002405ae68056343505fe07b9ae91ce674aea> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/e27b3f6316394e876016f595684002405ae68056343505fe07b9ae91ce674aea> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/has_schema_type> _:Nfe2724406d1a4166be12001d3bb6663f <http://groq.org/e27b3f6316394e876016f595684002405ae68056343505fe07b9ae91ce674aea> .
_:Nfe2724406d1a4166be12001d3bb6663f <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/e27b3f6316394e876016f595684002405ae68056343505fe07b9ae91ce674aea> .
_:Nfe2724406d1a4166be12001d3bb6663f <http://schema.org/answer> "0" <http://groq.org/e27b3f6316394e876016f595684002405ae68056343505fe07b9ae91ce674aea> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU020" <http://groq.org/e27b3f6316394e876016f595684002405ae68056343505fe07b9ae91ce674aea> .
_:N97092fc72d2d4b0295a06d4b85d6b2b8 <http://schema.org/explain> "The lecture covers key concepts of SE-Formal Methods, applies principles in practical scenarios, and analyzes the importance of this topic in computing, aligning with the KU's learning outcomes." <http://groq.org/b431690aee1dbf727af0a9fe6e1674acc7a35f7b81c91ca7b195cc8c52fb02c0> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Unité Enseignement de Découverte Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU020</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/b431690aee1dbf727af0a9fe6e1674acc7a35f7b81c91ca7b195cc8c52fb02c0> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/has_schema_type> _:N97092fc72d2d4b0295a06d4b85d6b2b8 <http://groq.org/b431690aee1dbf727af0a9fe6e1674acc7a35f7b81c91ca7b195cc8c52fb02c0> .
_:N97092fc72d2d4b0295a06d4b85d6b2b8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/b431690aee1dbf727af0a9fe6e1674acc7a35f7b81c91ca7b195cc8c52fb02c0> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/b431690aee1dbf727af0a9fe6e1674acc7a35f7b81c91ca7b195cc8c52fb02c0> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU020" <http://groq.org/b431690aee1dbf727af0a9fe6e1674acc7a35f7b81c91ca7b195cc8c52fb02c0> .
_:N97092fc72d2d4b0295a06d4b85d6b2b8 <http://schema.org/answer> "1" <http://groq.org/b431690aee1dbf727af0a9fe6e1674acc7a35f7b81c91ca7b195cc8c52fb02c0> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/is_aligned_with> _:N4e928a995e004b38a26cfd95d84388a3 <http://faiss.org/0b81682029f0ab217f52dd24fbf6be8496a9cefe9a50a501e9e23deea98e840d> .
_:N0e851eb3decb492d99f8ff333d09c8a6 <http://example.org/has_score> "0.6364523"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/0b81682029f0ab217f52dd24fbf6be8496a9cefe9a50a501e9e23deea98e840d> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/is_aligned_with> _:Ne973f15d8fa24021b52b648e5d7dc3e3 <http://faiss.org/0b81682029f0ab217f52dd24fbf6be8496a9cefe9a50a501e9e23deea98e840d> .
_:N0e851eb3decb492d99f8ff333d09c8a6 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-NLP_Natural_Language_Processing.txt> <http://faiss.org/0b81682029f0ab217f52dd24fbf6be8496a9cefe9a50a501e9e23deea98e840d> .
_:Ne973f15d8fa24021b52b648e5d7dc3e3 <http://example.org/has_score> "0.6486398"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/0b81682029f0ab217f52dd24fbf6be8496a9cefe9a50a501e9e23deea98e840d> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/is_aligned_with> _:N0e851eb3decb492d99f8ff333d09c8a6 <http://faiss.org/0b81682029f0ab217f52dd24fbf6be8496a9cefe9a50a501e9e23deea98e840d> .
_:N4e928a995e004b38a26cfd95d84388a3 <http://example.org/has_score> "0.64398056"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/0b81682029f0ab217f52dd24fbf6be8496a9cefe9a50a501e9e23deea98e840d> .
_:N4e928a995e004b38a26cfd95d84388a3 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/0b81682029f0ab217f52dd24fbf6be8496a9cefe9a50a501e9e23deea98e840d> .
_:Ne973f15d8fa24021b52b648e5d7dc3e3 <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://faiss.org/0b81682029f0ab217f52dd24fbf6be8496a9cefe9a50a501e9e23deea98e840d> .
_:N4e928a995e004b38a26cfd95d84388a3 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://faiss.org/0b81682029f0ab217f52dd24fbf6be8496a9cefe9a50a501e9e23deea98e840d> .
_:N0e851eb3decb492d99f8ff333d09c8a6 <http://example.org/has_chunk> ". Examples of use: POS tagging and morphology\n8. Information retrieval (See also: DM-Unstructured)\na. Vector space model\ni. TF & IDF\nb. Precision and recall\n9. Information extraction\n10. Language translation\n11. Text classification, categorization\na. Bag of words model\n12. Deep learning for NLP (See also: AI-ML)\na. RNNs\nb. Transformers\nc. Multi-modal embeddings (e.g., images + text)\nd. Generative language models\nIllustrative Learning Outcomes:\n1" <http://faiss.org/0b81682029f0ab217f52dd24fbf6be8496a9cefe9a50a501e9e23deea98e840d> .
_:Ne973f15d8fa24021b52b648e5d7dc3e3 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://faiss.org/0b81682029f0ab217f52dd24fbf6be8496a9cefe9a50a501e9e23deea98e840d> .
<http://example.org/faiss> <http://example.org/input> "Label: 2nd year English S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3AU010" <http://faiss.org/0b81682029f0ab217f52dd24fbf6be8496a9cefe9a50a501e9e23deea98e840d> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3AU010</page1>\n        <page2>Pages:79-80 HOURS CS Core = 0 KA Core = 0 AI-NLP: Natural Language Processing\nNon-core: 1\\. Deterministic and stochastic grammars 2\\. Parsing algorithms a.\nCFGs and chart parsers (e.g., CYK) b. Probabilistic CFGs and weighted CYK 3\\.\nRepresenting meaning/Semantics a. Logic-based knowledge representations b.\nSemantic roles c. Temporal representations d. Beliefs, desires, and intentions\n4\\. Corpus-based methods 5\\. N-grams and HMMs 6\\. Smoothing and backoff 7\\.\nExamples of use: POS tagging and morphology 8\\. Information retrieval (See\nalso: DM-Unstructured) a. Vector space model i. TF & IDF b. Precision and\nrecall 9\\. Information extraction 10\\. Language translation 11\\. Text\nclassification, categorization a. Bag of words model 12\\. Deep learning for\nNLP (See also: AI-ML) a. RNNs b. Transformers c. Multi-modal embeddings (e.g.,\nimages + text) d. Generative language models Illustrative Learning Outcomes:\n1\\. Define and contrast deterministic and stochastic grammars, providing\nexamples to show the adequacy of each. 2\\. Simulate, apply, or implement\nclassic and stochastic algorithms for parsing natural language. 3\\. Identify\nthe challenges of representing meaning. 4\\. List the advantages of using\nstandard corpora. Identify examples of current corpora for a variety of NLP\ntasks. 5\\. Identify techniques for information retrieval, language\ntranslation, and text classification. 6\\. Implement a TF/IDF transform, use it\nto extract features from a corpus, and train an off-the-shelf machine learning\nalgorithm using those features to do text classification.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/ed6e701b0b0c94841f720989f8026b097a317f25ba07c90a570f65f4e1e5f2d8> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/has_schema_type> _:Ne894adfec168480bb0ca7ddf5d9a3cf1 <http://groq.org/ed6e701b0b0c94841f720989f8026b097a317f25ba07c90a570f65f4e1e5f2d8> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3AU010" <http://groq.org/ed6e701b0b0c94841f720989f8026b097a317f25ba07c90a570f65f4e1e5f2d8> .
_:Ne894adfec168480bb0ca7ddf5d9a3cf1 <http://schema.org/explain> "The lecture covers a significant portion of the KU, including topics such as deterministic and stochastic grammars, parsing algorithms, and natural language processing." <http://groq.org/ed6e701b0b0c94841f720989f8026b097a317f25ba07c90a570f65f4e1e5f2d8> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/ed6e701b0b0c94841f720989f8026b097a317f25ba07c90a570f65f4e1e5f2d8> .
_:Ne894adfec168480bb0ca7ddf5d9a3cf1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/ed6e701b0b0c94841f720989f8026b097a317f25ba07c90a570f65f4e1e5f2d8> .
_:Ne894adfec168480bb0ca7ddf5d9a3cf1 <http://schema.org/answer> "1" <http://groq.org/ed6e701b0b0c94841f720989f8026b097a317f25ba07c90a570f65f4e1e5f2d8> .
_:N7335d40f15b64e63a67fbe0371cdac40 <http://example.org/has_chunk> ". Parametricity\nIllustrative learning outcomes:\nNon-core:\n1. Construct formal semantics for a small language.\n2. Write a lambda-calculus program and show its evaluation to a normal form.\n3. Discuss the different approaches of operational, denotational, and axiomatic semantics.\n4. Use induction to prove properties of all programs in a language.\n5. Use induction to prove properties of all programs in a language that is well-typed according to a\nformally defined type system.\n6" <http://faiss.org/bbb4875943482923898fb7ca36d646b4f7ab5c541ae0470b5328f903412f1965> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/is_aligned_with> _:N7335d40f15b64e63a67fbe0371cdac40 <http://faiss.org/bbb4875943482923898fb7ca36d646b4f7ab5c541ae0470b5328f903412f1965> .
_:N6109a7b8ad734c92980eee21908e72bb <http://example.org/has_chunk> ". Chomsky hierarchy (See also: AL-Models)\nb. Left-most/right-most derivation and ambiguity\nc. Grammar transformation\n7. Parser error recovery mechanisms\n8. Generating scanners and parsers from declarative specifications\nIllustrative learning outcomes:\nNon-core:\n1. Use formal grammars to specify the syntax of languages.\n2. Illustrate the role of lookahead tables in parsing.\n3. Use declarative tools to generate parsers and scanners.\n4" <http://faiss.org/bbb4875943482923898fb7ca36d646b4f7ab5c541ae0470b5328f903412f1965> .
_:N6109a7b8ad734c92980eee21908e72bb <http://example.org/has_score> "0.7373393"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/bbb4875943482923898fb7ca36d646b4f7ab5c541ae0470b5328f903412f1965> .
_:N75d103bccd5041b9b27de847ee3f828f <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-NLP_Natural_Language_Processing.txt> <http://faiss.org/bbb4875943482923898fb7ca36d646b4f7ab5c541ae0470b5328f903412f1965> .
_:N6109a7b8ad734c92980eee21908e72bb <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Syntax_Syntax_Analysis.txt> <http://faiss.org/bbb4875943482923898fb7ca36d646b4f7ab5c541ae0470b5328f903412f1965> .
_:N75d103bccd5041b9b27de847ee3f828f <http://example.org/has_chunk> ". Examples of use: POS tagging and morphology\n8. Information retrieval (See also: DM-Unstructured)\na. Vector space model\ni. TF & IDF\nb. Precision and recall\n9. Information extraction\n10. Language translation\n11. Text classification, categorization\na. Bag of words model\n12. Deep learning for NLP (See also: AI-ML)\na. RNNs\nb. Transformers\nc. Multi-modal embeddings (e.g., images + text)\nd. Generative language models\nIllustrative Learning Outcomes:\n1" <http://faiss.org/bbb4875943482923898fb7ca36d646b4f7ab5c541ae0470b5328f903412f1965> .
_:N7335d40f15b64e63a67fbe0371cdac40 <http://example.org/has_score> "0.6879257"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/bbb4875943482923898fb7ca36d646b4f7ab5c541ae0470b5328f903412f1965> .
<http://example.org/faiss> <http://example.org/input> "Label: Langages et automates Objectif: (résultats d'apprentissage)\n5. Course content: • Langages algébriques\n- Grammaire algébrique\n- Arbre de dérivation\n- Automates à pile\n• Hiérarchie de Chomsky\n- Classification des grammaires;\n- Algorithmes de reconnaissance pour les grammaires de type 1 et 2\n• Analyse lexicale et syntaxique\n- TP de flex et bison Course name: http://example.org/course/UE_XLG4IU020" <http://faiss.org/bbb4875943482923898fb7ca36d646b4f7ab5c541ae0470b5328f903412f1965> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/is_aligned_with> _:N6109a7b8ad734c92980eee21908e72bb <http://faiss.org/bbb4875943482923898fb7ca36d646b4f7ab5c541ae0470b5328f903412f1965> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/is_aligned_with> _:N75d103bccd5041b9b27de847ee3f828f <http://faiss.org/bbb4875943482923898fb7ca36d646b4f7ab5c541ae0470b5328f903412f1965> .
_:N7335d40f15b64e63a67fbe0371cdac40 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Formalism_Formal_Semantics.txt> <http://faiss.org/bbb4875943482923898fb7ca36d646b4f7ab5c541ae0470b5328f903412f1965> .
_:N75d103bccd5041b9b27de847ee3f828f <http://example.org/has_score> "0.69355947"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/bbb4875943482923898fb7ca36d646b4f7ab5c541ae0470b5328f903412f1965> .
_:N748c275fc280433fb79de2663e90f8d4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/1dd9de9ced92a86d19299d5b28c91594580613215562da5a665d71c55edde272> .
_:N748c275fc280433fb79de2663e90f8d4 <http://schema.org/answer> "0" <http://groq.org/1dd9de9ced92a86d19299d5b28c91594580613215562da5a665d71c55edde272> .
_:N748c275fc280433fb79de2663e90f8d4 <http://schema.org/explain> "The lecture focuses on digital creation, formats, and paradigms, whereas the KU covers formal semantics, syntax, and type systems, with no apparent overlap." <http://groq.org/1dd9de9ced92a86d19299d5b28c91594580613215562da5a665d71c55edde272> .
<http://example.org/course/UE_XLG4IU060> <http://example.org/has_schema_type> _:N748c275fc280433fb79de2663e90f8d4 <http://groq.org/1dd9de9ced92a86d19299d5b28c91594580613215562da5a665d71c55edde272> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/1dd9de9ced92a86d19299d5b28c91594580613215562da5a665d71c55edde272> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Création numérique Objectif: (résultats d'apprentissage)\n- lister les principaux formats compris par les outils de création (Connaissance) ;\n- estimer les conséquences de choix de format sur la création (Analyse) ;\n- décrire les principaux paradigmes de création numérique (connaissance) ;\n- programmer une application de création numérique répondant à un cahier des\ncharges (Application) ;\n- concevoir un algorithme engendrant une création dans un format imposé (Application) ; Course content: - principaux supports de création numérique et limitations associées (bitmap,vectoriel, 2D, 3D,\ndécoupes, impressions, machine outils numériques,etc.);\n- principaux formats compris par les outils de création et les conséquences sur la création;\n- paradigmes de création numérique (impératif, événementiel, émergeant, etc.); Course name: http://example.org/course/UE_XLG4IU060</page1>\n        <page2>Pages: 145-146 HOURS CS Core = 0 KA Core = 0 FPL-Formalism: Formal Semantics\nNon-core: 1\\. Syntax vs semantics 2\\. Approaches to semantics: axiomatic,\noperational, denotational, type-based 3\\. Axiomatic semantics of abstract\nconstructs such as assignment, selection, iteration using precondition, post-\nconditions, and loop invariant 4\\. Operational semantics analysis of abstract\nconstructs and sequence of such as assignment, expression evaluation,\nselection, iteration using environment and store a. Symbolic execution b.\nConstraint checkers 5\\. Denotational semantics a. Lambda Calculus. (See also:\nAL-Models, FPL-Functional) 6\\. Proofs by induction over language semantics 7\\.\nFormal definitions and proofs for type systems (See also: FPL-Types) a.\nPropositions as types (implication as a function, conjunction as a product,\ndisjunction as a sum) b. Dependent types (universal quantification as\ndependent function, existential quantification as dependent product) c.\nParametricity Illustrative learning outcomes: Non-core: 1\\. Construct formal\nsemantics for a small language. 2\\. Write a lambda-calculus program and show\nits evaluation to a normal form. 3\\. Discuss the different approaches of\noperational, denotational, and axiomatic semantics. 4\\. Use induction to prove\nproperties of all programs in a language. 5\\. Use induction to prove\nproperties of all programs in a language that is well-typed according to a\nformally defined type system. 6\\. Use parametricity to establish the behavior\nof code given only its type.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/1dd9de9ced92a86d19299d5b28c91594580613215562da5a665d71c55edde272> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU060" <http://groq.org/1dd9de9ced92a86d19299d5b28c91594580613215562da5a665d71c55edde272> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4AU010" <http://groq.org/0e396445c1a68ae87d277fc420aae3c1a7b30cafbf2f1a381ffa4e5b7d3b7bd5> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/0e396445c1a68ae87d277fc420aae3c1a7b30cafbf2f1a381ffa4e5b7d3b7bd5> .
_:N0e6004e7748d4334843833e9bcdaa7bd <http://schema.org/explain> "The lecture focuses on teaching methods, while the KU covers technical topics in computer science." <http://groq.org/0e396445c1a68ae87d277fc420aae3c1a7b30cafbf2f1a381ffa4e5b7d3b7bd5> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S4 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4AU010</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/0e396445c1a68ae87d277fc420aae3c1a7b30cafbf2f1a381ffa4e5b7d3b7bd5> .
_:N0e6004e7748d4334843833e9bcdaa7bd <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/0e396445c1a68ae87d277fc420aae3c1a7b30cafbf2f1a381ffa4e5b7d3b7bd5> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/has_schema_type> _:N0e6004e7748d4334843833e9bcdaa7bd <http://groq.org/0e396445c1a68ae87d277fc420aae3c1a7b30cafbf2f1a381ffa4e5b7d3b7bd5> .
_:N0e6004e7748d4334843833e9bcdaa7bd <http://schema.org/answer> "0" <http://groq.org/0e396445c1a68ae87d277fc420aae3c1a7b30cafbf2f1a381ffa4e5b7d3b7bd5> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/9203b3df1a8503e8ed928df0b51199a6c8bea6a71a426c11abb8c452d980a7dc> .
<http://example.org/course/UE_XLG4IU070> <http://example.org/has_schema_type> _:N241ea45c134c47389e1653472848c3a9 <http://groq.org/9203b3df1a8503e8ed928df0b51199a6c8bea6a71a426c11abb8c452d980a7dc> .
_:N241ea45c134c47389e1653472848c3a9 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/9203b3df1a8503e8ed928df0b51199a6c8bea6a71a426c11abb8c452d980a7dc> .
_:N241ea45c134c47389e1653472848c3a9 <http://schema.org/explain> "The lecture focuses on management simulation and marketing decisions, while the KU covers technical aspects of game development." <http://groq.org/9203b3df1a8503e8ed928df0b51199a6c8bea6a71a426c11abb8c452d980a7dc> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Simulation de gestion Objectif: (résultats d'apprentissage) conséquences.\n• Pouvoir s’exprimer spontanément, très couramment, de façon précise et rendre distinctes de\nfines nuances de sens en rapport avec les sujets abordés.\n• Être capable de raisonner par soi-même. Course content: Simulation de la gestion ou jeu d’entreprise sur plusieurs exercices d’une entreprise dans un milieu\nconcurrentiel avec un focus sur les décisions de marketing. Course name: http://example.org/course/UE_XLG4IU070</page1>\n        <page2>Pages : 244-245-246 CS Core : None, KA Core : 4 (+16) (Additional hours here\nare hours shared with other Areas) KA Core: 1\\. Historical and contemporary\nplatforms for games (See also: AR-Logic) a. Evolution of Game Platforms (e.g.,\nBrown Box to Metaverse and beyond; Improvement in Computing Architectures (CPU\nand GPU); Platform Convergence and Mobility) b. Typical Game Platforms (e.g.,\nPersonal Computer; Home Console; Handheld Console; Arcade Machine; Interactive\nTelevision; Mobile Phone; Tablet; Integrated Head-Mounted Display; Immersive\nInstallations and Simulators; Internet of Things enabled Devices; CAVE\nSystems; Web Browsers; Cloud-based Streaming Systems) c. Characteristics and\nConstraints of Different Game Platforms (e.g., Features (local storage,\ninternetworking, peripherals); Run-time performance (GPU/CPU frequency, number\nof cores); Chipsets (physics processing units, vector co-processors);\nExpansion Bandwidth (PCIe); Network throughput (Ethernet); Memory types and\ncapacities (DDR/GDDR); Maximum stack depth; Power consumption; Thermal design;\nEndian) d. Typical Sensors, Controllers, and Actuators (e.g., distinctive\ncontrol system designs -peripherals (mouse, keypad, joystick), game\ncontrollers, wearables, interactive surfaces; electronics and bespoke\nhardware; computer vision, inside-out tracking, and outside-in tracking; IoT-\nenabled electronics and I/O) (See also: GIT-Interaction) e. eSports Ecosystems\n(e.g., evolution of gameplay across platforms; games and eSports; game events\nsuch as LAN/arcade tournaments and international events such as the Olympic\neSports Series; streamed media and spectatorship; multimedia technologies and\nbroadcast management; professional play; data and machine learning for\ncoaching and training) 2\\. Real-time Simulation and Rendering Systems a. CPU\nand GPU architectures (e.g., Flynn's taxonomy; parallelization; instruction\nsets; standard components - graphics compute array, graphics memory\ncontroller, video graphics array basic input/output system; bus interface;\npower management unit; video processing unit; display interface) (See also:\nAR-Heterogeneity) b. Pipelines for physical simulations and graphical\nrendering: (e.g., tile-based, immediate-mode). (See also: GIT-Rendering) c.\nCommon Contexts for Algorithms, Data Structures, and Mathematical Functions\n(e.g., game loops; spatial partitioning, viewport culling, and level of\ndetail; collision detection and resolution; physical simulation; behavior for\nintelligent agents; procedural content generation) (See also: MSF-Discrete,\nAL-Foundational) d. Media representations (e.g., I/O, and computation\ntechniques for virtual worlds: audio; music; sprites; models and textures;\ntext; dialogue; multimedia (e.g., olfaction, tactile)) (See also: GIT-\nFundamentals) 3\\. Game Development Tools and Techniques a. Programming\nLanguages (e.g., C++; C#; Lua; Python; JavaScript) b. Shader Languages (e.g.,\nHLSL, GLSL; Shader Graph) c. Graphics Libraries and APIs (e.g., DirectX; SDL;\nOpenGL; Metal; Vulkan; WebGL). (See also: GIT-Rendering, HCI-Design) d. Common\nDevelopment Tools and Environments (e.g., IDEs; Debuggers; Profilers; Version\nControl Systems including those handling binary assets; Development Kits and\nProduction/Consumer Kits; Emulators) (See also: SDF-Practices, SE-Tools) 4\\.\nGame Engines a. Open Game Engines (e.g., Unreal; Unity; Godot; CryEngine;\nPhyre; Source 2; Pygame and Ren'Py; Phaser; Twine; Spring RTS) b. Techniques\n(e.g., Ideation, Prototyping, Iterative Design and Implementation, Compiling\nExecutable Builds, Development Operations and Quality Assurance - Play Testing\nand Technical Testing, Profiling; Optimization, Porting; Internationalization\nand Localization, Networking) (See also: AR-Performance-Energy, SE-\nRequirements) 5\\. Game Design a. Vocabulary (e.g., game definitions;\nmechanics-dynamics-aesthetics model; industry terminology; experience design;\nmodels of experience and emotion) b. Design Thinking and User-Centered\nExperience Design (e.g., methods of designing games; iteration, incrementing,\nand the double-diamond; phases of pre- and post-production; quality assurance,\nincluding alpha and beta testing; stakeholder and customer involvement;\ncommunity management) (See also: SE-Design) c. Genres (e.g., adventure;\nwalking simulator; first-person shooter; real-time strategy; multiplayer\nonline battle arena (MOBA); role-playing game (rpg)) d. Audiences and Player\nTaxonomies (e.g., people who play games; diversity and broadening\nparticipation; pleasures, player types, and preferences; Bartle, yee) (See\nalso: HCI-User) e. Proliferation of digital game technologies to domains\nbeyond entertainment (e.g., Education and Training; Serious Games; Virtual\nProduction; eSports; Gamification; Immersive Experience Design; Creative\nIndustry Practice; Artistic Practice; Procedural Rhetoric) (See also: AI-SEP)\nIllustrative Learning Outcomes: KA Core: 1\\. Recall the characteristics of\ncommon general-purpose graphics processing architectures. 2\\. Identify the key\nstages of the immediate-mode rendering pipeline. 3\\. Describe the key\nconstraints a specific game platform will likely impose on developers. 4\\.\nExplain how eSports are streamed to large audiences over the internet. 5\\.\nTranslate complex mathematical functions into performant source code. 6\\. Use\nan industry-standard graphics API to render a 3D model in a virtual scene. 7\\.\nModify a shader to change a visual effect according to stated requirements.\n8\\. Implement a game for a particular platform according to the specification.\n9\\. Optimize a function for processing collision detection in a simulated\nenvironment. 10\\. Assess a game's run-time and memory performance using an\nindustry-standard tool and development environment. 11\\. Compare the\ninterfaces of different game platforms, highlighting their respective\nimplications for human-computer interaction. 12\\. Recommend an appropriate set\nof development tools and techniques for implementing a game of a particular\ngenre for a given platform. 13\\. Discuss the key challenges in making a\ndigital game that is cross-platform compatible. 14\\. Express how game\ndevelopers can enhance the accessibility of a game interface. 15\\. Create\nnovel forms of gameplay using frontier game platforms.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/9203b3df1a8503e8ed928df0b51199a6c8bea6a71a426c11abb8c452d980a7dc> .
_:N241ea45c134c47389e1653472848c3a9 <http://schema.org/answer> "0" <http://groq.org/9203b3df1a8503e8ed928df0b51199a6c8bea6a71a426c11abb8c452d980a7dc> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU070" <http://groq.org/9203b3df1a8503e8ed928df0b51199a6c8bea6a71a426c11abb8c452d980a7dc> .
_:Nf0c43183292c4e0db48e8f04bd63fbf7 <http://schema.org/explain> "The lecture covers topics such as formal semantics, axiomatic, operational, and denotational semantics, which are all mentioned in the KU." <http://groq.org/9eef467cb121fd6ca8204c9a07156a5501056b3c0d01c6a892d8746866f6de76> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU020" <http://groq.org/9eef467cb121fd6ca8204c9a07156a5501056b3c0d01c6a892d8746866f6de76> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Langages et automates Objectif: (résultats d'apprentissage)\n5. Course content: • Langages algébriques\n- Grammaire algébrique\n- Arbre de dérivation\n- Automates à pile\n• Hiérarchie de Chomsky\n- Classification des grammaires;\n- Algorithmes de reconnaissance pour les grammaires de type 1 et 2\n• Analyse lexicale et syntaxique\n- TP de flex et bison Course name: http://example.org/course/UE_XLG4IU020</page1>\n        <page2>Pages: 145-146 HOURS CS Core = 0 KA Core = 0 FPL-Formalism: Formal Semantics\nNon-core: 1\\. Syntax vs semantics 2\\. Approaches to semantics: axiomatic,\noperational, denotational, type-based 3\\. Axiomatic semantics of abstract\nconstructs such as assignment, selection, iteration using precondition, post-\nconditions, and loop invariant 4\\. Operational semantics analysis of abstract\nconstructs and sequence of such as assignment, expression evaluation,\nselection, iteration using environment and store a. Symbolic execution b.\nConstraint checkers 5\\. Denotational semantics a. Lambda Calculus. (See also:\nAL-Models, FPL-Functional) 6\\. Proofs by induction over language semantics 7\\.\nFormal definitions and proofs for type systems (See also: FPL-Types) a.\nPropositions as types (implication as a function, conjunction as a product,\ndisjunction as a sum) b. Dependent types (universal quantification as\ndependent function, existential quantification as dependent product) c.\nParametricity Illustrative learning outcomes: Non-core: 1\\. Construct formal\nsemantics for a small language. 2\\. Write a lambda-calculus program and show\nits evaluation to a normal form. 3\\. Discuss the different approaches of\noperational, denotational, and axiomatic semantics. 4\\. Use induction to prove\nproperties of all programs in a language. 5\\. Use induction to prove\nproperties of all programs in a language that is well-typed according to a\nformally defined type system. 6\\. Use parametricity to establish the behavior\nof code given only its type.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/9eef467cb121fd6ca8204c9a07156a5501056b3c0d01c6a892d8746866f6de76> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/9eef467cb121fd6ca8204c9a07156a5501056b3c0d01c6a892d8746866f6de76> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/has_schema_type> _:Nf0c43183292c4e0db48e8f04bd63fbf7 <http://groq.org/9eef467cb121fd6ca8204c9a07156a5501056b3c0d01c6a892d8746866f6de76> .
_:Nf0c43183292c4e0db48e8f04bd63fbf7 <http://schema.org/answer> "1" <http://groq.org/9eef467cb121fd6ca8204c9a07156a5501056b3c0d01c6a892d8746866f6de76> .
_:Nf0c43183292c4e0db48e8f04bd63fbf7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/9eef467cb121fd6ca8204c9a07156a5501056b3c0d01c6a892d8746866f6de76> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/has_schema_type> _:N85a36015deac47f0ae34aa0c8ffc2b88 <http://groq.org/de869c34ec02ace0b4cba78be49d4571bd73b5ba289763b960106fb30302d6a6> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/de869c34ec02ace0b4cba78be49d4571bd73b5ba289763b960106fb30302d6a6> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Logique pour l'informatique Objectif: (résultats d'apprentissage)\nconsistance et complétude d'un système de preuves.\n4. Représenter une preuve de la déduction naturelle sous forme d'arbre d'inférence.\n5. Utiliser les algorithmes d'unification et de résolution pour le raisonnement automatique sur les\nformules logiques.\n1) Raisonnement algébrique booléen\n• Dualités des connecteurs logiques\n• Formes normales conjonctive et disjonctive\n2) Systèmes de preuves\n• Système d'inférence associé à une définition inductive\n• Preuve d'appartenance à un ensemble inductif par un arbre de preuves\n• Règles d'inférences de la déduction naturelle pour la logique propositionnelle\n• Distinguer logique classique et logique intuitionniste\n3) Donner du sens aux langages logique Course content: • Interprétation, modèle, satisfiabilité, validité\n• Correspondance avec le système de preuve: correction et complétude\n4) Calcul des prédicats\n• Manipulation des quantificateurs\n• Skolémisation, forme clausale\n• Théorie logique\n5) Raisonner automatiquement sur les formules logique\n• Algorithme d'unification\n• Algorithme de résolution Course name: http://example.org/course/UE_XLG3IU020</page1>\n        <page2>Pages: 145-146 HOURS CS Core = 0 KA Core = 0 FPL-Formalism: Formal Semantics\nNon-core: 1\\. Syntax vs semantics 2\\. Approaches to semantics: axiomatic,\noperational, denotational, type-based 3\\. Axiomatic semantics of abstract\nconstructs such as assignment, selection, iteration using precondition, post-\nconditions, and loop invariant 4\\. Operational semantics analysis of abstract\nconstructs and sequence of such as assignment, expression evaluation,\nselection, iteration using environment and store a. Symbolic execution b.\nConstraint checkers 5\\. Denotational semantics a. Lambda Calculus. (See also:\nAL-Models, FPL-Functional) 6\\. Proofs by induction over language semantics 7\\.\nFormal definitions and proofs for type systems (See also: FPL-Types) a.\nPropositions as types (implication as a function, conjunction as a product,\ndisjunction as a sum) b. Dependent types (universal quantification as\ndependent function, existential quantification as dependent product) c.\nParametricity Illustrative learning outcomes: Non-core: 1\\. Construct formal\nsemantics for a small language. 2\\. Write a lambda-calculus program and show\nits evaluation to a normal form. 3\\. Discuss the different approaches of\noperational, denotational, and axiomatic semantics. 4\\. Use induction to prove\nproperties of all programs in a language. 5\\. Use induction to prove\nproperties of all programs in a language that is well-typed according to a\nformally defined type system. 6\\. Use parametricity to establish the behavior\nof code given only its type.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/de869c34ec02ace0b4cba78be49d4571bd73b5ba289763b960106fb30302d6a6> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU020" <http://groq.org/de869c34ec02ace0b4cba78be49d4571bd73b5ba289763b960106fb30302d6a6> .
_:N85a36015deac47f0ae34aa0c8ffc2b88 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/de869c34ec02ace0b4cba78be49d4571bd73b5ba289763b960106fb30302d6a6> .
_:N85a36015deac47f0ae34aa0c8ffc2b88 <http://schema.org/answer> "0" <http://groq.org/de869c34ec02ace0b4cba78be49d4571bd73b5ba289763b960106fb30302d6a6> .
_:N85a36015deac47f0ae34aa0c8ffc2b88 <http://schema.org/explain> "The lecture focuses on logic and proof systems, while the KU covers formal semantics approaches." <http://groq.org/de869c34ec02ace0b4cba78be49d4571bd73b5ba289763b960106fb30302d6a6> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Développement web client Objectif: (résultats d'apprentissage) Course content: approfondir les connaissances dans le langage TypeScript, déjà vu en L1\nprésenter un framework de développement web écrit en TypeScript, comme Angular ou Vue. Course name: http://example.org/course/UE_XLG4IU050</page1>\n        <page2>Pages : 168-169 CS Core : 20, KA Core : None CS Core: 1\\. Basic concepts such\nas variables, primitive data types, expressions, and their evaluation 2\\. How\nimperative programs work: state and state transitions on execution of\nstatements, flow of control 3\\. Basic constructs such as assignment\nstatements, conditional and iterative statements, basic I/O 4\\. Key modularity\nconstructs such as functions (and methods and classes, if supported in the\nlanguage) and related concepts like parameter passing, scope, abstraction,\ndata encapsulation (See also: FPL-OOP) 5\\. Input and output using files and\nAPIs 6\\. Structured data types available in the chosen programming language\nlike sequences (e.g., arrays, lists), associative containers (e.g.,\ndictionaries, maps), others (e.g., sets, tuples) and when and how to use them\n(See also: AL-Foundational) 7\\. Libraries and frameworks provided by the\nlanguage (when/where applicable) 8\\. Recursion 9\\. Dealing with runtime errors\nin programs (e.g., exception handling). 10\\. Basic concepts of programming\nerrors, testing, and debugging (See also: SE-Construction, SEC-Coding) 11\\.\nDocumenting/commenting code at the program and module level.(See also: SE-\nConstruction) 12\\. Develop a security mindset. (See also: SEC-Foundations)\nIllustrative Learning Outcomes: CS Core: In these learning outcomes, the term\n\"develop\" means \"design, write, test, and debug.\" 1\\. Develop programs that\nuse the fundamental programming constructs: assignment and expressions, basic\nI/O, conditional and iterative statements. 2\\. Develop programs using\nfunctions with parameter passing. 3\\. Develop programs that effectively use\nthe different structured data types provided in the language like\narrays/lists, dictionaries, and sets. 4\\. Develop programs that use file I/O\nto provide data persistence across multiple executions. 5\\. Develop programs\nthat use language-provided libraries and frameworks (where applicable). 6\\.\nDevelop programs that use APIs to access or update data (e.g., from the web).\n7\\. Develop programs that create simple classes and instantiate objects of\nthose classes (if supported by the language). 8\\. Explain the concept of\nrecursion and identify when and how to use it effectively. 9\\. Develop\nrecursive functions. 10\\. Develop programs that can handle runtime errors.\n11\\. Read a given program and explain what it does. 12\\. Write comments for a\nprogram or a module specifying what it does. 13\\. Trace the flow of control\nduring the execution of a program. 14\\. Use appropriate terminology to\nidentify elements of a program (e.g., identifier, operator, operand).</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/b8b19819a64fb961626f970e54abb6800ad35fe03c6aae88311e88bf3e9f1d89> .
_:N768aad796fe945c5b56533e8c721cbed <http://schema.org/explain> "Lecture focuses on TypeScript and frameworks but does not comprehensively address all core programming concepts (e.g., recursion, detailed error handling, file I/O) listed in the KU." <http://groq.org/b8b19819a64fb961626f970e54abb6800ad35fe03c6aae88311e88bf3e9f1d89> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/b8b19819a64fb961626f970e54abb6800ad35fe03c6aae88311e88bf3e9f1d89> .
<http://example.org/course/UE_XLG4IU050> <http://example.org/has_schema_type> _:N768aad796fe945c5b56533e8c721cbed <http://groq.org/b8b19819a64fb961626f970e54abb6800ad35fe03c6aae88311e88bf3e9f1d89> .
_:N768aad796fe945c5b56533e8c721cbed <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/b8b19819a64fb961626f970e54abb6800ad35fe03c6aae88311e88bf3e9f1d89> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU050" <http://groq.org/b8b19819a64fb961626f970e54abb6800ad35fe03c6aae88311e88bf3e9f1d89> .
_:N768aad796fe945c5b56533e8c721cbed <http://schema.org/answer> "0" <http://groq.org/b8b19819a64fb961626f970e54abb6800ad35fe03c6aae88311e88bf3e9f1d89> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/806cd0795a2f20fa7a4ecd9649077557272919c205aafc82dbc632d421926bab> .
_:Neb984683eef14f58b2a250b0354678a4 <http://schema.org/explain> "Lecture focuses on data structures, while KU requires broader math/proof coverage" <http://groq.org/806cd0795a2f20fa7a4ecd9649077557272919c205aafc82dbc632d421926bab> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU010" <http://groq.org/806cd0795a2f20fa7a4ecd9649077557272919c205aafc82dbc632d421926bab> .
_:Neb984683eef14f58b2a250b0354678a4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/806cd0795a2f20fa7a4ecd9649077557272919c205aafc82dbc632d421926bab> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 2 Objectif: (résultats d'apprentissage)\ndonnées (itératifs et récursifs) Course content: Structures de données non-linéaires associatives (table associative, ensemble, classe-union) Course name: http://example.org/course/UE_XLG4IU010</page1>\n        <page2>Pages: 187-188 HOURS CS Core = 29 KA Core = 11 MSF-Discrete: Discrete\nMathematics CS Core: 1\\. Sets, relations, functions, cardinality 2\\. Recursive\nmathematical definitions 3\\. Proof techniques (induction, proof by\ncontradiction) 4\\. Permutations, combinations, counting, pigeonhole principle\n5\\. Modular arithmetic 6\\. Logic: truth tables, connectives (operators),\ninference rules, formulas, normal forms, simple predicate logic 7\\. Graphs:\nbasic definitions 8\\. Order notation Illustrative Learning Outcomes: CS Core:\n1\\. Sets, Relations, and Functions, Cardinality a. Explain with examples the\nbasic terminology of functions, relations, and sets. b. Perform the operations\nassociated with sets, functions, and relations. c. Relate practical examples\nto the appropriate set, function, or relation model, and interpret the\nassociated operations and terminology in context. d. Calculate the size of a\nfinite set, including making use of the sum and product rules and inclusion-\nexclusion principle. e. Explain the difference between finite, countable, and\nuncountable sets. 2\\. Recursive mathematical definitions a. Apply recursive\ndefinitions of sequences or structures (e.g., Fibonacci numbers, linked lists,\nparse trees, fractals). b. Formulate inductive proofs of statements about\nrecursive definitions. c. Solve a variety of basic recurrence relations. d.\nAnalyze a problem to determine underlying recurrence relations. e. Given a\nrecursive/iterative code snippet, describe its underlying recurrence relation,\nhypothesize a closed form for the recurrence relation, and prove the\nhypothesis correct (usually, using induction). 3\\. Proof Techniques a.\nIdentify the proof technique used in a given proof. b. Outline the basic\nstructure of each proof technique (direct proof, proof by contradiction, and\ninduction) described in this unit. c. Apply each of the proof techniques\n(direct proof, proof by contradiction, and induction) correctly in the\nconstruction of a sound argument. d. Determine which type of proof is best for\na given problem. e. Explain the parallels between ideas of mathematical and/or\nstructural induction to recursion and recursively defined structures. f.\nExplain the relationship between weak and strong induction and give examples\nof the appropriate use of each. 4\\. Permutations, combinations, and counting\na. Apply counting arguments, including sum and product rules, inclusion-\nexclusion principle, and arithmetic/geometric progressions. b. Apply the\npigeonhole principle in the context of a formal proof. c. Compute permutations\nand combinations of a set, and interpret the meaning in the context of the\nspecific application. d. Map real-world applications to appropriate counting\nformalisms, such as determining the number of ways to arrange people around a\ntable, subject to constraints on the seating arrangement, or the number of\nways to determine certain hands in cards (e.g., a full house). 5\\. Modular\narithmetic a. Perform computations involving modular arithmetic. b. Explain\nthe notion of the greatest common divisor and apply Euclid's algorithm to\ncompute it. 6\\. Logic a. Convert logical statements from informal language to\npropositional and predicate logic expressions. b. Apply formal methods of\nsymbolic propositional and predicate logic, such as calculating validity of\nformulae, computing normal forms, or negating a logical statement. c. Use the\nrules of inference to construct proofs in propositional and predicate logic.\nd. Describe how symbolic logic can be used to model real-life situations or\napplications, including those arising in computing contexts such as software\nanalysis (e.g., program correctness), database queries, and algorithms. e.\nApply formal logic proofs and/or informal, but rigorous, logical reasoning to\nreal problems, such as predicting the behavior of software or solving problems\nsuch as puzzles. f. Describe the strengths and limitations of propositional\nand predicate logic. g. Explain what it means for a proof in propositional (or\npredicate) logic to be valid. 7\\. Graphs a. Illustrate by example the basic\nterminology of graph theory, and some of the properties and special cases of\ntypes of graphs, including trees. b. Demonstrate different traversal methods\nfor trees and graphs, including pre-, post-, and in-order traversal of trees,\nalong with breadth-first and depth-first search for graphs. c. Model a variety\nof real-world problems in computer science using appropriate forms of graphs\nand trees, such as representing a network topology, the organization of a\nhierarchical file system, or a social network. d. Show how concepts from\ngraphs and trees appear in data structures, algorithms, proof techniques\n(structural induction), and counting. KA Core: The recommended topics are the\nsame between CS core and KA-core, but with far more hours, the KA-core can\ncover these topics in depth and might include more computing-related\napplications.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/806cd0795a2f20fa7a4ecd9649077557272919c205aafc82dbc632d421926bab> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/has_schema_type> _:Neb984683eef14f58b2a250b0354678a4 <http://groq.org/806cd0795a2f20fa7a4ecd9649077557272919c205aafc82dbc632d421926bab> .
_:Neb984683eef14f58b2a250b0354678a4 <http://schema.org/answer> "0" <http://groq.org/806cd0795a2f20fa7a4ecd9649077557272919c205aafc82dbc632d421926bab> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Langages et automates Objectif: (résultats d'apprentissage)\n5. Course content: • Langages algébriques\n- Grammaire algébrique\n- Arbre de dérivation\n- Automates à pile\n• Hiérarchie de Chomsky\n- Classification des grammaires;\n- Algorithmes de reconnaissance pour les grammaires de type 1 et 2\n• Analyse lexicale et syntaxique\n- TP de flex et bison Course name: http://example.org/course/UE_XLG4IU020</page1>\n        <page2>Pages: 145-146 HOURS CS Core = 0 KA Core = 0 FPL-Formalism: Formal Semantics\nNon-core: 1\\. Syntax vs semantics 2\\. Approaches to semantics: axiomatic,\noperational, denotational, type-based 3\\. Axiomatic semantics of abstract\nconstructs such as assignment, selection, iteration using precondition, post-\nconditions, and loop invariant 4\\. Operational semantics analysis of abstract\nconstructs and sequence of such as assignment, expression evaluation,\nselection, iteration using environment and store a. Symbolic execution b.\nConstraint checkers 5\\. Denotational semantics a. Lambda Calculus. (See also:\nAL-Models, FPL-Functional) 6\\. Proofs by induction over language semantics 7\\.\nFormal definitions and proofs for type systems (See also: FPL-Types) a.\nPropositions as types (implication as a function, conjunction as a product,\ndisjunction as a sum) b. Dependent types (universal quantification as\ndependent function, existential quantification as dependent product) c.\nParametricity Illustrative learning outcomes: Non-core: 1\\. Construct formal\nsemantics for a small language. 2\\. Write a lambda-calculus program and show\nits evaluation to a normal form. 3\\. Discuss the different approaches of\noperational, denotational, and axiomatic semantics. 4\\. Use induction to prove\nproperties of all programs in a language. 5\\. Use induction to prove\nproperties of all programs in a language that is well-typed according to a\nformally defined type system. 6\\. Use parametricity to establish the behavior\nof code given only its type.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/ed341a191ed2c37ae65410c4845669532d443b1d3908872c71de04aa90838534> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/ed341a191ed2c37ae65410c4845669532d443b1d3908872c71de04aa90838534> .
_:Nba69747744fb4e979cc1576b8f51e81b <http://schema.org/explain> "Lecture focuses on formal languages/grammars/automata, while KU emphasizes semantics, type systems, and proofs, which are not substantially covered." <http://groq.org/ed341a191ed2c37ae65410c4845669532d443b1d3908872c71de04aa90838534> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/has_schema_type> _:Nba69747744fb4e979cc1576b8f51e81b <http://groq.org/ed341a191ed2c37ae65410c4845669532d443b1d3908872c71de04aa90838534> .
_:Nba69747744fb4e979cc1576b8f51e81b <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/ed341a191ed2c37ae65410c4845669532d443b1d3908872c71de04aa90838534> .
_:Nba69747744fb4e979cc1576b8f51e81b <http://schema.org/answer> "0" <http://groq.org/ed341a191ed2c37ae65410c4845669532d443b1d3908872c71de04aa90838534> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU020" <http://groq.org/ed341a191ed2c37ae65410c4845669532d443b1d3908872c71de04aa90838534> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU020" <http://groq.org/fd956d042fe40bd86bb76817d4cca8c22b8aa88093c40d9e0038f53468297e50> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Logique pour l'informatique Objectif: (résultats d'apprentissage)\nconsistance et complétude d'un système de preuves.\n4. Représenter une preuve de la déduction naturelle sous forme d'arbre d'inférence.\n5. Utiliser les algorithmes d'unification et de résolution pour le raisonnement automatique sur les\nformules logiques.\n1) Raisonnement algébrique booléen\n• Dualités des connecteurs logiques\n• Formes normales conjonctive et disjonctive\n2) Systèmes de preuves\n• Système d'inférence associé à une définition inductive\n• Preuve d'appartenance à un ensemble inductif par un arbre de preuves\n• Règles d'inférences de la déduction naturelle pour la logique propositionnelle\n• Distinguer logique classique et logique intuitionniste\n3) Donner du sens aux langages logique Course content: • Interprétation, modèle, satisfiabilité, validité\n• Correspondance avec le système de preuve: correction et complétude\n4) Calcul des prédicats\n• Manipulation des quantificateurs\n• Skolémisation, forme clausale\n• Théorie logique\n5) Raisonner automatiquement sur les formules logique\n• Algorithme d'unification\n• Algorithme de résolution Course name: http://example.org/course/UE_XLG3IU020</page1>\n        <page2>Pages: 145-146 HOURS CS Core = 0 KA Core = 0 FPL-Formalism: Formal Semantics\nNon-core: 1\\. Syntax vs semantics 2\\. Approaches to semantics: axiomatic,\noperational, denotational, type-based 3\\. Axiomatic semantics of abstract\nconstructs such as assignment, selection, iteration using precondition, post-\nconditions, and loop invariant 4\\. Operational semantics analysis of abstract\nconstructs and sequence of such as assignment, expression evaluation,\nselection, iteration using environment and store a. Symbolic execution b.\nConstraint checkers 5\\. Denotational semantics a. Lambda Calculus. (See also:\nAL-Models, FPL-Functional) 6\\. Proofs by induction over language semantics 7\\.\nFormal definitions and proofs for type systems (See also: FPL-Types) a.\nPropositions as types (implication as a function, conjunction as a product,\ndisjunction as a sum) b. Dependent types (universal quantification as\ndependent function, existential quantification as dependent product) c.\nParametricity Illustrative learning outcomes: Non-core: 1\\. Construct formal\nsemantics for a small language. 2\\. Write a lambda-calculus program and show\nits evaluation to a normal form. 3\\. Discuss the different approaches of\noperational, denotational, and axiomatic semantics. 4\\. Use induction to prove\nproperties of all programs in a language. 5\\. Use induction to prove\nproperties of all programs in a language that is well-typed according to a\nformally defined type system. 6\\. Use parametricity to establish the behavior\nof code given only its type.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/fd956d042fe40bd86bb76817d4cca8c22b8aa88093c40d9e0038f53468297e50> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/has_schema_type> _:N8329fdc7e42648c3a5d08f4f23c9c955 <http://groq.org/fd956d042fe40bd86bb76817d4cca8c22b8aa88093c40d9e0038f53468297e50> .
_:N8329fdc7e42648c3a5d08f4f23c9c955 <http://schema.org/explain> "The lecture covers topics such as logical deduction, proof systems, and formal semantics, which are all relevant to the Knowledge Unit's content." <http://groq.org/fd956d042fe40bd86bb76817d4cca8c22b8aa88093c40d9e0038f53468297e50> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/fd956d042fe40bd86bb76817d4cca8c22b8aa88093c40d9e0038f53468297e50> .
_:N8329fdc7e42648c3a5d08f4f23c9c955 <http://schema.org/answer> "1" <http://groq.org/fd956d042fe40bd86bb76817d4cca8c22b8aa88093c40d9e0038f53468297e50> .
_:N8329fdc7e42648c3a5d08f4f23c9c955 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/fd956d042fe40bd86bb76817d4cca8c22b8aa88093c40d9e0038f53468297e50> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/243abd18061b348ee9195fa1c5d953873a874106915659fcc81ab4934c2b9499> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Enjeux de la transition écologique Objectif: (résultats d'apprentissage) Course content: Programme des 9 séances en ligne (d’environ 1h30 de travail chacune) : Course name: http://example.org/course/UE_XLG3TU020</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/243abd18061b348ee9195fa1c5d953873a874106915659fcc81ab4934c2b9499> .
_:N2e41b5f93b96468fa9b0d14b0989b2ee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/243abd18061b348ee9195fa1c5d953873a874106915659fcc81ab4934c2b9499> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/has_schema_type> _:N2e41b5f93b96468fa9b0d14b0989b2ee <http://groq.org/243abd18061b348ee9195fa1c5d953873a874106915659fcc81ab4934c2b9499> .
_:N2e41b5f93b96468fa9b0d14b0989b2ee <http://schema.org/answer> "0" <http://groq.org/243abd18061b348ee9195fa1c5d953873a874106915659fcc81ab4934c2b9499> .
_:N2e41b5f93b96468fa9b0d14b0989b2ee <http://schema.org/explain> "The lecture focuses on ecological transition, which is unrelated to the KU's focus on formal methods in software engineering." <http://groq.org/243abd18061b348ee9195fa1c5d953873a874106915659fcc81ab4934c2b9499> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU020" <http://groq.org/243abd18061b348ee9195fa1c5d953873a874106915659fcc81ab4934c2b9499> .
_:N894c15a0f666404c8f5ded7792457b00 <http://schema.org/answer> "1" <http://groq.org/795e2340756e8acb66ae8cfe3f1b5c37162aa60bab55f485b2aacbf9122f0e8a> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU040" <http://groq.org/795e2340756e8acb66ae8cfe3f1b5c37162aa60bab55f485b2aacbf9122f0e8a> .
_:N894c15a0f666404c8f5ded7792457b00 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/795e2340756e8acb66ae8cfe3f1b5c37162aa60bab55f485b2aacbf9122f0e8a> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Connaissance de l'entreprise Objectif: (résultats d'apprentissage)\nl’entreprise dans son environnement) Course content: Approche économique de l’entreprise Course name: http://example.org/course/UE_XLG3TU040</page1>\n        <page2>Pages: 116-117 HOURS CS Core = 2 KA Core = 3 DM-Modeling: Data Modeling CS\nCore: 1\\. Data modeling (See also: SE-Requirements) 2\\. Relational data model\n(See also: MSF-Discrete) KA Core: 3\\. Conceptual models (e.g., entity-\nrelationship, UML diagrams) 4\\. Semi-structured data models (expressed using\nDTD, XML, or JSON Schema, for example) Non-core: 5\\. Spreadsheet models 6\\.\nObject-oriented models (See also: FPL-OOP) a. GraphQL 7\\. New features in SQL\n8\\. Specialized Data Modeling topics a. Time series data (aggregation, join)\nb. Graph data (link traversal) c. Techniques for avoiding inefficient raw data\naccess (e.g., \"avg daily price\"): materialized views and special data\nstructures (e.g., Hyperloglog, bitmap) d. Geo-Spatial data (e.g., GIS\ndatabases) (See also: SPD-Interactive) Illustrative Learning Outcomes: CS\nCore: 1\\. Describe the components of the relational data model. 2\\. Model 1:1,\n1:n, and n:m relationships using the relational data model. KA Core: 3\\.\nDescribe the components of the E-R (or some other non-relational) data model.\n4\\. Model a given environment using a conceptual data model. 5\\. Model a given\nenvironment using the document-based or key-value store-based data model.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/795e2340756e8acb66ae8cfe3f1b5c37162aa60bab55f485b2aacbf9122f0e8a> .
_:N894c15a0f666404c8f5ded7792457b00 <http://schema.org/explain> "The lecture covers the relational data model, conceptual models, and semi-structured data models, which are a significant subset of the Knowledge Unit's content." <http://groq.org/795e2340756e8acb66ae8cfe3f1b5c37162aa60bab55f485b2aacbf9122f0e8a> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/795e2340756e8acb66ae8cfe3f1b5c37162aa60bab55f485b2aacbf9122f0e8a> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/has_schema_type> _:N894c15a0f666404c8f5ded7792457b00 <http://groq.org/795e2340756e8acb66ae8cfe3f1b5c37162aa60bab55f485b2aacbf9122f0e8a> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU040" <http://groq.org/2ec5d97fb1669e317e2ca50dd3423e7d46b97df504322d50e2f5fd70b071eb88> .
_:Ndc5312f695194e80997e10a5a03fe75a <http://schema.org/explain> "No overlap in topics; lecture focuses on business environment economics, KU on technical data modeling." <http://groq.org/2ec5d97fb1669e317e2ca50dd3423e7d46b97df504322d50e2f5fd70b071eb88> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Connaissance de l'entreprise Objectif: (résultats d'apprentissage)\nl’entreprise dans son environnement) Course content: Approche économique de l’entreprise Course name: http://example.org/course/UE_XLG3TU040</page1>\n        <page2>Pages: 116-117 HOURS CS Core = 2 KA Core = 3 DM-Modeling: Data Modeling CS\nCore: 1\\. Data modeling (See also: SE-Requirements) 2\\. Relational data model\n(See also: MSF-Discrete) KA Core: 3\\. Conceptual models (e.g., entity-\nrelationship, UML diagrams) 4\\. Semi-structured data models (expressed using\nDTD, XML, or JSON Schema, for example) Non-core: 5\\. Spreadsheet models 6\\.\nObject-oriented models (See also: FPL-OOP) a. GraphQL 7\\. New features in SQL\n8\\. Specialized Data Modeling topics a. Time series data (aggregation, join)\nb. Graph data (link traversal) c. Techniques for avoiding inefficient raw data\naccess (e.g., \"avg daily price\"): materialized views and special data\nstructures (e.g., Hyperloglog, bitmap) d. Geo-Spatial data (e.g., GIS\ndatabases) (See also: SPD-Interactive) Illustrative Learning Outcomes: CS\nCore: 1\\. Describe the components of the relational data model. 2\\. Model 1:1,\n1:n, and n:m relationships using the relational data model. KA Core: 3\\.\nDescribe the components of the E-R (or some other non-relational) data model.\n4\\. Model a given environment using a conceptual data model. 5\\. Model a given\nenvironment using the document-based or key-value store-based data model.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/2ec5d97fb1669e317e2ca50dd3423e7d46b97df504322d50e2f5fd70b071eb88> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/2ec5d97fb1669e317e2ca50dd3423e7d46b97df504322d50e2f5fd70b071eb88> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/has_schema_type> _:Ndc5312f695194e80997e10a5a03fe75a <http://groq.org/2ec5d97fb1669e317e2ca50dd3423e7d46b97df504322d50e2f5fd70b071eb88> .
_:Ndc5312f695194e80997e10a5a03fe75a <http://schema.org/answer> "0" <http://groq.org/2ec5d97fb1669e317e2ca50dd3423e7d46b97df504322d50e2f5fd70b071eb88> .
_:Ndc5312f695194e80997e10a5a03fe75a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/2ec5d97fb1669e317e2ca50dd3423e7d46b97df504322d50e2f5fd70b071eb88> .
_:Nf961119417a246a2ba11a1f97e574432 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/f292375689906037c456b47aa30c2ffd4eaf8234b74920bb365e2ea6b655640e> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Logique pour l'informatique Objectif: (résultats d'apprentissage)\nconsistance et complétude d'un système de preuves.\n4. Représenter une preuve de la déduction naturelle sous forme d'arbre d'inférence.\n5. Utiliser les algorithmes d'unification et de résolution pour le raisonnement automatique sur les\nformules logiques.\n1) Raisonnement algébrique booléen\n• Dualités des connecteurs logiques\n• Formes normales conjonctive et disjonctive\n2) Systèmes de preuves\n• Système d'inférence associé à une définition inductive\n• Preuve d'appartenance à un ensemble inductif par un arbre de preuves\n• Règles d'inférences de la déduction naturelle pour la logique propositionnelle\n• Distinguer logique classique et logique intuitionniste\n3) Donner du sens aux langages logique Course content: • Interprétation, modèle, satisfiabilité, validité\n• Correspondance avec le système de preuve: correction et complétude\n4) Calcul des prédicats\n• Manipulation des quantificateurs\n• Skolémisation, forme clausale\n• Théorie logique\n5) Raisonner automatiquement sur les formules logique\n• Algorithme d'unification\n• Algorithme de résolution Course name: http://example.org/course/UE_XLG3IU020</page1>\n        <page2>Pages: 145-146 HOURS CS Core = 0 KA Core = 0 FPL-Formalism: Formal Semantics\nNon-core: 1\\. Syntax vs semantics 2\\. Approaches to semantics: axiomatic,\noperational, denotational, type-based 3\\. Axiomatic semantics of abstract\nconstructs such as assignment, selection, iteration using precondition, post-\nconditions, and loop invariant 4\\. Operational semantics analysis of abstract\nconstructs and sequence of such as assignment, expression evaluation,\nselection, iteration using environment and store a. Symbolic execution b.\nConstraint checkers 5\\. Denotational semantics a. Lambda Calculus. (See also:\nAL-Models, FPL-Functional) 6\\. Proofs by induction over language semantics 7\\.\nFormal definitions and proofs for type systems (See also: FPL-Types) a.\nPropositions as types (implication as a function, conjunction as a product,\ndisjunction as a sum) b. Dependent types (universal quantification as\ndependent function, existential quantification as dependent product) c.\nParametricity Illustrative learning outcomes: Non-core: 1\\. Construct formal\nsemantics for a small language. 2\\. Write a lambda-calculus program and show\nits evaluation to a normal form. 3\\. Discuss the different approaches of\noperational, denotational, and axiomatic semantics. 4\\. Use induction to prove\nproperties of all programs in a language. 5\\. Use induction to prove\nproperties of all programs in a language that is well-typed according to a\nformally defined type system. 6\\. Use parametricity to establish the behavior\nof code given only its type.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/f292375689906037c456b47aa30c2ffd4eaf8234b74920bb365e2ea6b655640e> .
_:Nf961119417a246a2ba11a1f97e574432 <http://schema.org/explain> "Lecture focuses on logic systems and proof methods, while KU emphasizes formal semantics and type systems with less overlap." <http://groq.org/f292375689906037c456b47aa30c2ffd4eaf8234b74920bb365e2ea6b655640e> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/f292375689906037c456b47aa30c2ffd4eaf8234b74920bb365e2ea6b655640e> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU020" <http://groq.org/f292375689906037c456b47aa30c2ffd4eaf8234b74920bb365e2ea6b655640e> .
_:Nf961119417a246a2ba11a1f97e574432 <http://schema.org/answer> "0" <http://groq.org/f292375689906037c456b47aa30c2ffd4eaf8234b74920bb365e2ea6b655640e> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/has_schema_type> _:Nf961119417a246a2ba11a1f97e574432 <http://groq.org/f292375689906037c456b47aa30c2ffd4eaf8234b74920bb365e2ea6b655640e> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/b888c27ebf144c9987fb74f0037edcd145bb7d106df400a6b3db764eb9c1d7d6> .
_:Nf92c479ab465402b8f26ee1fb211400b <http://schema.org/explain> "The lecture does not cover the technical KU content." <http://groq.org/b888c27ebf144c9987fb74f0037edcd145bb7d106df400a6b3db764eb9c1d7d6> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/has_schema_type> _:Nf92c479ab465402b8f26ee1fb211400b <http://groq.org/b888c27ebf144c9987fb74f0037edcd145bb7d106df400a6b3db764eb9c1d7d6> .
_:Nf92c479ab465402b8f26ee1fb211400b <http://schema.org/answer> "0" <http://groq.org/b888c27ebf144c9987fb74f0037edcd145bb7d106df400a6b3db764eb9c1d7d6> .
_:Nf92c479ab465402b8f26ee1fb211400b <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/b888c27ebf144c9987fb74f0037edcd145bb7d106df400a6b3db764eb9c1d7d6> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU030" <http://groq.org/b888c27ebf144c9987fb74f0037edcd145bb7d106df400a6b3db764eb9c1d7d6> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU030</page1>\n        <page2>Pages: 150-151 HOURS CS Core = 3 KA Core = 2 GIT-Fundamentals: Fundamental\nConcepts CS Core: 1\\. Overview of graphics and visualization. 2\\. Basic\ngraphics pipeline architecture. 3\\. 2D and 3D transformations. 4\\.\nRasterization and rendering techniques. 5\\. Fundamental shading models. KA\nCore: 6\\. Advanced rendering techniques. 7\\. Applications of visualization in\ndifferent fields. 8\\. Interaction methods for graphical environments.\nIllustrative Learning Outcomes: 1\\. Explain the graphics rendering pipeline.\n2\\. Differentiate between rasterization and ray tracing. 3\\. Apply\ntransformations to 2D and 3D models.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/b888c27ebf144c9987fb74f0037edcd145bb7d106df400a6b3db764eb9c1d7d6> .
<http://example.org/faiss> <http://example.org/input> "Label: Bases de données 2 Objectif: (résultats d'apprentissage) Programmer en un langage procédurale lié à une base de données, par exemple PL/SQL ou Course content: Vues et contrôle d’accès\n5. Course name: http://example.org/course/UE_XLG3IU040" <http://faiss.org/65cb045eac37fe1a94055d63cb3a379b5518cd8344769debf1c9812b4fab1bf4> .
_:N8e04f57573f4494ba5902714de2db2e0 <http://example.org/has_chunk> "DM-Querying: Query Construction\nCS Core:\n1. SQL Query Formation\na. Interactive SQL execution\nb. Programmatic execution of an SQL query\nKA Core:\n2. Relational Algebra\n3. SQL\na. Data definition including integrity and other constraint specifications\nb. Update sublanguage\nNon-core:\n4. Relational Calculus\n5. QBE and 4th-generation environments\n6. Different ways to invoke non-procedural queries in conventional languages\n7. Introduction to other major query languages (e.g., XPATH, SPARQL)\n8" <http://faiss.org/65cb045eac37fe1a94055d63cb3a379b5518cd8344769debf1c9812b4fab1bf4> .
_:N8e04f57573f4494ba5902714de2db2e0 <http://example.org/has_score> "0.68432367"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/65cb045eac37fe1a94055d63cb3a379b5518cd8344769debf1c9812b4fab1bf4> .
_:N3e4bf59e66c84a63b40cf379eddc26c9 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Development_Fundamentals_SDF/SDF-Fundamental_Programming_Concepts_and_Practices.txt> <http://faiss.org/65cb045eac37fe1a94055d63cb3a379b5518cd8344769debf1c9812b4fab1bf4> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/is_aligned_with> _:Neb0067acc8cb4897b7e91ca61605583b <http://faiss.org/65cb045eac37fe1a94055d63cb3a379b5518cd8344769debf1c9812b4fab1bf4> .
_:Neb0067acc8cb4897b7e91ca61605583b <http://example.org/has_chunk> ". Use various advanced programming constructs and idioms correctly.\n2. Discuss how various advanced programming constructs aim to improve program structure, software\nquality, and programmer productivity.\n3. Discuss how various advanced programming constructs interact with the definition and\nimplementation of other language features." <http://faiss.org/65cb045eac37fe1a94055d63cb3a379b5518cd8344769debf1c9812b4fab1bf4> .
_:Neb0067acc8cb4897b7e91ca61605583b <http://example.org/has_score> "0.6621131"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/65cb045eac37fe1a94055d63cb3a379b5518cd8344769debf1c9812b4fab1bf4> .
_:Neb0067acc8cb4897b7e91ca61605583b <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Constructs_Advanced_Programming_Constructs.txt> <http://faiss.org/65cb045eac37fe1a94055d63cb3a379b5518cd8344769debf1c9812b4fab1bf4> .
_:N8e04f57573f4494ba5902714de2db2e0 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Date_Management_DM/DM-Querying_Query_Construction.txt> <http://faiss.org/65cb045eac37fe1a94055d63cb3a379b5518cd8344769debf1c9812b4fab1bf4> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/is_aligned_with> _:N8e04f57573f4494ba5902714de2db2e0 <http://faiss.org/65cb045eac37fe1a94055d63cb3a379b5518cd8344769debf1c9812b4fab1bf4> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/is_aligned_with> _:N3e4bf59e66c84a63b40cf379eddc26c9 <http://faiss.org/65cb045eac37fe1a94055d63cb3a379b5518cd8344769debf1c9812b4fab1bf4> .
_:N3e4bf59e66c84a63b40cf379eddc26c9 <http://example.org/has_chunk> ". \n4. Develop programs that use file I/O to provide data persistence across multiple executions.  \n5. Develop programs that use language-provided libraries and frameworks (where applicable).  \n6. Develop programs that use APIs to access or update data (e.g., from the web).  \n7. Develop programs that create simple classes and instantiate objects of those classes (if supported by the language). \n8. Explain the concept of recursion and identify when and how to use it effectively. \n9" <http://faiss.org/65cb045eac37fe1a94055d63cb3a379b5518cd8344769debf1c9812b4fab1bf4> .
_:N3e4bf59e66c84a63b40cf379eddc26c9 <http://example.org/has_score> "0.66737694"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/65cb045eac37fe1a94055d63cb3a379b5518cd8344769debf1c9812b4fab1bf4> .
_:N4327611b057741149c4a10e227988fad <http://schema.org/explain> "The lecture covers topics such as data representation, number bases, and non-numeric data representation, which are also covered in the KU." <http://groq.org/68477d077375a9358fdb35dca9b9949052e65a13283fa8e3b1e9f567e032edfc> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Création numérique Objectif: (résultats d'apprentissage)\n- lister les principaux formats compris par les outils de création (Connaissance) ;\n- estimer les conséquences de choix de format sur la création (Analyse) ;\n- décrire les principaux paradigmes de création numérique (connaissance) ;\n- programmer une application de création numérique répondant à un cahier des\ncharges (Application) ;\n- concevoir un algorithme engendrant une création dans un format imposé (Application) ; Course content: - principaux supports de création numérique et limitations associées (bitmap,vectoriel, 2D, 3D,\ndécoupes, impressions, machine outils numériques,etc.);\n- principaux formats compris par les outils de création et les conséquences sur la création;\n- paradigmes de création numérique (impératif, événementiel, émergeant, etc.); Course name: http://example.org/course/UE_XLG4IU060</page1>\n        <page2>Pages:103-103 HOURS CS Core = 1 KA Core = 0 AR-Representation: Machine-Level\nData Representation CS Core: 1\\. Overview and history of computer architecture\n(See also: SPD-Game) 2\\. Bits, bytes, and words 3\\. Unsigned, signed and two's\ncomplement representations 4\\. Numeric data representation and number bases a.\nFixed-point b. Floating-point 5\\. Representation of non-numeric data 6\\.\nRepresentation of records, arrays and UTF data types (See also: AL-\nFoundational) Illustrative Learning Outcomes: CS Core: 1\\. Discuss why\neverything in computers are data, including instructions. 2\\. Explain how\nfixed-length number representations can affect accuracy and precision. 3\\.\nDescribe how negative integers are stored in sign-magnitude and\ntwo's-complement representations. 4\\. Discuss how different formats can\nrepresent numerical data. 5\\. Explain the bit-level representation of non-\nnumeric data, such as characters, strings, records, and arrays. 6\\. Translate\nnumerical data from one format to another. 7\\. Describe how a single adder\n(without overflow detection) can handle both signed (two's complement) and\nunsigned (binary) input without \"knowing\" which format a given input is using.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/68477d077375a9358fdb35dca9b9949052e65a13283fa8e3b1e9f567e032edfc> .
_:N4327611b057741149c4a10e227988fad <http://schema.org/answer> "1" <http://groq.org/68477d077375a9358fdb35dca9b9949052e65a13283fa8e3b1e9f567e032edfc> .
_:N4327611b057741149c4a10e227988fad <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/68477d077375a9358fdb35dca9b9949052e65a13283fa8e3b1e9f567e032edfc> .
<http://example.org/course/UE_XLG4IU060> <http://example.org/has_schema_type> _:N4327611b057741149c4a10e227988fad <http://groq.org/68477d077375a9358fdb35dca9b9949052e65a13283fa8e3b1e9f567e032edfc> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/68477d077375a9358fdb35dca9b9949052e65a13283fa8e3b1e9f567e032edfc> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU060" <http://groq.org/68477d077375a9358fdb35dca9b9949052e65a13283fa8e3b1e9f567e032edfc> .
_:N23269fc8eccb49e486a50a8692caf5e2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/8e643ec0d7b4d8b8c4247589b087c19b3194b1ab334cc2d0ae1092aad97b3e5c> .
_:N23269fc8eccb49e486a50a8692caf5e2 <http://schema.org/explain> "The lecture covers a significant portion of the KU, including topics such as sets, relations, functions, recursive definitions, proof techniques, permutations, combinations, counting, modular arithmetic, logic, and graphs." <http://groq.org/8e643ec0d7b4d8b8c4247589b087c19b3194b1ab334cc2d0ae1092aad97b3e5c> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/has_schema_type> _:N23269fc8eccb49e486a50a8692caf5e2 <http://groq.org/8e643ec0d7b4d8b8c4247589b087c19b3194b1ab334cc2d0ae1092aad97b3e5c> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU010" <http://groq.org/8e643ec0d7b4d8b8c4247589b087c19b3194b1ab334cc2d0ae1092aad97b3e5c> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/8e643ec0d7b4d8b8c4247589b087c19b3194b1ab334cc2d0ae1092aad97b3e5c> .
_:N23269fc8eccb49e486a50a8692caf5e2 <http://schema.org/answer> "1" <http://groq.org/8e643ec0d7b4d8b8c4247589b087c19b3194b1ab334cc2d0ae1092aad97b3e5c> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 2 Objectif: (résultats d'apprentissage)\ndonnées (itératifs et récursifs) Course content: Structures de données non-linéaires associatives (table associative, ensemble, classe-union) Course name: http://example.org/course/UE_XLG4IU010</page1>\n        <page2>Pages: 187-188 HOURS CS Core = 29 KA Core = 11 MSF-Discrete: Discrete\nMathematics CS Core: 1\\. Sets, relations, functions, cardinality 2\\. Recursive\nmathematical definitions 3\\. Proof techniques (induction, proof by\ncontradiction) 4\\. Permutations, combinations, counting, pigeonhole principle\n5\\. Modular arithmetic 6\\. Logic: truth tables, connectives (operators),\ninference rules, formulas, normal forms, simple predicate logic 7\\. Graphs:\nbasic definitions 8\\. Order notation Illustrative Learning Outcomes: CS Core:\n1\\. Sets, Relations, and Functions, Cardinality a. Explain with examples the\nbasic terminology of functions, relations, and sets. b. Perform the operations\nassociated with sets, functions, and relations. c. Relate practical examples\nto the appropriate set, function, or relation model, and interpret the\nassociated operations and terminology in context. d. Calculate the size of a\nfinite set, including making use of the sum and product rules and inclusion-\nexclusion principle. e. Explain the difference between finite, countable, and\nuncountable sets. 2\\. Recursive mathematical definitions a. Apply recursive\ndefinitions of sequences or structures (e.g., Fibonacci numbers, linked lists,\nparse trees, fractals). b. Formulate inductive proofs of statements about\nrecursive definitions. c. Solve a variety of basic recurrence relations. d.\nAnalyze a problem to determine underlying recurrence relations. e. Given a\nrecursive/iterative code snippet, describe its underlying recurrence relation,\nhypothesize a closed form for the recurrence relation, and prove the\nhypothesis correct (usually, using induction). 3\\. Proof Techniques a.\nIdentify the proof technique used in a given proof. b. Outline the basic\nstructure of each proof technique (direct proof, proof by contradiction, and\ninduction) described in this unit. c. Apply each of the proof techniques\n(direct proof, proof by contradiction, and induction) correctly in the\nconstruction of a sound argument. d. Determine which type of proof is best for\na given problem. e. Explain the parallels between ideas of mathematical and/or\nstructural induction to recursion and recursively defined structures. f.\nExplain the relationship between weak and strong induction and give examples\nof the appropriate use of each. 4\\. Permutations, combinations, and counting\na. Apply counting arguments, including sum and product rules, inclusion-\nexclusion principle, and arithmetic/geometric progressions. b. Apply the\npigeonhole principle in the context of a formal proof. c. Compute permutations\nand combinations of a set, and interpret the meaning in the context of the\nspecific application. d. Map real-world applications to appropriate counting\nformalisms, such as determining the number of ways to arrange people around a\ntable, subject to constraints on the seating arrangement, or the number of\nways to determine certain hands in cards (e.g., a full house). 5\\. Modular\narithmetic a. Perform computations involving modular arithmetic. b. Explain\nthe notion of the greatest common divisor and apply Euclid's algorithm to\ncompute it. 6\\. Logic a. Convert logical statements from informal language to\npropositional and predicate logic expressions. b. Apply formal methods of\nsymbolic propositional and predicate logic, such as calculating validity of\nformulae, computing normal forms, or negating a logical statement. c. Use the\nrules of inference to construct proofs in propositional and predicate logic.\nd. Describe how symbolic logic can be used to model real-life situations or\napplications, including those arising in computing contexts such as software\nanalysis (e.g., program correctness), database queries, and algorithms. e.\nApply formal logic proofs and/or informal, but rigorous, logical reasoning to\nreal problems, such as predicting the behavior of software or solving problems\nsuch as puzzles. f. Describe the strengths and limitations of propositional\nand predicate logic. g. Explain what it means for a proof in propositional (or\npredicate) logic to be valid. 7\\. Graphs a. Illustrate by example the basic\nterminology of graph theory, and some of the properties and special cases of\ntypes of graphs, including trees. b. Demonstrate different traversal methods\nfor trees and graphs, including pre-, post-, and in-order traversal of trees,\nalong with breadth-first and depth-first search for graphs. c. Model a variety\nof real-world problems in computer science using appropriate forms of graphs\nand trees, such as representing a network topology, the organization of a\nhierarchical file system, or a social network. d. Show how concepts from\ngraphs and trees appear in data structures, algorithms, proof techniques\n(structural induction), and counting. KA Core: The recommended topics are the\nsame between CS core and KA-core, but with far more hours, the KA-core can\ncover these topics in depth and might include more computing-related\napplications.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/8e643ec0d7b4d8b8c4247589b087c19b3194b1ab334cc2d0ae1092aad97b3e5c> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Développement web client Objectif: (résultats d'apprentissage) Course content: approfondir les connaissances dans le langage TypeScript, déjà vu en L1\nprésenter un framework de développement web écrit en TypeScript, comme Angular ou Vue. Course name: http://example.org/course/UE_XLG4IU050</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/0c207e935c6737db901c8adc13c41f2401b0fbb267f3ec11c450a7f69e2e981e> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/0c207e935c6737db901c8adc13c41f2401b0fbb267f3ec11c450a7f69e2e981e> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU050" <http://groq.org/0c207e935c6737db901c8adc13c41f2401b0fbb267f3ec11c450a7f69e2e981e> .
<http://example.org/course/UE_XLG4IU050> <http://example.org/has_schema_type> _:N242c1cfb3858482f8cfcf099856ca8fd <http://groq.org/0c207e935c6737db901c8adc13c41f2401b0fbb267f3ec11c450a7f69e2e981e> .
_:N242c1cfb3858482f8cfcf099856ca8fd <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/0c207e935c6737db901c8adc13c41f2401b0fbb267f3ec11c450a7f69e2e981e> .
_:N242c1cfb3858482f8cfcf099856ca8fd <http://schema.org/explain> "The lecture focuses on web development with TypeScript and frameworks, while the KU covers a broader range of development platforms and their constraints." <http://groq.org/0c207e935c6737db901c8adc13c41f2401b0fbb267f3ec11c450a7f69e2e981e> .
_:N242c1cfb3858482f8cfcf099856ca8fd <http://schema.org/answer> "0" <http://groq.org/0c207e935c6737db901c8adc13c41f2401b0fbb267f3ec11c450a7f69e2e981e> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/8ac9f97f53e792e94ac07efd6e0a6ee20beb04c9d7d30ec69a7a17a43f223389> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU040" <http://groq.org/8ac9f97f53e792e94ac07efd6e0a6ee20beb04c9d7d30ec69a7a17a43f223389> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/has_schema_type> _:N56212d0031b14ea5b0fb0246fd04a702 <http://groq.org/8ac9f97f53e792e94ac07efd6e0a6ee20beb04c9d7d30ec69a7a17a43f223389> .
_:N56212d0031b14ea5b0fb0246fd04a702 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/8ac9f97f53e792e94ac07efd6e0a6ee20beb04c9d7d30ec69a7a17a43f223389> .
_:N56212d0031b14ea5b0fb0246fd04a702 <http://schema.org/explain> "The lecture covers business economics, unrelated to GIT-3D Modeling." <http://groq.org/8ac9f97f53e792e94ac07efd6e0a6ee20beb04c9d7d30ec69a7a17a43f223389> .
_:N56212d0031b14ea5b0fb0246fd04a702 <http://schema.org/answer> "0" <http://groq.org/8ac9f97f53e792e94ac07efd6e0a6ee20beb04c9d7d30ec69a7a17a43f223389> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Connaissance de l'entreprise Objectif: (résultats d'apprentissage)\nl’entreprise dans son environnement) Course content: Approche économique de l’entreprise Course name: http://example.org/course/UE_XLG3TU040</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD GIT-3D Modeling: Core Concepts CS\nCore: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic 3\nKA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of GIT-3D Modeling.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/8ac9f97f53e792e94ac07efd6e0a6ee20beb04c9d7d30ec69a7a17a43f223389> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Langages et automates Objectif: (résultats d'apprentissage)\n5. Course content: • Langages algébriques\n- Grammaire algébrique\n- Arbre de dérivation\n- Automates à pile\n• Hiérarchie de Chomsky\n- Classification des grammaires;\n- Algorithmes de reconnaissance pour les grammaires de type 1 et 2\n• Analyse lexicale et syntaxique\n- TP de flex et bison Course name: http://example.org/course/UE_XLG4IU020</page1>\n        <page2>Pages:79-80 HOURS CS Core = 0 KA Core = 0 AI-NLP: Natural Language Processing\nNon-core: 1\\. Deterministic and stochastic grammars 2\\. Parsing algorithms a.\nCFGs and chart parsers (e.g., CYK) b. Probabilistic CFGs and weighted CYK 3\\.\nRepresenting meaning/Semantics a. Logic-based knowledge representations b.\nSemantic roles c. Temporal representations d. Beliefs, desires, and intentions\n4\\. Corpus-based methods 5\\. N-grams and HMMs 6\\. Smoothing and backoff 7\\.\nExamples of use: POS tagging and morphology 8\\. Information retrieval (See\nalso: DM-Unstructured) a. Vector space model i. TF & IDF b. Precision and\nrecall 9\\. Information extraction 10\\. Language translation 11\\. Text\nclassification, categorization a. Bag of words model 12\\. Deep learning for\nNLP (See also: AI-ML) a. RNNs b. Transformers c. Multi-modal embeddings (e.g.,\nimages + text) d. Generative language models Illustrative Learning Outcomes:\n1\\. Define and contrast deterministic and stochastic grammars, providing\nexamples to show the adequacy of each. 2\\. Simulate, apply, or implement\nclassic and stochastic algorithms for parsing natural language. 3\\. Identify\nthe challenges of representing meaning. 4\\. List the advantages of using\nstandard corpora. Identify examples of current corpora for a variety of NLP\ntasks. 5\\. Identify techniques for information retrieval, language\ntranslation, and text classification. 6\\. Implement a TF/IDF transform, use it\nto extract features from a corpus, and train an off-the-shelf machine learning\nalgorithm using those features to do text classification.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/50718b2db4ec7c5383515d74c22036c3e29704ec01b794cb20d426e149ae76a7> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/has_schema_type> _:N5698ae0aa151476f89905fc0cc775483 <http://groq.org/50718b2db4ec7c5383515d74c22036c3e29704ec01b794cb20d426e149ae76a7> .
_:N5698ae0aa151476f89905fc0cc775483 <http://schema.org/explain> "The lecture covers topics such as grammatical formalisms, parsing algorithms, and language processing, which are all relevant to the Knowledge Unit." <http://groq.org/50718b2db4ec7c5383515d74c22036c3e29704ec01b794cb20d426e149ae76a7> .
_:N5698ae0aa151476f89905fc0cc775483 <http://schema.org/answer> "1" <http://groq.org/50718b2db4ec7c5383515d74c22036c3e29704ec01b794cb20d426e149ae76a7> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/50718b2db4ec7c5383515d74c22036c3e29704ec01b794cb20d426e149ae76a7> .
_:N5698ae0aa151476f89905fc0cc775483 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/50718b2db4ec7c5383515d74c22036c3e29704ec01b794cb20d426e149ae76a7> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU020" <http://groq.org/50718b2db4ec7c5383515d74c22036c3e29704ec01b794cb20d426e149ae76a7> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU020" <http://groq.org/b7b24f77918c2e8ddd1aab3e427aa64ecce8d8bbc80484d467c669d910b973ff> .
_:Naa97078b936141289d3800cb600db82c <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/b7b24f77918c2e8ddd1aab3e427aa64ecce8d8bbc80484d467c669d910b973ff> .
_:Naa97078b936141289d3800cb600db82c <http://schema.org/answer> "1" <http://groq.org/b7b24f77918c2e8ddd1aab3e427aa64ecce8d8bbc80484d467c669d910b973ff> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/has_schema_type> _:Naa97078b936141289d3800cb600db82c <http://groq.org/b7b24f77918c2e8ddd1aab3e427aa64ecce8d8bbc80484d467c669d910b973ff> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/b7b24f77918c2e8ddd1aab3e427aa64ecce8d8bbc80484d467c669d910b973ff> .
_:Naa97078b936141289d3800cb600db82c <http://schema.org/explain> "The lecture covers the overview of development platforms, programming via platform-specific API, platform languages, and programming under platform constraints, which aligns with the KU's content." <http://groq.org/b7b24f77918c2e8ddd1aab3e427aa64ecce8d8bbc80484d467c669d910b973ff> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Unité Enseignement de Découverte Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU020</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/b7b24f77918c2e8ddd1aab3e427aa64ecce8d8bbc80484d467c669d910b973ff> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/314c81e7d8c2a6abba55a762f40181b47556f3f67d1336814bed8642487a39b6> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/has_schema_type> _:N0365dfef4db64024a49e9d2797d7aaf9 <http://groq.org/314c81e7d8c2a6abba55a762f40181b47556f3f67d1336814bed8642487a39b6> .
_:N0365dfef4db64024a49e9d2797d7aaf9 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/314c81e7d8c2a6abba55a762f40181b47556f3f67d1336814bed8642487a39b6> .
_:N0365dfef4db64024a49e9d2797d7aaf9 <http://schema.org/explain> "Lecture focuses on teaching methods, while KU covers 3D Modeling concepts." <http://groq.org/314c81e7d8c2a6abba55a762f40181b47556f3f67d1336814bed8642487a39b6> .
_:N0365dfef4db64024a49e9d2797d7aaf9 <http://schema.org/answer> "0" <http://groq.org/314c81e7d8c2a6abba55a762f40181b47556f3f67d1336814bed8642487a39b6> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU020" <http://groq.org/314c81e7d8c2a6abba55a762f40181b47556f3f67d1336814bed8642487a39b6> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Unité Enseignement de Découverte Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU020</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD GIT-3D Modeling: Core Concepts CS\nCore: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic 3\nKA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of GIT-3D Modeling.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/314c81e7d8c2a6abba55a762f40181b47556f3f67d1336814bed8642487a39b6> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algèbre linéaire Objectif: (résultats d'apprentissage) Appliquer un algorithme adéquat pour résoudre un système linéaire\n• Course content: • Course name: http://example.org/course/UE_XLG4MU060</page1>\n        <page2>Pages: 133 HOURS CS Core = 0 KA Core = 2 + 1 (MSF) FPL-Logic: Logic\nProgramming KA Core: 1\\. Universal vs existential quantifiers. (See also: AI-\nLRR, MSF-Discrete) 2\\. First order predicate logic vs higher order logic. (See\nalso: AI-LRR, MSF-Discrete) 3\\. Expressing complex relations using logical\nconnectives and simpler relations. 4\\. Definitions of Horn clause, facts,\ngoals and subgoals. 5\\. Unification and unification algorithm; unification vs\nassertion vs expression evaluation. 6\\. Mixing relations with functions. (See\nalso: MSF-Discrete) 7\\. Cuts, backtracking, and non-determinism. 8\\. Closed-\nworld vs open-world assumptions. Non-core: 9\\. Memory overhead of variable\ncopying in handling iterative programs. 10\\. Programming constructs to store\npartial computation and pruning search trees. 11\\. Mixing functional\nprogramming and logic programming using concepts such as equational logic,\nnarrowing, residuation, and semantic unification. (See also: FPL-Functional)\n12\\. Higher-order, constraint, and inductive logic programming. (See also: AI-\nLRR) 13\\. Integration with other programming paradigms such as object-oriented\nprogramming. 14\\. Advance programming constructs such as difference-lists,\ncreating user defined data structures, set of, etc. Illustrative learning\noutcomes: KA Core: 1\\. Use a logic language to implement a conventional\nalgorithm. 2\\. Use a logic language to implement an algorithm employing\nimplicit search using clauses, relations, and cuts. 3\\. Use a simple\nillustrative example to show correspondence between First Order Predicate\nLogic (FOPL) and logic programs using Horn clauses. 4\\. Use examples to\nillustrate the unification algorithm and its role of parameter-passing in\nquery reduction. 5\\. Use simple logic programs interleaving relations,\nfunctions, and recursive programming such as factorial and Fibonacci numbers\nand simple complex relationships between entities and illustrate execution and\nparameter-passing using unification and backtracking. Non-core: 6\\. Illustrate\ncomputation of simple programs such as Fibonacci and show overhead of\nrecomputation, and then show how to improve execution overhead.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/3cc6a1db5e6093a853b9b32a28390677a5d3f2ab9531692a5450f15dd6afc9c0> .
_:Na0579235963c47d1bfde53ef6057acf6 <http://schema.org/answer> "0" <http://groq.org/3cc6a1db5e6093a853b9b32a28390677a5d3f2ab9531692a5450f15dd6afc9c0> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/3cc6a1db5e6093a853b9b32a28390677a5d3f2ab9531692a5450f15dd6afc9c0> .
_:Na0579235963c47d1bfde53ef6057acf6 <http://schema.org/explain> "Lecture focuses on linear algebra algorithms, while KU addresses logic programming concepts, which are unrelated." <http://groq.org/3cc6a1db5e6093a853b9b32a28390677a5d3f2ab9531692a5450f15dd6afc9c0> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4MU060" <http://groq.org/3cc6a1db5e6093a853b9b32a28390677a5d3f2ab9531692a5450f15dd6afc9c0> .
_:Na0579235963c47d1bfde53ef6057acf6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/3cc6a1db5e6093a853b9b32a28390677a5d3f2ab9531692a5450f15dd6afc9c0> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/has_schema_type> _:Na0579235963c47d1bfde53ef6057acf6 <http://groq.org/3cc6a1db5e6093a853b9b32a28390677a5d3f2ab9531692a5450f15dd6afc9c0> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Simulation de gestion Objectif: (résultats d'apprentissage) conséquences.\n• Pouvoir s’exprimer spontanément, très couramment, de façon précise et rendre distinctes de\nfines nuances de sens en rapport avec les sujets abordés.\n• Être capable de raisonner par soi-même. Course content: Simulation de la gestion ou jeu d’entreprise sur plusieurs exercices d’une entreprise dans un milieu\nconcurrentiel avec un focus sur les décisions de marketing. Course name: http://example.org/course/UE_XLG4IU070</page1>\n        <page2>Pages: 152-153 HOURS CS Core = 3 KA Core = 2 GIT-Animation and Simulation:\nCore Principles CS Core: 1\\. Key concepts in animation and simulation. 2\\.\nProcedural animation and physics-based modeling. 3\\. Motion capture techniques\nand keyframe animation. 4\\. Real-time simulation techniques for interactive\napplications. KA Core: 5\\. AI-based animation and behavioral modeling. 6\\.\nCrowd simulation and group behaviors in animations. 7\\. Advanced physics-based\nsimulations. Illustrative Learning Outcomes: 1\\. Apply keyframe animation\ntechniques to an interactive application. 2\\. Differentiate between procedural\nand AI-driven animation. 3\\. Understand the role of physics in real-time\nsimulations.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/54a8a3c881a3415e23803be901c251a10332ded90ff897d3ac7991ba66bd99dd> .
_:Nf84b178f416a4832bb7eba7a5736ec0d <http://schema.org/explain> "No overlap in technical content; lecture focuses on business management simulations, while KU covers animation/simulation techniques." <http://groq.org/54a8a3c881a3415e23803be901c251a10332ded90ff897d3ac7991ba66bd99dd> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/54a8a3c881a3415e23803be901c251a10332ded90ff897d3ac7991ba66bd99dd> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU070" <http://groq.org/54a8a3c881a3415e23803be901c251a10332ded90ff897d3ac7991ba66bd99dd> .
<http://example.org/course/UE_XLG4IU070> <http://example.org/has_schema_type> _:Nf84b178f416a4832bb7eba7a5736ec0d <http://groq.org/54a8a3c881a3415e23803be901c251a10332ded90ff897d3ac7991ba66bd99dd> .
_:Nf84b178f416a4832bb7eba7a5736ec0d <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/54a8a3c881a3415e23803be901c251a10332ded90ff897d3ac7991ba66bd99dd> .
_:Nf84b178f416a4832bb7eba7a5736ec0d <http://schema.org/answer> "0" <http://groq.org/54a8a3c881a3415e23803be901c251a10332ded90ff897d3ac7991ba66bd99dd> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/fb03c2d226f60779e7552e398ea5598cc945e35505ca1fd1cdc21cd779d2f5d6> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/has_schema_type> _:N1d967fdc7e5d4aef926856a8b099c806 <http://groq.org/fb03c2d226f60779e7552e398ea5598cc945e35505ca1fd1cdc21cd779d2f5d6> .
_:N1d967fdc7e5d4aef926856a8b099c806 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/fb03c2d226f60779e7552e398ea5598cc945e35505ca1fd1cdc21cd779d2f5d6> .
_:N1d967fdc7e5d4aef926856a8b099c806 <http://schema.org/explain> "The lecture focuses on object-oriented programming, while the KU covers logic programming." <http://groq.org/fb03c2d226f60779e7552e398ea5598cc945e35505ca1fd1cdc21cd779d2f5d6> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Programmation à Objets Objectif: (résultats d'apprentissage) Connaître les mécanismes d’héritage et de polymorphisme Course content: Classes abstraites Course name: http://example.org/course/UE_XLG3IU030</page1>\n        <page2>Pages: 133 HOURS CS Core = 0 KA Core = 2 + 1 (MSF) FPL-Logic: Logic\nProgramming KA Core: 1\\. Universal vs existential quantifiers. (See also: AI-\nLRR, MSF-Discrete) 2\\. First order predicate logic vs higher order logic. (See\nalso: AI-LRR, MSF-Discrete) 3\\. Expressing complex relations using logical\nconnectives and simpler relations. 4\\. Definitions of Horn clause, facts,\ngoals and subgoals. 5\\. Unification and unification algorithm; unification vs\nassertion vs expression evaluation. 6\\. Mixing relations with functions. (See\nalso: MSF-Discrete) 7\\. Cuts, backtracking, and non-determinism. 8\\. Closed-\nworld vs open-world assumptions. Non-core: 9\\. Memory overhead of variable\ncopying in handling iterative programs. 10\\. Programming constructs to store\npartial computation and pruning search trees. 11\\. Mixing functional\nprogramming and logic programming using concepts such as equational logic,\nnarrowing, residuation, and semantic unification. (See also: FPL-Functional)\n12\\. Higher-order, constraint, and inductive logic programming. (See also: AI-\nLRR) 13\\. Integration with other programming paradigms such as object-oriented\nprogramming. 14\\. Advance programming constructs such as difference-lists,\ncreating user defined data structures, set of, etc. Illustrative learning\noutcomes: KA Core: 1\\. Use a logic language to implement a conventional\nalgorithm. 2\\. Use a logic language to implement an algorithm employing\nimplicit search using clauses, relations, and cuts. 3\\. Use a simple\nillustrative example to show correspondence between First Order Predicate\nLogic (FOPL) and logic programs using Horn clauses. 4\\. Use examples to\nillustrate the unification algorithm and its role of parameter-passing in\nquery reduction. 5\\. Use simple logic programs interleaving relations,\nfunctions, and recursive programming such as factorial and Fibonacci numbers\nand simple complex relationships between entities and illustrate execution and\nparameter-passing using unification and backtracking. Non-core: 6\\. Illustrate\ncomputation of simple programs such as Fibonacci and show overhead of\nrecomputation, and then show how to improve execution overhead.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/fb03c2d226f60779e7552e398ea5598cc945e35505ca1fd1cdc21cd779d2f5d6> .
_:N1d967fdc7e5d4aef926856a8b099c806 <http://schema.org/answer> "0" <http://groq.org/fb03c2d226f60779e7552e398ea5598cc945e35505ca1fd1cdc21cd779d2f5d6> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU030" <http://groq.org/fb03c2d226f60779e7552e398ea5598cc945e35505ca1fd1cdc21cd779d2f5d6> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/0f217b520d5288af2dcc4dfda83b231de70c546489d8a2d06146a12f2864a03b> .
_:N2e7a4c66cac240fcaac5870309b1eac8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/0f217b520d5288af2dcc4dfda83b231de70c546489d8a2d06146a12f2864a03b> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/has_schema_type> _:N2e7a4c66cac240fcaac5870309b1eac8 <http://groq.org/0f217b520d5288af2dcc4dfda83b231de70c546489d8a2d06146a12f2864a03b> .
_:N2e7a4c66cac240fcaac5870309b1eac8 <http://schema.org/explain> "The lecture focuses on teaching methods, not GIT-3D Modeling." <http://groq.org/0f217b520d5288af2dcc4dfda83b231de70c546489d8a2d06146a12f2864a03b> .
_:N2e7a4c66cac240fcaac5870309b1eac8 <http://schema.org/answer> "0" <http://groq.org/0f217b520d5288af2dcc4dfda83b231de70c546489d8a2d06146a12f2864a03b> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Unité Enseignement de Découverte Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU020</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD GIT-3D Modeling: Core Concepts CS\nCore: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic 3\nKA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of GIT-3D Modeling.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/0f217b520d5288af2dcc4dfda83b231de70c546489d8a2d06146a12f2864a03b> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU020" <http://groq.org/0f217b520d5288af2dcc4dfda83b231de70c546489d8a2d06146a12f2864a03b> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/has_schema_type> _:N6283c27fe05a4dc39245967608a62e65 <http://groq.org/593867ddd8cd1d4de7ae18bfad23c3c8cee9997d7aefcd23d514dd4a646655b6> .
_:N6283c27fe05a4dc39245967608a62e65 <http://schema.org/explain> "The lecture covers the transition to an ecological approach, which aligns with the core concepts of SE-Maintenance and Evolution, and the illustrative learning outcomes." <http://groq.org/593867ddd8cd1d4de7ae18bfad23c3c8cee9997d7aefcd23d514dd4a646655b6> .
_:N6283c27fe05a4dc39245967608a62e65 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/593867ddd8cd1d4de7ae18bfad23c3c8cee9997d7aefcd23d514dd4a646655b6> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Enjeux de la transition écologique Objectif: (résultats d'apprentissage) Course content: Programme des 9 séances en ligne (d’environ 1h30 de travail chacune) : Course name: http://example.org/course/UE_XLG3TU020</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Maintenance and Evolution:\nCore Concepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nSE-Maintenance and Evolution. 2\\. Apply principles in practical scenarios. 3\\.\nAnalyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/593867ddd8cd1d4de7ae18bfad23c3c8cee9997d7aefcd23d514dd4a646655b6> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/593867ddd8cd1d4de7ae18bfad23c3c8cee9997d7aefcd23d514dd4a646655b6> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU020" <http://groq.org/593867ddd8cd1d4de7ae18bfad23c3c8cee9997d7aefcd23d514dd4a646655b6> .
_:N6283c27fe05a4dc39245967608a62e65 <http://schema.org/answer> "1" <http://groq.org/593867ddd8cd1d4de7ae18bfad23c3c8cee9997d7aefcd23d514dd4a646655b6> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/ab83f1cfc92d4afd9c2356ead4c5fb8e3560ce9db589d88a60228c4ee15e6334> .
_:Nfb803efc36714a20bbcb3812c5131425 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/ab83f1cfc92d4afd9c2356ead4c5fb8e3560ce9db589d88a60228c4ee15e6334> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/has_schema_type> _:Nfb803efc36714a20bbcb3812c5131425 <http://groq.org/ab83f1cfc92d4afd9c2356ead4c5fb8e3560ce9db589d88a60228c4ee15e6334> .
_:Nfb803efc36714a20bbcb3812c5131425 <http://schema.org/answer> "0" <http://groq.org/ab83f1cfc92d4afd9c2356ead4c5fb8e3560ce9db589d88a60228c4ee15e6334> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU020" <http://groq.org/ab83f1cfc92d4afd9c2356ead4c5fb8e3560ce9db589d88a60228c4ee15e6334> .
_:Nfb803efc36714a20bbcb3812c5131425 <http://schema.org/explain> "The lecture focuses on teaching methods, while the KU covers technical programming topics." <http://groq.org/ab83f1cfc92d4afd9c2356ead4c5fb8e3560ce9db589d88a60228c4ee15e6334> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Unité Enseignement de Découverte Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU020</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/ab83f1cfc92d4afd9c2356ead4c5fb8e3560ce9db589d88a60228c4ee15e6334> .
_:N2504fbc0c71d43b5a4d2ebcf20175379 <http://schema.org/answer> "0" <http://groq.org/8db5ebe2b3395e3fdb31f9fca86b641435c8818e3650ed9eec04ec6b41782985> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/8db5ebe2b3395e3fdb31f9fca86b641435c8818e3650ed9eec04ec6b41782985> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/has_schema_type> _:N2504fbc0c71d43b5a4d2ebcf20175379 <http://groq.org/8db5ebe2b3395e3fdb31f9fca86b641435c8818e3650ed9eec04ec6b41782985> .
_:N2504fbc0c71d43b5a4d2ebcf20175379 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/8db5ebe2b3395e3fdb31f9fca86b641435c8818e3650ed9eec04ec6b41782985> .
_:N2504fbc0c71d43b5a4d2ebcf20175379 <http://schema.org/explain> "Lecture focuses on linear algebra, while KU requires calculus topics (derivatives, integrals, ODEs) not mentioned." <http://groq.org/8db5ebe2b3395e3fdb31f9fca86b641435c8818e3650ed9eec04ec6b41782985> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4MU060" <http://groq.org/8db5ebe2b3395e3fdb31f9fca86b641435c8818e3650ed9eec04ec6b41782985> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algèbre linéaire Objectif: (résultats d'apprentissage) Appliquer un algorithme adéquat pour résoudre un système linéaire\n• Course content: • Course name: http://example.org/course/UE_XLG4MU060</page1>\n        <page2>Pages: 192-194 HOURS CS Core = 0 KA Core = 40 MSF-Calculus KA Core: 1\\.\nSequences, series, limits 2\\. Single-variable derivatives: definition,\ncomputation rules (chain rule etc.), derivatives of important functions,\napplications 3\\. Single-variable integration: definition, computation rules,\nintegrals of important functions, fundamental theorem of calculus, definite vs\nindefinite, applications (including in probability) 4\\. Parametric and polar\nrepresentations 5\\. Taylor series 6\\. Multivariate calculus: partial\nderivatives, gradient, chain-rule, vector valued functions, 7\\. Optimization:\nconvexity, global vs local minima, gradient descent, constrained optimization,\nand Lagrange multipliers. 8\\. Ordinary Differential Equations (ODEs):\ndefinition, Euler method, applications to simulation, Monte Carlo integration\n9\\. CS applications: gradient descent for machine learning, forward and\ninverse kinematics, applications of calculus to probability Note: the calculus\ntopics listed above are aligned with computer science goals rather than with\ntraditional calculus courses. For example, multivariate calculus is often a\ncourse by itself, but computer science undergraduates only need parts of it\nfor machine learning. Illustrative Learning Outcomes: KA Core: 1\\. Sequences,\nseries, limits a. Explain the difference between infinite sets and sequences.\nb. Explain the formal definition of a limit. c. Derive the limit for examples\nof sequences and series. d. Explain convergence and divergence. e. Apply\nL'Hospital's rule and other approaches to resolving limits. 2\\. Single-\nvariable derivatives: definition, computation rules (chain rule etc.),\nderivatives of important functions, applications a. Explain a derivative in\nterms of limits. b. Explain derivatives as functions. c. Perform elementary\nderivative calculations from limits. d. Apply sum, product, and quotient\nrules. e. Work through examples with important functions. 3\\. Single-variable\nintegration: definition, computation rules, integrals of important functions,\nfundamental theorem of calculus, definite vs indefinite, applications\n(including in probability) a. Explain the definitions of definite and\nindefinite integrals. b. Apply integration rules to examples with important\nfunctions. c. Explore the use of the fundamental theorem of calculus. d. Apply\nintegration to problems. 4\\. Parametric and polar representations a. Apply\nparametric representations of important curves. b. Apply polar\nrepresentations. 5\\. Taylor series a. Derive Taylor series for some important\nfunctions. b. Apply the Taylor series to approximations. 6\\. Multivariate\ncalculus: partial derivatives, gradient, chain-rule, vector valued functions,\napplications to optimization, convexity, global vs local minima. a. Compute\npartial derivatives and gradients. b. Work through examples with vector-valued\nfunctions with gradient notation. c. Explain applications to optimization. 7\\.\nODEs: definition, Euler method, applications to simulation a. Apply the Euler\nmethod to integration. b. Apply the Euler method to a single-variable\ndifferential equation. c. Apply the Euler method to multiple variables in an\nODE.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/8db5ebe2b3395e3fdb31f9fca86b641435c8818e3650ed9eec04ec6b41782985> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/5239b58578e10de58446e9403919e4bb8720dcab823aa9f6b038381ea8508ca6> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/has_schema_type> _:N1329a602480e4720aef14b1f7c45893e <http://groq.org/5239b58578e10de58446e9403919e4bb8720dcab823aa9f6b038381ea8508ca6> .
_:N1329a602480e4720aef14b1f7c45893e <http://schema.org/answer> "0" <http://groq.org/5239b58578e10de58446e9403919e4bb8720dcab823aa9f6b038381ea8508ca6> .
_:N1329a602480e4720aef14b1f7c45893e <http://schema.org/explain> "The lecture focuses on database programming, while the KU covers general programming concepts." <http://groq.org/5239b58578e10de58446e9403919e4bb8720dcab823aa9f6b038381ea8508ca6> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Bases de données 2 Objectif: (résultats d'apprentissage) Programmer en un langage procédurale lié à une base de données, par exemple PL/SQL ou Course content: Vues et contrôle d’accès\n5. Course name: http://example.org/course/UE_XLG3IU040</page1>\n        <page2>Pages : 168-169 CS Core : 20, KA Core : None CS Core: 1\\. Basic concepts such\nas variables, primitive data types, expressions, and their evaluation 2\\. How\nimperative programs work: state and state transitions on execution of\nstatements, flow of control 3\\. Basic constructs such as assignment\nstatements, conditional and iterative statements, basic I/O 4\\. Key modularity\nconstructs such as functions (and methods and classes, if supported in the\nlanguage) and related concepts like parameter passing, scope, abstraction,\ndata encapsulation (See also: FPL-OOP) 5\\. Input and output using files and\nAPIs 6\\. Structured data types available in the chosen programming language\nlike sequences (e.g., arrays, lists), associative containers (e.g.,\ndictionaries, maps), others (e.g., sets, tuples) and when and how to use them\n(See also: AL-Foundational) 7\\. Libraries and frameworks provided by the\nlanguage (when/where applicable) 8\\. Recursion 9\\. Dealing with runtime errors\nin programs (e.g., exception handling). 10\\. Basic concepts of programming\nerrors, testing, and debugging (See also: SE-Construction, SEC-Coding) 11\\.\nDocumenting/commenting code at the program and module level.(See also: SE-\nConstruction) 12\\. Develop a security mindset. (See also: SEC-Foundations)\nIllustrative Learning Outcomes: CS Core: In these learning outcomes, the term\n\"develop\" means \"design, write, test, and debug.\" 1\\. Develop programs that\nuse the fundamental programming constructs: assignment and expressions, basic\nI/O, conditional and iterative statements. 2\\. Develop programs using\nfunctions with parameter passing. 3\\. Develop programs that effectively use\nthe different structured data types provided in the language like\narrays/lists, dictionaries, and sets. 4\\. Develop programs that use file I/O\nto provide data persistence across multiple executions. 5\\. Develop programs\nthat use language-provided libraries and frameworks (where applicable). 6\\.\nDevelop programs that use APIs to access or update data (e.g., from the web).\n7\\. Develop programs that create simple classes and instantiate objects of\nthose classes (if supported by the language). 8\\. Explain the concept of\nrecursion and identify when and how to use it effectively. 9\\. Develop\nrecursive functions. 10\\. Develop programs that can handle runtime errors.\n11\\. Read a given program and explain what it does. 12\\. Write comments for a\nprogram or a module specifying what it does. 13\\. Trace the flow of control\nduring the execution of a program. 14\\. Use appropriate terminology to\nidentify elements of a program (e.g., identifier, operator, operand).</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/5239b58578e10de58446e9403919e4bb8720dcab823aa9f6b038381ea8508ca6> .
_:N1329a602480e4720aef14b1f7c45893e <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/5239b58578e10de58446e9403919e4bb8720dcab823aa9f6b038381ea8508ca6> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU040" <http://groq.org/5239b58578e10de58446e9403919e4bb8720dcab823aa9f6b038381ea8508ca6> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/0b1fb53982abad5412d2e68dadf17f4d6f98a92102d160acbb70d961e8f98bed> .
_:Nd4a5286e67e845ac855046c0075c90f2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/0b1fb53982abad5412d2e68dadf17f4d6f98a92102d160acbb70d961e8f98bed> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Langages et automates Objectif: (résultats d'apprentissage)\n5. Course content: • Langages algébriques\n- Grammaire algébrique\n- Arbre de dérivation\n- Automates à pile\n• Hiérarchie de Chomsky\n- Classification des grammaires;\n- Algorithmes de reconnaissance pour les grammaires de type 1 et 2\n• Analyse lexicale et syntaxique\n- TP de flex et bison Course name: http://example.org/course/UE_XLG4IU020</page1>\n        <page2>Pages:79-80 HOURS CS Core = 0 KA Core = 0 AI-NLP: Natural Language Processing\nNon-core: 1\\. Deterministic and stochastic grammars 2\\. Parsing algorithms a.\nCFGs and chart parsers (e.g., CYK) b. Probabilistic CFGs and weighted CYK 3\\.\nRepresenting meaning/Semantics a. Logic-based knowledge representations b.\nSemantic roles c. Temporal representations d. Beliefs, desires, and intentions\n4\\. Corpus-based methods 5\\. N-grams and HMMs 6\\. Smoothing and backoff 7\\.\nExamples of use: POS tagging and morphology 8\\. Information retrieval (See\nalso: DM-Unstructured) a. Vector space model i. TF & IDF b. Precision and\nrecall 9\\. Information extraction 10\\. Language translation 11\\. Text\nclassification, categorization a. Bag of words model 12\\. Deep learning for\nNLP (See also: AI-ML) a. RNNs b. Transformers c. Multi-modal embeddings (e.g.,\nimages + text) d. Generative language models Illustrative Learning Outcomes:\n1\\. Define and contrast deterministic and stochastic grammars, providing\nexamples to show the adequacy of each. 2\\. Simulate, apply, or implement\nclassic and stochastic algorithms for parsing natural language. 3\\. Identify\nthe challenges of representing meaning. 4\\. List the advantages of using\nstandard corpora. Identify examples of current corpora for a variety of NLP\ntasks. 5\\. Identify techniques for information retrieval, language\ntranslation, and text classification. 6\\. Implement a TF/IDF transform, use it\nto extract features from a corpus, and train an off-the-shelf machine learning\nalgorithm using those features to do text classification.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/0b1fb53982abad5412d2e68dadf17f4d6f98a92102d160acbb70d961e8f98bed> .
_:Nd4a5286e67e845ac855046c0075c90f2 <http://schema.org/explain> "The lecture covers foundational topics but lacks substantial coverage of advanced NLP areas like stochastic grammars, semantic representations, and deep learning." <http://groq.org/0b1fb53982abad5412d2e68dadf17f4d6f98a92102d160acbb70d961e8f98bed> .
_:Nd4a5286e67e845ac855046c0075c90f2 <http://schema.org/answer> "0" <http://groq.org/0b1fb53982abad5412d2e68dadf17f4d6f98a92102d160acbb70d961e8f98bed> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU020" <http://groq.org/0b1fb53982abad5412d2e68dadf17f4d6f98a92102d160acbb70d961e8f98bed> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/has_schema_type> _:Nd4a5286e67e845ac855046c0075c90f2 <http://groq.org/0b1fb53982abad5412d2e68dadf17f4d6f98a92102d160acbb70d961e8f98bed> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/has_schema_type> _:Naf45c84c514641af874eca82c50baf56 <http://groq.org/becfe67cf9384ee594f139e62b1d67874201a515ef0f59596a65817acfb074cc> .
_:Naf45c84c514641af874eca82c50baf56 <http://schema.org/explain> "Lecture focuses on inheritance/polymorphism but lacks coverage of dynamic dispatch, encapsulation details, composition, subtyping, and other KU components" <http://groq.org/becfe67cf9384ee594f139e62b1d67874201a515ef0f59596a65817acfb074cc> .
_:Naf45c84c514641af874eca82c50baf56 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/becfe67cf9384ee594f139e62b1d67874201a515ef0f59596a65817acfb074cc> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/becfe67cf9384ee594f139e62b1d67874201a515ef0f59596a65817acfb074cc> .
_:Naf45c84c514641af874eca82c50baf56 <http://schema.org/answer> "0" <http://groq.org/becfe67cf9384ee594f139e62b1d67874201a515ef0f59596a65817acfb074cc> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Programmation à Objets Objectif: (résultats d'apprentissage) Connaître les mécanismes d’héritage et de polymorphisme Course content: Classes abstraites Course name: http://example.org/course/UE_XLG3IU030</page1>\n        <page2>Pages: 130-131 HOURS CS Core = 4 + 1 (SDF) KA Core = 1 FPL-OOP: Object-\nOriented Programming CS Core: 1\\. Imperative programming as a subset of\nobject-oriented programming. 2\\. Object-oriented design: a. Decomposition into\nobjects carrying state and having behavior. b. Class-hierarchy design for\nmodeling. 3\\. Definition of classes: fields, methods, and constructors. (See\nalso: SDF-Fundamentals) 4\\. Subclasses, inheritance (including multiple\ninheritance), and method overriding. 5\\. Dynamic dispatch: definition of\nmethod-call. 6\\. Exception handling. (See also: SDF-Fundamentals, PDC-\nCoordination, SE-Construction) 7\\. Object-oriented idioms for encapsulation:\na. Privacy, data hiding, and visibility of class members. b. Interfaces\nrevealing only method signatures. c. Abstract base classes, traits and mixins.\n8\\. Dynamic vs static properties. 9\\. Composition vs inheritance. 10\\.\nSubtyping: a. Subtype polymorphism; implicit upcasts in typed languages. b.\nNotion of behavioral replacement: subtypes acting like supertype. c.\nRelationship between subtyping and inheritance. KA Core: 11\\. Collection\nclasses, iterators, and other common library components. 12\\. Metaprogramming\nand reflection. Illustrative Learning Outcomes: CS Core: 1\\. Enumerate the\ndifferences between imperative and object-oriented programming paradigms. 2\\.\nCompose a class through design, implementation, and testing to meet behavioral\nrequirements. 3\\. Build a simple class hierarchy utilizing subclassing that\nallows code to be reused for distinct subclasses. 4\\. Predict and validate\ncontrol flow in a program using dynamic dispatch. 5\\. Compare and contrast how\ncomputational solutions to a problem differ in procedural, functional, and\nobject-oriented approaches. 6\\. Compare and contrast mechanisms to define and\nprotect data elements within procedural, functional, and object-oriented\napproaches. 7\\. Compare and contrast the benefits and costs/impact of using\ninheritance (subclasses) and composition (specifically, how to base\ncomposition on higher order functions). 8\\. Explain the relationship between\nobject-oriented inheritance (code-sharing and overriding) and subtyping (the\nidea of a subtype being usable in a context that expects the supertype). 9\\.\nUse object-oriented encapsulation mechanisms such as interfaces and private\nmembers. 10\\. Define and use iterators and other operations on aggregates,\nincluding operations that take functions as arguments, in multiple programming\nlanguages, selecting the most natural idioms for each language. (See also:\nFPL-Functional) KA Core: 11\\. Use collection classes and iterators effectively\nto solve a problem.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/becfe67cf9384ee594f139e62b1d67874201a515ef0f59596a65817acfb074cc> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU030" <http://groq.org/becfe67cf9384ee594f139e62b1d67874201a515ef0f59596a65817acfb074cc> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU010" <http://groq.org/559d7d9e957f6a092b8b82bff36eb368786394f1a130a747e006f0ac087e8042> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/has_schema_type> _:N53e9c02c50314041b2fd46897c31a182 <http://groq.org/559d7d9e957f6a092b8b82bff36eb368786394f1a130a747e006f0ac087e8042> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/559d7d9e957f6a092b8b82bff36eb368786394f1a130a747e006f0ac087e8042> .
_:N53e9c02c50314041b2fd46897c31a182 <http://schema.org/explain> "Lecture focuses on teaching methods and professional insertion, while KU covers formal methods in software engineering. Topics do not align." <http://groq.org/559d7d9e957f6a092b8b82bff36eb368786394f1a130a747e006f0ac087e8042> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/559d7d9e957f6a092b8b82bff36eb368786394f1a130a747e006f0ac087e8042> .
_:N53e9c02c50314041b2fd46897c31a182 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/559d7d9e957f6a092b8b82bff36eb368786394f1a130a747e006f0ac087e8042> .
_:N53e9c02c50314041b2fd46897c31a182 <http://schema.org/answer> "0" <http://groq.org/559d7d9e957f6a092b8b82bff36eb368786394f1a130a747e006f0ac087e8042> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/79ee1dd94f7f5986f33889b4b1fce3779c2d3a575451a512da17d2a3dd5e627c> .
_:N9643c5d2f66c4919af176a50b5a1ea0a <http://schema.org/answer> "0" <http://groq.org/79ee1dd94f7f5986f33889b4b1fce3779c2d3a575451a512da17d2a3dd5e627c> .
_:N9643c5d2f66c4919af176a50b5a1ea0a <http://schema.org/explain> "Lecture focuses on teaching methods, not graphics/visualization technical content." <http://groq.org/79ee1dd94f7f5986f33889b4b1fce3779c2d3a575451a512da17d2a3dd5e627c> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/has_schema_type> _:N9643c5d2f66c4919af176a50b5a1ea0a <http://groq.org/79ee1dd94f7f5986f33889b4b1fce3779c2d3a575451a512da17d2a3dd5e627c> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU030" <http://groq.org/79ee1dd94f7f5986f33889b4b1fce3779c2d3a575451a512da17d2a3dd5e627c> .
_:N9643c5d2f66c4919af176a50b5a1ea0a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/79ee1dd94f7f5986f33889b4b1fce3779c2d3a575451a512da17d2a3dd5e627c> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU030</page1>\n        <page2>Pages: 150-151 HOURS CS Core = 3 KA Core = 2 GIT-Fundamentals: Fundamental\nConcepts CS Core: 1\\. Overview of graphics and visualization. 2\\. Basic\ngraphics pipeline architecture. 3\\. 2D and 3D transformations. 4\\.\nRasterization and rendering techniques. 5\\. Fundamental shading models. KA\nCore: 6\\. Advanced rendering techniques. 7\\. Applications of visualization in\ndifferent fields. 8\\. Interaction methods for graphical environments.\nIllustrative Learning Outcomes: 1\\. Explain the graphics rendering pipeline.\n2\\. Differentiate between rasterization and ray tracing. 3\\. Apply\ntransformations to 2D and 3D models.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/79ee1dd94f7f5986f33889b4b1fce3779c2d3a575451a512da17d2a3dd5e627c> .
_:Nd68841a631944f34996690558c9ade60 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/ebd92e0492237886f197563898f37a0cc0129f3e50f741d63cfbfa10465fd5ce> .
_:Nd68841a631944f34996690558c9ade60 <http://schema.org/explain> "The lecture covers 7 out of 8 learning outcomes and 4 out of 5 fundamental concepts, substantially covering the knowledge described in the KU." <http://groq.org/ebd92e0492237886f197563898f37a0cc0129f3e50f741d63cfbfa10465fd5ce> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU030" <http://groq.org/ebd92e0492237886f197563898f37a0cc0129f3e50f741d63cfbfa10465fd5ce> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/ebd92e0492237886f197563898f37a0cc0129f3e50f741d63cfbfa10465fd5ce> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU030</page1>\n        <page2>Pages: 150-151 HOURS CS Core = 3 KA Core = 2 GIT-Fundamentals: Fundamental\nConcepts CS Core: 1\\. Overview of graphics and visualization. 2\\. Basic\ngraphics pipeline architecture. 3\\. 2D and 3D transformations. 4\\.\nRasterization and rendering techniques. 5\\. Fundamental shading models. KA\nCore: 6\\. Advanced rendering techniques. 7\\. Applications of visualization in\ndifferent fields. 8\\. Interaction methods for graphical environments.\nIllustrative Learning Outcomes: 1\\. Explain the graphics rendering pipeline.\n2\\. Differentiate between rasterization and ray tracing. 3\\. Apply\ntransformations to 2D and 3D models.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/ebd92e0492237886f197563898f37a0cc0129f3e50f741d63cfbfa10465fd5ce> .
_:Nd68841a631944f34996690558c9ade60 <http://schema.org/answer> "1" <http://groq.org/ebd92e0492237886f197563898f37a0cc0129f3e50f741d63cfbfa10465fd5ce> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/has_schema_type> _:Nd68841a631944f34996690558c9ade60 <http://groq.org/ebd92e0492237886f197563898f37a0cc0129f3e50f741d63cfbfa10465fd5ce> .
_:Nf2a4fdce3a3c42aa997705ea8526cd39 <http://schema.org/answer> "1" <http://groq.org/f7b0fb90fe2da4f0a5cfd2210b60aa59776b5f763ba867e2de1890b95bd6f6a1> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU010" <http://groq.org/f7b0fb90fe2da4f0a5cfd2210b60aa59776b5f763ba867e2de1890b95bd6f6a1> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 1 Objectif: (résultats d'apprentissage)\n•\nÉvaluer une implémentation de structure de données en temps et en place mémoire (coûts minimal,\nmaximal, amorti)\n• Course content: et mise en pratique dans l’approche de résolution de problèmes « Diviser pour régner ». Course name: http://example.org/course/UE_XLG3IU010</page1>\n        <page2>Pages:88-90 HOURS CS Core = 11 KA Core = 6 AL-Foundational: Foundational Data\nStructures and Algorithms CS Core: (See also: SDF-Data-Structures, SDF-\nAlgorithms) 1\\. Abstract Data Type (ADT) and operations on an ADT (See also:\nFPL-Types) a. Dictionary operations (insert, delete, find) 2\\. Arrays a.\nNumeric vs non-numeric, character strings b. Single (vector) vs\nmultidimensional (matrix) 3\\. Records/Structs/Tuples and Objects (See also:\nFPL-OOP) 4\\. Linked lists (for historical reasons) a. Single vs Double and\nLinear vs Circular 5\\. Stacks 6\\. Queues and deques a. Heap-based priority\nqueue 7\\. Hash tables/maps a. Collision resolution and complexity (e.g.,\nprobing, chaining, rehash) 8\\. Graphs (e.g., [un]directed, [a]cyclic,\n[un]connected, and [un]weighted) (See also: MSF-Discrete) a. Graph\nrepresentation: adjacency list vs matrix 9\\. Trees (See also: MSF-Discrete) a.\nBinary, n-ary, and search trees b. Balanced (e.g., AVL, Red-Black, Heap) 10\\.\nSets (See also: MSF-Discrete) 11\\. Search algorithms a. O(n) complexity (e.g.,\nlinear/sequential array/list search) b. O(log2 n) complexity (e.g., binary\nsearch) c. O(logb n) complexity (e.g., uninformed depth/breadth-first tree\nsearch) 12\\. Sorting algorithms (e.g., stable, unstable) a. O(n2) complexity\n(e.g., insertion, selection), b. O(n log n) complexity (e.g., quicksort,\nmerge, timsort) 13\\. Graph algorithms a. Shortest path (e.g., Dijkstra's,\nFloyd's) b. Minimal spanning tree (e.g., Prim's, Kruskal's) KA Core: 14\\.\nSorting algorithms a. O(n log n) complexity heapsort b. Pseudo O(n) complexity\n(e.g., bucket, counting, radix) 15\\. Graph algorithms a. Transitive closure\n(e.g., Warshall's) b. Topological sort 16\\. Matching a. Efficient string\nmatching (e.g., Boyer-Moore, Knuth-Morris-Pratt) b. Longest common subsequence\nmatching c. Regular expression matching Non-core: 17\\. Cryptography algorithms\n(e.g., SHA-256) (See also: SEC-Crypto) 18\\. Parallel algorithms (See also:\nPDC-Algorithms, FPL-Parallel) 19\\. Consensus algorithms (e.g., Blockchain)\n(See also: SEC-Crypto) a. Proof of work vs proof of stake (See also: SEP-\nSustainability) 20\\. Quantum computing algorithms (See also: AL-Models, AR-\nQuantum) a. Oracle-based (e.g., Deutsch-Jozsa, Bernstein-Vazirani, Simon) b.\nSuperpolynomial speed-up via QFT (e.g., Shor's) c. Polynomial speed-up via\namplitude amplification (e.g., Grover's) 21\\. Fast-Fourier Transform (FFT)\nalgorithm 22\\. Differential evolution algorithm Illustrative Learning\nOutcomes: CS Core: 1\\. For each ADT/Data-Structure in this unit a. Explain its\ndefinition, properties, representation(s), and associated ADT operations. b.\nExplain step-by-step how the ADT operations associated with the data structure\ntransform it. 2\\. For each algorithm in this unit explain step-by-step how the\nalgorithm operates. 3\\. For each algorithmic approach (e.g., sorting) in this\nunit apply a prototypical example of the approach (e.g., merge sort). 90 4\\.\nGiven requirements for a problem, develop multiple solutions using various\ndata structures and algorithms. Subsequently, evaluate the suitability,\nstrengths, and weaknesses selecting an approach that best satisfies the\nrequirements. 5\\. Explain how collision avoidance and collision resolution is\nhandled in hash tables. 6\\. Explain factors beyond computational efficiency\nthat influence the choice of algorithms, such as programming time,\nmaintainability, and the use of application-specific patterns in the input\ndata. 7\\. Explain the heap property and the use of heaps as an implementation\nof a priority queue. KA Core: 8\\. For each of the algorithms and algorithmic\napproaches in the KA Core topics: a. Explain a prototypical example of the\nalgorithm, and b. Explain step-by-step how the algorithm operates. Non-core:\n9\\. An appreciation of quantum computation and its application to certain\nproblems.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/f7b0fb90fe2da4f0a5cfd2210b60aa59776b5f763ba867e2de1890b95bd6f6a1> .
_:Nf2a4fdce3a3c42aa997705ea8526cd39 <http://schema.org/explain> "The lecture covers a significant portion of the KU, including data structures, algorithms, and their applications, with a focus on computer science core topics." <http://groq.org/f7b0fb90fe2da4f0a5cfd2210b60aa59776b5f763ba867e2de1890b95bd6f6a1> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/has_schema_type> _:Nf2a4fdce3a3c42aa997705ea8526cd39 <http://groq.org/f7b0fb90fe2da4f0a5cfd2210b60aa59776b5f763ba867e2de1890b95bd6f6a1> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/f7b0fb90fe2da4f0a5cfd2210b60aa59776b5f763ba867e2de1890b95bd6f6a1> .
_:Nf2a4fdce3a3c42aa997705ea8526cd39 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/f7b0fb90fe2da4f0a5cfd2210b60aa59776b5f763ba867e2de1890b95bd6f6a1> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/fbf4ec78a43b7943c976bdb8b63b708f01dd5344469a5409e700c592e8d32ae3> .
_:N3fbafa37ff0345ceabfe8ee16b095d0d <http://schema.org/answer> "0" <http://groq.org/fbf4ec78a43b7943c976bdb8b63b708f01dd5344469a5409e700c592e8d32ae3> .
_:N3fbafa37ff0345ceabfe8ee16b095d0d <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/fbf4ec78a43b7943c976bdb8b63b708f01dd5344469a5409e700c592e8d32ae3> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU030" <http://groq.org/fbf4ec78a43b7943c976bdb8b63b708f01dd5344469a5409e700c592e8d32ae3> .
_:N3fbafa37ff0345ceabfe8ee16b095d0d <http://schema.org/explain> "The lecture does not cover the specific topics of the KU." <http://groq.org/fbf4ec78a43b7943c976bdb8b63b708f01dd5344469a5409e700c592e8d32ae3> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/has_schema_type> _:N3fbafa37ff0345ceabfe8ee16b095d0d <http://groq.org/fbf4ec78a43b7943c976bdb8b63b708f01dd5344469a5409e700c592e8d32ae3> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU030</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/fbf4ec78a43b7943c976bdb8b63b708f01dd5344469a5409e700c592e8d32ae3> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/e9ed2b91df29350e70db39745ad4ff33953c2aa9bd2c889c1e95342e106c488c> .
_:Ne218b230041f449194147f6d325e1d27 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/e9ed2b91df29350e70db39745ad4ff33953c2aa9bd2c889c1e95342e106c488c> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/has_schema_type> _:Ne218b230041f449194147f6d325e1d27 <http://groq.org/e9ed2b91df29350e70db39745ad4ff33953c2aa9bd2c889c1e95342e106c488c> .
_:Ne218b230041f449194147f6d325e1d27 <http://schema.org/answer> "0" <http://groq.org/e9ed2b91df29350e70db39745ad4ff33953c2aa9bd2c889c1e95342e106c488c> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Langages et automates Objectif: (résultats d'apprentissage)\n5. Course content: • Langages algébriques\n- Grammaire algébrique\n- Arbre de dérivation\n- Automates à pile\n• Hiérarchie de Chomsky\n- Classification des grammaires;\n- Algorithmes de reconnaissance pour les grammaires de type 1 et 2\n• Analyse lexicale et syntaxique\n- TP de flex et bison Course name: http://example.org/course/UE_XLG4IU020</page1>\n        <page2>Pages: 145-146 HOURS CS Core = 0 KA Core = 0 FPL-Formalism: Formal Semantics\nNon-core: 1\\. Syntax vs semantics 2\\. Approaches to semantics: axiomatic,\noperational, denotational, type-based 3\\. Axiomatic semantics of abstract\nconstructs such as assignment, selection, iteration using precondition, post-\nconditions, and loop invariant 4\\. Operational semantics analysis of abstract\nconstructs and sequence of such as assignment, expression evaluation,\nselection, iteration using environment and store a. Symbolic execution b.\nConstraint checkers 5\\. Denotational semantics a. Lambda Calculus. (See also:\nAL-Models, FPL-Functional) 6\\. Proofs by induction over language semantics 7\\.\nFormal definitions and proofs for type systems (See also: FPL-Types) a.\nPropositions as types (implication as a function, conjunction as a product,\ndisjunction as a sum) b. Dependent types (universal quantification as\ndependent function, existential quantification as dependent product) c.\nParametricity Illustrative learning outcomes: Non-core: 1\\. Construct formal\nsemantics for a small language. 2\\. Write a lambda-calculus program and show\nits evaluation to a normal form. 3\\. Discuss the different approaches of\noperational, denotational, and axiomatic semantics. 4\\. Use induction to prove\nproperties of all programs in a language. 5\\. Use induction to prove\nproperties of all programs in a language that is well-typed according to a\nformally defined type system. 6\\. Use parametricity to establish the behavior\nof code given only its type.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/e9ed2b91df29350e70db39745ad4ff33953c2aa9bd2c889c1e95342e106c488c> .
_:Ne218b230041f449194147f6d325e1d27 <http://schema.org/explain> "The lecture focuses on formal languages and automata (syntax), while the KU covers formal semantics and type systems." <http://groq.org/e9ed2b91df29350e70db39745ad4ff33953c2aa9bd2c889c1e95342e106c488c> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU020" <http://groq.org/e9ed2b91df29350e70db39745ad4ff33953c2aa9bd2c889c1e95342e106c488c> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU030</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/1f22f73f2390601086161b062e981e8f293780a032b2ae799db4cfe702972a89> .
_:N5318aa7f84a9453299e7b2d3a688009c <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/1f22f73f2390601086161b062e981e8f293780a032b2ae799db4cfe702972a89> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/1f22f73f2390601086161b062e981e8f293780a032b2ae799db4cfe702972a89> .
_:N5318aa7f84a9453299e7b2d3a688009c <http://schema.org/answer> "0" <http://groq.org/1f22f73f2390601086161b062e981e8f293780a032b2ae799db4cfe702972a89> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/has_schema_type> _:N5318aa7f84a9453299e7b2d3a688009c <http://groq.org/1f22f73f2390601086161b062e981e8f293780a032b2ae799db4cfe702972a89> .
_:N5318aa7f84a9453299e7b2d3a688009c <http://schema.org/explain> "Lecture focuses on teaching methods, while KU covers formal methods in SE; topics unrelated." <http://groq.org/1f22f73f2390601086161b062e981e8f293780a032b2ae799db4cfe702972a89> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU030" <http://groq.org/1f22f73f2390601086161b062e981e8f293780a032b2ae799db4cfe702972a89> .
_:N70bb7e2a9a114df8819f52eaf49aaa1d <http://example.org/has_score> "0.65625584"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/1e862242dea1831f50cf0ef4ac9ebb5b13a80c2ca899ed57572c64dacd9364fe> .
_:N70bb7e2a9a114df8819f52eaf49aaa1d <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Project_Management.txt> <http://faiss.org/1e862242dea1831f50cf0ef4ac9ebb5b13a80c2ca899ed57572c64dacd9364fe> .
_:N7966478a218f4a94b91cb6f703e3e294 <http://example.org/has_score> "0.651711"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/1e862242dea1831f50cf0ef4ac9ebb5b13a80c2ca899ed57572c64dacd9364fe> .
_:Nb73ab21fffce4ca3b40c8f3d3fb83286 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://faiss.org/1e862242dea1831f50cf0ef4ac9ebb5b13a80c2ca899ed57572c64dacd9364fe> .
_:N7966478a218f4a94b91cb6f703e3e294 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Testing_and_Quality_Assurance.txt> <http://faiss.org/1e862242dea1831f50cf0ef4ac9ebb5b13a80c2ca899ed57572c64dacd9364fe> .
<http://example.org/faiss> <http://example.org/input> "Label: Methodologie et insertion professionnelle S4 Objectif: (résultats d'apprentissage)\nfaire et savoir-être) et d'un plan d'actions sur les prochaines années : à l'écrit et à l'oral\n- d'identitier et d'animer son réseau (professionnel et élargi)\n- de créer et de faire vivre ses profils numériques professionnels\n- de mener une enquête métier auprès d'un professionnel et de la restituer Course content: - présentation orale de la restitution de l'enquête et des recherches sur le métier\n- équivalent de 8 TD + présentation orale des enquêtes:\n- identication de ses valeurs\n- indentification de ses compétences\n- consrtruction de son projet professionnel et personnel\n- présentation de son projet Course name: http://example.org/course/UE_XLG4TU010" <http://faiss.org/1e862242dea1831f50cf0ef4ac9ebb5b13a80c2ca899ed57572c64dacd9364fe> .
_:Nb73ab21fffce4ca3b40c8f3d3fb83286 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/1e862242dea1831f50cf0ef4ac9ebb5b13a80c2ca899ed57572c64dacd9364fe> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/is_aligned_with> _:Nb73ab21fffce4ca3b40c8f3d3fb83286 <http://faiss.org/1e862242dea1831f50cf0ef4ac9ebb5b13a80c2ca899ed57572c64dacd9364fe> .
_:N70bb7e2a9a114df8819f52eaf49aaa1d <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Project Management: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Project Management.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/1e862242dea1831f50cf0ef4ac9ebb5b13a80c2ca899ed57572c64dacd9364fe> .
_:N7966478a218f4a94b91cb6f703e3e294 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Testing and Quality Assurance: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Testing and Quality Assurance.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/1e862242dea1831f50cf0ef4ac9ebb5b13a80c2ca899ed57572c64dacd9364fe> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/is_aligned_with> _:N70bb7e2a9a114df8819f52eaf49aaa1d <http://faiss.org/1e862242dea1831f50cf0ef4ac9ebb5b13a80c2ca899ed57572c64dacd9364fe> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/is_aligned_with> _:N7966478a218f4a94b91cb6f703e3e294 <http://faiss.org/1e862242dea1831f50cf0ef4ac9ebb5b13a80c2ca899ed57572c64dacd9364fe> .
_:Nb73ab21fffce4ca3b40c8f3d3fb83286 <http://example.org/has_score> "0.6704163"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/1e862242dea1831f50cf0ef4ac9ebb5b13a80c2ca899ed57572c64dacd9364fe> .
_:N1e6b366c991f4c8b823ed2c4d7bb35a3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/928fa4e60b17b03c4688139ab3dbdd86ffa5d9601565c00c0e68dbb62d681e65> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 2 Objectif: (résultats d'apprentissage)\ndonnées (itératifs et récursifs) Course content: Structures de données non-linéaires associatives (table associative, ensemble, classe-union) Course name: http://example.org/course/UE_XLG4IU010</page1>\n        <page2>Pages:88-90 HOURS CS Core = 11 KA Core = 6 AL-Foundational: Foundational Data\nStructures and Algorithms CS Core: (See also: SDF-Data-Structures, SDF-\nAlgorithms) 1\\. Abstract Data Type (ADT) and operations on an ADT (See also:\nFPL-Types) a. Dictionary operations (insert, delete, find) 2\\. Arrays a.\nNumeric vs non-numeric, character strings b. Single (vector) vs\nmultidimensional (matrix) 3\\. Records/Structs/Tuples and Objects (See also:\nFPL-OOP) 4\\. Linked lists (for historical reasons) a. Single vs Double and\nLinear vs Circular 5\\. Stacks 6\\. Queues and deques a. Heap-based priority\nqueue 7\\. Hash tables/maps a. Collision resolution and complexity (e.g.,\nprobing, chaining, rehash) 8\\. Graphs (e.g., [un]directed, [a]cyclic,\n[un]connected, and [un]weighted) (See also: MSF-Discrete) a. Graph\nrepresentation: adjacency list vs matrix 9\\. Trees (See also: MSF-Discrete) a.\nBinary, n-ary, and search trees b. Balanced (e.g., AVL, Red-Black, Heap) 10\\.\nSets (See also: MSF-Discrete) 11\\. Search algorithms a. O(n) complexity (e.g.,\nlinear/sequential array/list search) b. O(log2 n) complexity (e.g., binary\nsearch) c. O(logb n) complexity (e.g., uninformed depth/breadth-first tree\nsearch) 12\\. Sorting algorithms (e.g., stable, unstable) a. O(n2) complexity\n(e.g., insertion, selection), b. O(n log n) complexity (e.g., quicksort,\nmerge, timsort) 13\\. Graph algorithms a. Shortest path (e.g., Dijkstra's,\nFloyd's) b. Minimal spanning tree (e.g., Prim's, Kruskal's) KA Core: 14\\.\nSorting algorithms a. O(n log n) complexity heapsort b. Pseudo O(n) complexity\n(e.g., bucket, counting, radix) 15\\. Graph algorithms a. Transitive closure\n(e.g., Warshall's) b. Topological sort 16\\. Matching a. Efficient string\nmatching (e.g., Boyer-Moore, Knuth-Morris-Pratt) b. Longest common subsequence\nmatching c. Regular expression matching Non-core: 17\\. Cryptography algorithms\n(e.g., SHA-256) (See also: SEC-Crypto) 18\\. Parallel algorithms (See also:\nPDC-Algorithms, FPL-Parallel) 19\\. Consensus algorithms (e.g., Blockchain)\n(See also: SEC-Crypto) a. Proof of work vs proof of stake (See also: SEP-\nSustainability) 20\\. Quantum computing algorithms (See also: AL-Models, AR-\nQuantum) a. Oracle-based (e.g., Deutsch-Jozsa, Bernstein-Vazirani, Simon) b.\nSuperpolynomial speed-up via QFT (e.g., Shor's) c. Polynomial speed-up via\namplitude amplification (e.g., Grover's) 21\\. Fast-Fourier Transform (FFT)\nalgorithm 22\\. Differential evolution algorithm Illustrative Learning\nOutcomes: CS Core: 1\\. For each ADT/Data-Structure in this unit a. Explain its\ndefinition, properties, representation(s), and associated ADT operations. b.\nExplain step-by-step how the ADT operations associated with the data structure\ntransform it. 2\\. For each algorithm in this unit explain step-by-step how the\nalgorithm operates. 3\\. For each algorithmic approach (e.g., sorting) in this\nunit apply a prototypical example of the approach (e.g., merge sort). 90 4\\.\nGiven requirements for a problem, develop multiple solutions using various\ndata structures and algorithms. Subsequently, evaluate the suitability,\nstrengths, and weaknesses selecting an approach that best satisfies the\nrequirements. 5\\. Explain how collision avoidance and collision resolution is\nhandled in hash tables. 6\\. Explain factors beyond computational efficiency\nthat influence the choice of algorithms, such as programming time,\nmaintainability, and the use of application-specific patterns in the input\ndata. 7\\. Explain the heap property and the use of heaps as an implementation\nof a priority queue. KA Core: 8\\. For each of the algorithms and algorithmic\napproaches in the KA Core topics: a. Explain a prototypical example of the\nalgorithm, and b. Explain step-by-step how the algorithm operates. Non-core:\n9\\. An appreciation of quantum computation and its application to certain\nproblems.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/928fa4e60b17b03c4688139ab3dbdd86ffa5d9601565c00c0e68dbb62d681e65> .
_:N1e6b366c991f4c8b823ed2c4d7bb35a3 <http://schema.org/answer> "1" <http://groq.org/928fa4e60b17b03c4688139ab3dbdd86ffa5d9601565c00c0e68dbb62d681e65> .
_:N1e6b366c991f4c8b823ed2c4d7bb35a3 <http://schema.org/explain> "The lecture covers a significant portion of the KU, including data structures and algorithms, with a focus on abstract data types, arrays, linked lists, stacks, queues, hash tables, graphs, trees, and sets." <http://groq.org/928fa4e60b17b03c4688139ab3dbdd86ffa5d9601565c00c0e68dbb62d681e65> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU010" <http://groq.org/928fa4e60b17b03c4688139ab3dbdd86ffa5d9601565c00c0e68dbb62d681e65> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/928fa4e60b17b03c4688139ab3dbdd86ffa5d9601565c00c0e68dbb62d681e65> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/has_schema_type> _:N1e6b366c991f4c8b823ed2c4d7bb35a3 <http://groq.org/928fa4e60b17b03c4688139ab3dbdd86ffa5d9601565c00c0e68dbb62d681e65> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/fe6a168ee7c0cfd698a956003a874f1d17ee839d2d03f7643a05e01f2d16fa0b> .
_:N64a6354ba6af45b49035f5fa8d5fc83f <http://schema.org/answer> "1" <http://groq.org/fe6a168ee7c0cfd698a956003a874f1d17ee839d2d03f7643a05e01f2d16fa0b> .
_:N64a6354ba6af45b49035f5fa8d5fc83f <http://schema.org/explain> "The lecture covers key areas like algebraic languages, Chomsky hierarchy, and parser generation, which are central to the KU, indicating substantial coverage." <http://groq.org/fe6a168ee7c0cfd698a956003a874f1d17ee839d2d03f7643a05e01f2d16fa0b> .
_:N64a6354ba6af45b49035f5fa8d5fc83f <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/fe6a168ee7c0cfd698a956003a874f1d17ee839d2d03f7643a05e01f2d16fa0b> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Langages et automates Objectif: (résultats d'apprentissage)\n5. Course content: • Langages algébriques\n- Grammaire algébrique\n- Arbre de dérivation\n- Automates à pile\n• Hiérarchie de Chomsky\n- Classification des grammaires;\n- Algorithmes de reconnaissance pour les grammaires de type 1 et 2\n• Analyse lexicale et syntaxique\n- TP de flex et bison Course name: http://example.org/course/UE_XLG4IU020</page1>\n        <page2>Pages: 141 HOURS CS Core = 0 KA Core = 0 FPL-Syntax: Syntax Analysis Non-core:\n1\\. Regular grammars vs context-free grammars (See also: AL-Models) 2\\.\nScanning and parsing based on language specifications 3\\. Lexical analysis\nusing regular expressions 4\\. Tokens and their use 5\\. Parsing strategies\nincluding top-down (e.g., recursive descent, or LL) and bottom-up (e.g., LR or\nGLR) techniques a. Lookahead tables and their application to parsing 6\\.\nLanguage theory: a. Chomsky hierarchy (See also: AL-Models) b. Left-\nmost/right-most derivation and ambiguity c. Grammar transformation 7\\. Parser\nerror recovery mechanisms 8\\. Generating scanners and parsers from declarative\nspecifications Illustrative learning outcomes: Non-core: 1\\. Use formal\ngrammars to specify the syntax of languages. 2\\. Illustrate the role of\nlookahead tables in parsing. 3\\. Use declarative tools to generate parsers and\nscanners. 4\\. Recognize key issues in syntax definitions: ambiguity,\nassociativity, precedence.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/fe6a168ee7c0cfd698a956003a874f1d17ee839d2d03f7643a05e01f2d16fa0b> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU020" <http://groq.org/fe6a168ee7c0cfd698a956003a874f1d17ee839d2d03f7643a05e01f2d16fa0b> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/has_schema_type> _:N64a6354ba6af45b49035f5fa8d5fc83f <http://groq.org/fe6a168ee7c0cfd698a956003a874f1d17ee839d2d03f7643a05e01f2d16fa0b> .
_:Nd41e10ac0e684c9bbb67eeeaf4ff56a5 <http://example.org/has_score> "0.6696042"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/7d109d722d3e49df308c2525a555f8d1972eb9bc8fc1a49283b1d559e7d39cc3> .
_:Nd41e10ac0e684c9bbb67eeeaf4ff56a5 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Architecture_and_Organization_AR/AR-Representation_Machine-Level_Data_Representation.txt> <http://faiss.org/7d109d722d3e49df308c2525a555f8d1972eb9bc8fc1a49283b1d559e7d39cc3> .
_:N265e901680ec48e399482b21d4a2dd8a <http://example.org/has_score> "0.6700623"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/7d109d722d3e49df308c2525a555f8d1972eb9bc8fc1a49283b1d559e7d39cc3> .
<http://example.org/course/UE_XLG4IU060> <http://example.org/is_aligned_with> _:N6b46324d418c4b04aa452dedf5082f88 <http://faiss.org/7d109d722d3e49df308c2525a555f8d1972eb9bc8fc1a49283b1d559e7d39cc3> .
_:N265e901680ec48e399482b21d4a2dd8a <http://example.org/has_chunk> ". Parametricity\nIllustrative learning outcomes:\nNon-core:\n1. Construct formal semantics for a small language.\n2. Write a lambda-calculus program and show its evaluation to a normal form.\n3. Discuss the different approaches of operational, denotational, and axiomatic semantics.\n4. Use induction to prove properties of all programs in a language.\n5. Use induction to prove properties of all programs in a language that is well-typed according to a\nformally defined type system.\n6" <http://faiss.org/7d109d722d3e49df308c2525a555f8d1972eb9bc8fc1a49283b1d559e7d39cc3> .
<http://example.org/course/UE_XLG4IU060> <http://example.org/is_aligned_with> _:Nd41e10ac0e684c9bbb67eeeaf4ff56a5 <http://faiss.org/7d109d722d3e49df308c2525a555f8d1972eb9bc8fc1a49283b1d559e7d39cc3> .
<http://example.org/faiss> <http://example.org/input> "Label: Création numérique Objectif: (résultats d'apprentissage)\n- lister les principaux formats compris par les outils de création (Connaissance) ;\n- estimer les conséquences de choix de format sur la création (Analyse) ;\n- décrire les principaux paradigmes de création numérique (connaissance) ;\n- programmer une application de création numérique répondant à un cahier des\ncharges (Application) ;\n- concevoir un algorithme engendrant une création dans un format imposé (Application) ; Course content: - principaux supports de création numérique et limitations associées (bitmap,vectoriel, 2D, 3D,\ndécoupes, impressions, machine outils numériques,etc.);\n- principaux formats compris par les outils de création et les conséquences sur la création;\n- paradigmes de création numérique (impératif, événementiel, émergeant, etc.); Course name: http://example.org/course/UE_XLG4IU060" <http://faiss.org/7d109d722d3e49df308c2525a555f8d1972eb9bc8fc1a49283b1d559e7d39cc3> .
_:N6b46324d418c4b04aa452dedf5082f88 <http://example.org/has_chunk> "AR-Representation: Machine-Level Data Representation\nCS Core:\n1. Overview and history of computer architecture (See also: SPD-Game)\n2. Bits, bytes, and words\n3. Unsigned, signed and two’s complement representations\n4. Numeric data representation and number bases\na. Fixed-point\nb. Floating-point\n5. Representation of non-numeric data\n6. Representation of records, arrays and UTF data types (See also: AL-Foundational)\nIllustrative Learning Outcomes:\nCS Core:\n1" <http://faiss.org/7d109d722d3e49df308c2525a555f8d1972eb9bc8fc1a49283b1d559e7d39cc3> .
_:N6b46324d418c4b04aa452dedf5082f88 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Architecture_and_Organization_AR/AR-Representation_Machine-Level_Data_Representation.txt> <http://faiss.org/7d109d722d3e49df308c2525a555f8d1972eb9bc8fc1a49283b1d559e7d39cc3> .
_:N265e901680ec48e399482b21d4a2dd8a <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Formalism_Formal_Semantics.txt> <http://faiss.org/7d109d722d3e49df308c2525a555f8d1972eb9bc8fc1a49283b1d559e7d39cc3> .
<http://example.org/course/UE_XLG4IU060> <http://example.org/is_aligned_with> _:N265e901680ec48e399482b21d4a2dd8a <http://faiss.org/7d109d722d3e49df308c2525a555f8d1972eb9bc8fc1a49283b1d559e7d39cc3> .
_:Nd41e10ac0e684c9bbb67eeeaf4ff56a5 <http://example.org/has_chunk> ". Discuss why everything in computers are data, including instructions.\n2. Explain how fixed-length number representations can affect accuracy and precision.\n3. Describe how negative integers are stored in sign-magnitude and two’s-complement\nrepresentations.\n4. Discuss how different formats can represent numerical data.\n5. Explain the bit-level representation of non-numeric data, such as characters, strings, records, and\narrays.\n6. Translate numerical data from one format to another.\n7" <http://faiss.org/7d109d722d3e49df308c2525a555f8d1972eb9bc8fc1a49283b1d559e7d39cc3> .
_:N6b46324d418c4b04aa452dedf5082f88 <http://example.org/has_score> "0.6676548"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/7d109d722d3e49df308c2525a555f8d1972eb9bc8fc1a49283b1d559e7d39cc3> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/1bbfaf5dfba23cfe40c9a126bc2dbb8eaa4e0b7152f93d81c25420948e485668> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU010" <http://groq.org/1bbfaf5dfba23cfe40c9a126bc2dbb8eaa4e0b7152f93d81c25420948e485668> .
_:Nc7bbd4fdf0b14eb9b1a2d9ac0d51d398 <http://schema.org/explain> "The lecture focuses on teaching methodologies and professional integration, not covering GIT-3D Modeling or related technical topics." <http://groq.org/1bbfaf5dfba23cfe40c9a126bc2dbb8eaa4e0b7152f93d81c25420948e485668> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD GIT-3D Modeling: Core Concepts CS\nCore: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic 3\nKA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of GIT-3D Modeling.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/1bbfaf5dfba23cfe40c9a126bc2dbb8eaa4e0b7152f93d81c25420948e485668> .
_:Nc7bbd4fdf0b14eb9b1a2d9ac0d51d398 <http://schema.org/answer> "0" <http://groq.org/1bbfaf5dfba23cfe40c9a126bc2dbb8eaa4e0b7152f93d81c25420948e485668> .
_:Nc7bbd4fdf0b14eb9b1a2d9ac0d51d398 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/1bbfaf5dfba23cfe40c9a126bc2dbb8eaa4e0b7152f93d81c25420948e485668> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/has_schema_type> _:Nc7bbd4fdf0b14eb9b1a2d9ac0d51d398 <http://groq.org/1bbfaf5dfba23cfe40c9a126bc2dbb8eaa4e0b7152f93d81c25420948e485668> .
_:Nba46fc5d8828477ca09f28553c612c6e <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/a83a5d722d499bffac18066d3071520c6d13733ca8d0fabc56d55f0b0fb86401> .
_:Nba46fc5d8828477ca09f28553c612c6e <http://schema.org/explain> "Lecture focuses on OOP (inheritance/polymorphism), while KU covers logic programming (FOPL, unification, Horn clauses). No substantial overlap." <http://groq.org/a83a5d722d499bffac18066d3071520c6d13733ca8d0fabc56d55f0b0fb86401> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/a83a5d722d499bffac18066d3071520c6d13733ca8d0fabc56d55f0b0fb86401> .
<http://example.org/course/UE_XLG3IU030> <http://example.org/has_schema_type> _:Nba46fc5d8828477ca09f28553c612c6e <http://groq.org/a83a5d722d499bffac18066d3071520c6d13733ca8d0fabc56d55f0b0fb86401> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Programmation à Objets Objectif: (résultats d'apprentissage) Connaître les mécanismes d’héritage et de polymorphisme Course content: Classes abstraites Course name: http://example.org/course/UE_XLG3IU030</page1>\n        <page2>Pages: 133 HOURS CS Core = 0 KA Core = 2 + 1 (MSF) FPL-Logic: Logic\nProgramming KA Core: 1\\. Universal vs existential quantifiers. (See also: AI-\nLRR, MSF-Discrete) 2\\. First order predicate logic vs higher order logic. (See\nalso: AI-LRR, MSF-Discrete) 3\\. Expressing complex relations using logical\nconnectives and simpler relations. 4\\. Definitions of Horn clause, facts,\ngoals and subgoals. 5\\. Unification and unification algorithm; unification vs\nassertion vs expression evaluation. 6\\. Mixing relations with functions. (See\nalso: MSF-Discrete) 7\\. Cuts, backtracking, and non-determinism. 8\\. Closed-\nworld vs open-world assumptions. Non-core: 9\\. Memory overhead of variable\ncopying in handling iterative programs. 10\\. Programming constructs to store\npartial computation and pruning search trees. 11\\. Mixing functional\nprogramming and logic programming using concepts such as equational logic,\nnarrowing, residuation, and semantic unification. (See also: FPL-Functional)\n12\\. Higher-order, constraint, and inductive logic programming. (See also: AI-\nLRR) 13\\. Integration with other programming paradigms such as object-oriented\nprogramming. 14\\. Advance programming constructs such as difference-lists,\ncreating user defined data structures, set of, etc. Illustrative learning\noutcomes: KA Core: 1\\. Use a logic language to implement a conventional\nalgorithm. 2\\. Use a logic language to implement an algorithm employing\nimplicit search using clauses, relations, and cuts. 3\\. Use a simple\nillustrative example to show correspondence between First Order Predicate\nLogic (FOPL) and logic programs using Horn clauses. 4\\. Use examples to\nillustrate the unification algorithm and its role of parameter-passing in\nquery reduction. 5\\. Use simple logic programs interleaving relations,\nfunctions, and recursive programming such as factorial and Fibonacci numbers\nand simple complex relationships between entities and illustrate execution and\nparameter-passing using unification and backtracking. Non-core: 6\\. Illustrate\ncomputation of simple programs such as Fibonacci and show overhead of\nrecomputation, and then show how to improve execution overhead.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/a83a5d722d499bffac18066d3071520c6d13733ca8d0fabc56d55f0b0fb86401> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU030" <http://groq.org/a83a5d722d499bffac18066d3071520c6d13733ca8d0fabc56d55f0b0fb86401> .
_:Nba46fc5d8828477ca09f28553c612c6e <http://schema.org/answer> "0" <http://groq.org/a83a5d722d499bffac18066d3071520c6d13733ca8d0fabc56d55f0b0fb86401> .
_:Nc5b153aa9b524006aefc6f2fbf5fc42d <http://schema.org/explain> "The lecture focuses on specific aspects of data structures and algorithms but does not cover the full range of topics outlined in the KU." <http://groq.org/bc79e25e330192ba5b25c59dc288cbdafb9507cbffc999aaae48e8222edaf4fd> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/bc79e25e330192ba5b25c59dc288cbdafb9507cbffc999aaae48e8222edaf4fd> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/has_schema_type> _:Nc5b153aa9b524006aefc6f2fbf5fc42d <http://groq.org/bc79e25e330192ba5b25c59dc288cbdafb9507cbffc999aaae48e8222edaf4fd> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU010" <http://groq.org/bc79e25e330192ba5b25c59dc288cbdafb9507cbffc999aaae48e8222edaf4fd> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 1 Objectif: (résultats d'apprentissage)\n•\nÉvaluer une implémentation de structure de données en temps et en place mémoire (coûts minimal,\nmaximal, amorti)\n• Course content: et mise en pratique dans l’approche de résolution de problèmes « Diviser pour régner ». Course name: http://example.org/course/UE_XLG3IU010</page1>\n        <page2>Pages:88-90 HOURS CS Core = 11 KA Core = 6 AL-Foundational: Foundational Data\nStructures and Algorithms CS Core: (See also: SDF-Data-Structures, SDF-\nAlgorithms) 1\\. Abstract Data Type (ADT) and operations on an ADT (See also:\nFPL-Types) a. Dictionary operations (insert, delete, find) 2\\. Arrays a.\nNumeric vs non-numeric, character strings b. Single (vector) vs\nmultidimensional (matrix) 3\\. Records/Structs/Tuples and Objects (See also:\nFPL-OOP) 4\\. Linked lists (for historical reasons) a. Single vs Double and\nLinear vs Circular 5\\. Stacks 6\\. Queues and deques a. Heap-based priority\nqueue 7\\. Hash tables/maps a. Collision resolution and complexity (e.g.,\nprobing, chaining, rehash) 8\\. Graphs (e.g., [un]directed, [a]cyclic,\n[un]connected, and [un]weighted) (See also: MSF-Discrete) a. Graph\nrepresentation: adjacency list vs matrix 9\\. Trees (See also: MSF-Discrete) a.\nBinary, n-ary, and search trees b. Balanced (e.g., AVL, Red-Black, Heap) 10\\.\nSets (See also: MSF-Discrete) 11\\. Search algorithms a. O(n) complexity (e.g.,\nlinear/sequential array/list search) b. O(log2 n) complexity (e.g., binary\nsearch) c. O(logb n) complexity (e.g., uninformed depth/breadth-first tree\nsearch) 12\\. Sorting algorithms (e.g., stable, unstable) a. O(n2) complexity\n(e.g., insertion, selection), b. O(n log n) complexity (e.g., quicksort,\nmerge, timsort) 13\\. Graph algorithms a. Shortest path (e.g., Dijkstra's,\nFloyd's) b. Minimal spanning tree (e.g., Prim's, Kruskal's) KA Core: 14\\.\nSorting algorithms a. O(n log n) complexity heapsort b. Pseudo O(n) complexity\n(e.g., bucket, counting, radix) 15\\. Graph algorithms a. Transitive closure\n(e.g., Warshall's) b. Topological sort 16\\. Matching a. Efficient string\nmatching (e.g., Boyer-Moore, Knuth-Morris-Pratt) b. Longest common subsequence\nmatching c. Regular expression matching Non-core: 17\\. Cryptography algorithms\n(e.g., SHA-256) (See also: SEC-Crypto) 18\\. Parallel algorithms (See also:\nPDC-Algorithms, FPL-Parallel) 19\\. Consensus algorithms (e.g., Blockchain)\n(See also: SEC-Crypto) a. Proof of work vs proof of stake (See also: SEP-\nSustainability) 20\\. Quantum computing algorithms (See also: AL-Models, AR-\nQuantum) a. Oracle-based (e.g., Deutsch-Jozsa, Bernstein-Vazirani, Simon) b.\nSuperpolynomial speed-up via QFT (e.g., Shor's) c. Polynomial speed-up via\namplitude amplification (e.g., Grover's) 21\\. Fast-Fourier Transform (FFT)\nalgorithm 22\\. Differential evolution algorithm Illustrative Learning\nOutcomes: CS Core: 1\\. For each ADT/Data-Structure in this unit a. Explain its\ndefinition, properties, representation(s), and associated ADT operations. b.\nExplain step-by-step how the ADT operations associated with the data structure\ntransform it. 2\\. For each algorithm in this unit explain step-by-step how the\nalgorithm operates. 3\\. For each algorithmic approach (e.g., sorting) in this\nunit apply a prototypical example of the approach (e.g., merge sort). 90 4\\.\nGiven requirements for a problem, develop multiple solutions using various\ndata structures and algorithms. Subsequently, evaluate the suitability,\nstrengths, and weaknesses selecting an approach that best satisfies the\nrequirements. 5\\. Explain how collision avoidance and collision resolution is\nhandled in hash tables. 6\\. Explain factors beyond computational efficiency\nthat influence the choice of algorithms, such as programming time,\nmaintainability, and the use of application-specific patterns in the input\ndata. 7\\. Explain the heap property and the use of heaps as an implementation\nof a priority queue. KA Core: 8\\. For each of the algorithms and algorithmic\napproaches in the KA Core topics: a. Explain a prototypical example of the\nalgorithm, and b. Explain step-by-step how the algorithm operates. Non-core:\n9\\. An appreciation of quantum computation and its application to certain\nproblems.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/bc79e25e330192ba5b25c59dc288cbdafb9507cbffc999aaae48e8222edaf4fd> .
_:Nc5b153aa9b524006aefc6f2fbf5fc42d <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/bc79e25e330192ba5b25c59dc288cbdafb9507cbffc999aaae48e8222edaf4fd> .
_:Nc5b153aa9b524006aefc6f2fbf5fc42d <http://schema.org/answer> "0" <http://groq.org/bc79e25e330192ba5b25c59dc288cbdafb9507cbffc999aaae48e8222edaf4fd> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Simulation de gestion Objectif: (résultats d'apprentissage) conséquences.\n• Pouvoir s’exprimer spontanément, très couramment, de façon précise et rendre distinctes de\nfines nuances de sens en rapport avec les sujets abordés.\n• Être capable de raisonner par soi-même. Course content: Simulation de la gestion ou jeu d’entreprise sur plusieurs exercices d’une entreprise dans un milieu\nconcurrentiel avec un focus sur les décisions de marketing. Course name: http://example.org/course/UE_XLG4IU070</page1>\n        <page2>Pages : 244-245-246 CS Core : None, KA Core : 4 (+16) (Additional hours here\nare hours shared with other Areas) KA Core: 1\\. Historical and contemporary\nplatforms for games (See also: AR-Logic) a. Evolution of Game Platforms (e.g.,\nBrown Box to Metaverse and beyond; Improvement in Computing Architectures (CPU\nand GPU); Platform Convergence and Mobility) b. Typical Game Platforms (e.g.,\nPersonal Computer; Home Console; Handheld Console; Arcade Machine; Interactive\nTelevision; Mobile Phone; Tablet; Integrated Head-Mounted Display; Immersive\nInstallations and Simulators; Internet of Things enabled Devices; CAVE\nSystems; Web Browsers; Cloud-based Streaming Systems) c. Characteristics and\nConstraints of Different Game Platforms (e.g., Features (local storage,\ninternetworking, peripherals); Run-time performance (GPU/CPU frequency, number\nof cores); Chipsets (physics processing units, vector co-processors);\nExpansion Bandwidth (PCIe); Network throughput (Ethernet); Memory types and\ncapacities (DDR/GDDR); Maximum stack depth; Power consumption; Thermal design;\nEndian) d. Typical Sensors, Controllers, and Actuators (e.g., distinctive\ncontrol system designs -peripherals (mouse, keypad, joystick), game\ncontrollers, wearables, interactive surfaces; electronics and bespoke\nhardware; computer vision, inside-out tracking, and outside-in tracking; IoT-\nenabled electronics and I/O) (See also: GIT-Interaction) e. eSports Ecosystems\n(e.g., evolution of gameplay across platforms; games and eSports; game events\nsuch as LAN/arcade tournaments and international events such as the Olympic\neSports Series; streamed media and spectatorship; multimedia technologies and\nbroadcast management; professional play; data and machine learning for\ncoaching and training) 2\\. Real-time Simulation and Rendering Systems a. CPU\nand GPU architectures (e.g., Flynn's taxonomy; parallelization; instruction\nsets; standard components - graphics compute array, graphics memory\ncontroller, video graphics array basic input/output system; bus interface;\npower management unit; video processing unit; display interface) (See also:\nAR-Heterogeneity) b. Pipelines for physical simulations and graphical\nrendering: (e.g., tile-based, immediate-mode). (See also: GIT-Rendering) c.\nCommon Contexts for Algorithms, Data Structures, and Mathematical Functions\n(e.g., game loops; spatial partitioning, viewport culling, and level of\ndetail; collision detection and resolution; physical simulation; behavior for\nintelligent agents; procedural content generation) (See also: MSF-Discrete,\nAL-Foundational) d. Media representations (e.g., I/O, and computation\ntechniques for virtual worlds: audio; music; sprites; models and textures;\ntext; dialogue; multimedia (e.g., olfaction, tactile)) (See also: GIT-\nFundamentals) 3\\. Game Development Tools and Techniques a. Programming\nLanguages (e.g., C++; C#; Lua; Python; JavaScript) b. Shader Languages (e.g.,\nHLSL, GLSL; Shader Graph) c. Graphics Libraries and APIs (e.g., DirectX; SDL;\nOpenGL; Metal; Vulkan; WebGL). (See also: GIT-Rendering, HCI-Design) d. Common\nDevelopment Tools and Environments (e.g., IDEs; Debuggers; Profilers; Version\nControl Systems including those handling binary assets; Development Kits and\nProduction/Consumer Kits; Emulators) (See also: SDF-Practices, SE-Tools) 4\\.\nGame Engines a. Open Game Engines (e.g., Unreal; Unity; Godot; CryEngine;\nPhyre; Source 2; Pygame and Ren'Py; Phaser; Twine; Spring RTS) b. Techniques\n(e.g., Ideation, Prototyping, Iterative Design and Implementation, Compiling\nExecutable Builds, Development Operations and Quality Assurance - Play Testing\nand Technical Testing, Profiling; Optimization, Porting; Internationalization\nand Localization, Networking) (See also: AR-Performance-Energy, SE-\nRequirements) 5\\. Game Design a. Vocabulary (e.g., game definitions;\nmechanics-dynamics-aesthetics model; industry terminology; experience design;\nmodels of experience and emotion) b. Design Thinking and User-Centered\nExperience Design (e.g., methods of designing games; iteration, incrementing,\nand the double-diamond; phases of pre- and post-production; quality assurance,\nincluding alpha and beta testing; stakeholder and customer involvement;\ncommunity management) (See also: SE-Design) c. Genres (e.g., adventure;\nwalking simulator; first-person shooter; real-time strategy; multiplayer\nonline battle arena (MOBA); role-playing game (rpg)) d. Audiences and Player\nTaxonomies (e.g., people who play games; diversity and broadening\nparticipation; pleasures, player types, and preferences; Bartle, yee) (See\nalso: HCI-User) e. Proliferation of digital game technologies to domains\nbeyond entertainment (e.g., Education and Training; Serious Games; Virtual\nProduction; eSports; Gamification; Immersive Experience Design; Creative\nIndustry Practice; Artistic Practice; Procedural Rhetoric) (See also: AI-SEP)\nIllustrative Learning Outcomes: KA Core: 1\\. Recall the characteristics of\ncommon general-purpose graphics processing architectures. 2\\. Identify the key\nstages of the immediate-mode rendering pipeline. 3\\. Describe the key\nconstraints a specific game platform will likely impose on developers. 4\\.\nExplain how eSports are streamed to large audiences over the internet. 5\\.\nTranslate complex mathematical functions into performant source code. 6\\. Use\nan industry-standard graphics API to render a 3D model in a virtual scene. 7\\.\nModify a shader to change a visual effect according to stated requirements.\n8\\. Implement a game for a particular platform according to the specification.\n9\\. Optimize a function for processing collision detection in a simulated\nenvironment. 10\\. Assess a game's run-time and memory performance using an\nindustry-standard tool and development environment. 11\\. Compare the\ninterfaces of different game platforms, highlighting their respective\nimplications for human-computer interaction. 12\\. Recommend an appropriate set\nof development tools and techniques for implementing a game of a particular\ngenre for a given platform. 13\\. Discuss the key challenges in making a\ndigital game that is cross-platform compatible. 14\\. Express how game\ndevelopers can enhance the accessibility of a game interface. 15\\. Create\nnovel forms of gameplay using frontier game platforms.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/bca3f08599ce0ed58112b05b2e33b3460987a1f76f15188fb1aaae9edfab8101> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU070" <http://groq.org/bca3f08599ce0ed58112b05b2e33b3460987a1f76f15188fb1aaae9edfab8101> .
<http://example.org/course/UE_XLG4IU070> <http://example.org/has_schema_type> _:N1cfcc966abb74be196e38707bb0b7c8f <http://groq.org/bca3f08599ce0ed58112b05b2e33b3460987a1f76f15188fb1aaae9edfab8101> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/bca3f08599ce0ed58112b05b2e33b3460987a1f76f15188fb1aaae9edfab8101> .
_:N1cfcc966abb74be196e38707bb0b7c8f <http://schema.org/explain> "The lecture covers a significant portion of the KU, focusing on game platforms, rendering systems, game development tools, and game design, which aligns with the KU's objectives." <http://groq.org/bca3f08599ce0ed58112b05b2e33b3460987a1f76f15188fb1aaae9edfab8101> .
_:N1cfcc966abb74be196e38707bb0b7c8f <http://schema.org/answer> "1" <http://groq.org/bca3f08599ce0ed58112b05b2e33b3460987a1f76f15188fb1aaae9edfab8101> .
_:N1cfcc966abb74be196e38707bb0b7c8f <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/bca3f08599ce0ed58112b05b2e33b3460987a1f76f15188fb1aaae9edfab8101> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4AU010" <http://groq.org/b2e7fef8f5052e583475d5e6fca62a04459b96a8f5a71cd64133c7bafaa066c1> .
_:N4cbd79c6923f4cd0a5aee622dcd26230 <http://schema.org/explain> "The lecture covers key concepts of SE-Software Architecture, applying principles in practical scenarios, and analyzing its importance in computing, which aligns with the KU's learning outcomes." <http://groq.org/b2e7fef8f5052e583475d5e6fca62a04459b96a8f5a71cd64133c7bafaa066c1> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/has_schema_type> _:N4cbd79c6923f4cd0a5aee622dcd26230 <http://groq.org/b2e7fef8f5052e583475d5e6fca62a04459b96a8f5a71cd64133c7bafaa066c1> .
_:N4cbd79c6923f4cd0a5aee622dcd26230 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/b2e7fef8f5052e583475d5e6fca62a04459b96a8f5a71cd64133c7bafaa066c1> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/b2e7fef8f5052e583475d5e6fca62a04459b96a8f5a71cd64133c7bafaa066c1> .
_:N4cbd79c6923f4cd0a5aee622dcd26230 <http://schema.org/answer> "1" <http://groq.org/b2e7fef8f5052e583475d5e6fca62a04459b96a8f5a71cd64133c7bafaa066c1> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S4 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4AU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Software Architecture: Core\nConcepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nSE-Software Architecture. 2\\. Apply principles in practical scenarios. 3\\.\nAnalyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/b2e7fef8f5052e583475d5e6fca62a04459b96a8f5a71cd64133c7bafaa066c1> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Développement web client Objectif: (résultats d'apprentissage) Course content: approfondir les connaissances dans le langage TypeScript, déjà vu en L1\nprésenter un framework de développement web écrit en TypeScript, comme Angular ou Vue. Course name: http://example.org/course/UE_XLG4IU050</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/30ceb1e26b08a53f2602d86ec25b1ee0698cd8ab477cd7ffc7469d54df2b2b4f> .
_:N6a088cd6fac1464980ef49aee35aaa4e <http://schema.org/explain> "The lecture covers the development of web clients, which aligns with the KU's overview of development platforms and programming under platform constraints." <http://groq.org/30ceb1e26b08a53f2602d86ec25b1ee0698cd8ab477cd7ffc7469d54df2b2b4f> .
<http://example.org/course/UE_XLG4IU050> <http://example.org/has_schema_type> _:N6a088cd6fac1464980ef49aee35aaa4e <http://groq.org/30ceb1e26b08a53f2602d86ec25b1ee0698cd8ab477cd7ffc7469d54df2b2b4f> .
_:N6a088cd6fac1464980ef49aee35aaa4e <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/30ceb1e26b08a53f2602d86ec25b1ee0698cd8ab477cd7ffc7469d54df2b2b4f> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU050" <http://groq.org/30ceb1e26b08a53f2602d86ec25b1ee0698cd8ab477cd7ffc7469d54df2b2b4f> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/30ceb1e26b08a53f2602d86ec25b1ee0698cd8ab477cd7ffc7469d54df2b2b4f> .
_:N6a088cd6fac1464980ef49aee35aaa4e <http://schema.org/answer> "1" <http://groq.org/30ceb1e26b08a53f2602d86ec25b1ee0698cd8ab477cd7ffc7469d54df2b2b4f> .
_:N3c7d898b46df447b859749b4159db57c <http://example.org/has_score> "0.65845335"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/b70f6cb6a7d07fc41c342def32fc0dbcb7587eece5c639612ec55b8058c5906c> .
_:N85864494f78345aa9c020420b40673c1 <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://faiss.org/b70f6cb6a7d07fc41c342def32fc0dbcb7587eece5c639612ec55b8058c5906c> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/is_aligned_with> _:Nd6171e51d207475fb880838a82ae9802 <http://faiss.org/b70f6cb6a7d07fc41c342def32fc0dbcb7587eece5c639612ec55b8058c5906c> .
_:Nd6171e51d207475fb880838a82ae9802 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Graphics_and_Interactive_Techniques_GIT/GIT-3D_Modeling.txt> <http://faiss.org/b70f6cb6a7d07fc41c342def32fc0dbcb7587eece5c639612ec55b8058c5906c> .
_:N85864494f78345aa9c020420b40673c1 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://faiss.org/b70f6cb6a7d07fc41c342def32fc0dbcb7587eece5c639612ec55b8058c5906c> .
_:N85864494f78345aa9c020420b40673c1 <http://example.org/has_score> "0.65218985"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/b70f6cb6a7d07fc41c342def32fc0dbcb7587eece5c639612ec55b8058c5906c> .
_:Nd6171e51d207475fb880838a82ae9802 <http://example.org/has_score> "0.6374098"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/b70f6cb6a7d07fc41c342def32fc0dbcb7587eece5c639612ec55b8058c5906c> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/is_aligned_with> _:N3c7d898b46df447b859749b4159db57c <http://faiss.org/b70f6cb6a7d07fc41c342def32fc0dbcb7587eece5c639612ec55b8058c5906c> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/is_aligned_with> _:N85864494f78345aa9c020420b40673c1 <http://faiss.org/b70f6cb6a7d07fc41c342def32fc0dbcb7587eece5c639612ec55b8058c5906c> .
_:N3c7d898b46df447b859749b4159db57c <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/b70f6cb6a7d07fc41c342def32fc0dbcb7587eece5c639612ec55b8058c5906c> .
_:N3c7d898b46df447b859749b4159db57c <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://faiss.org/b70f6cb6a7d07fc41c342def32fc0dbcb7587eece5c639612ec55b8058c5906c> .
<http://example.org/faiss> <http://example.org/input> "Label: Unité Enseignement de Découverte Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU020" <http://faiss.org/b70f6cb6a7d07fc41c342def32fc0dbcb7587eece5c639612ec55b8058c5906c> .
_:Nd6171e51d207475fb880838a82ae9802 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nGIT-3D Modeling: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of GIT-3D Modeling.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/b70f6cb6a7d07fc41c342def32fc0dbcb7587eece5c639612ec55b8058c5906c> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/has_schema_type> _:Ncdb675faef3e4f4fad2d0cf90156d410 <http://groq.org/91828b3271fad668116c2c24f515c776e8d40c887140fbb200aaa2dc5ebadd28> .
_:Ncdb675faef3e4f4fad2d0cf90156d410 <http://schema.org/answer> "0" <http://groq.org/91828b3271fad668116c2c24f515c776e8d40c887140fbb200aaa2dc5ebadd28> .
_:Ncdb675faef3e4f4fad2d0cf90156d410 <http://schema.org/explain> "No overlap in topics; lecture focuses on professional skills, KU on formal methods theory." <http://groq.org/91828b3271fad668116c2c24f515c776e8d40c887140fbb200aaa2dc5ebadd28> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/91828b3271fad668116c2c24f515c776e8d40c887140fbb200aaa2dc5ebadd28> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S4 Objectif: (résultats d'apprentissage)\nfaire et savoir-être) et d'un plan d'actions sur les prochaines années : à l'écrit et à l'oral\n- d'identitier et d'animer son réseau (professionnel et élargi)\n- de créer et de faire vivre ses profils numériques professionnels\n- de mener une enquête métier auprès d'un professionnel et de la restituer Course content: - présentation orale de la restitution de l'enquête et des recherches sur le métier\n- équivalent de 8 TD + présentation orale des enquêtes:\n- identication de ses valeurs\n- indentification de ses compétences\n- consrtruction de son projet professionnel et personnel\n- présentation de son projet Course name: http://example.org/course/UE_XLG4TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/91828b3271fad668116c2c24f515c776e8d40c887140fbb200aaa2dc5ebadd28> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU010" <http://groq.org/91828b3271fad668116c2c24f515c776e8d40c887140fbb200aaa2dc5ebadd28> .
_:Ncdb675faef3e4f4fad2d0cf90156d410 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/91828b3271fad668116c2c24f515c776e8d40c887140fbb200aaa2dc5ebadd28> .
_:N01ad29f8e8d7446d9a8df8a23ea5b4d9 <http://schema.org/explain> "The lecture covers a significant portion of the KU, including algorithmic complexity, Big-O notation, and time-space tradeoffs, but does not exhaustively cover all topics." <http://groq.org/91f234c8d1c9b66dd2e401717aad01c367db8fe6bf1d1cc8d4b75725a01a3457> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 1 Objectif: (résultats d'apprentissage)\n•\nÉvaluer une implémentation de structure de données en temps et en place mémoire (coûts minimal,\nmaximal, amorti)\n• Course content: et mise en pratique dans l’approche de résolution de problèmes « Diviser pour régner ». Course name: http://example.org/course/UE_XLG3IU010</page1>\n        <page2>Pages:91-93 HOURS CS Core = 6 KA Core = 3 AL-Complexity: Complexity CS Core:\n1\\. Complexity Analysis Framework a. Best, average, and worst-case performance\nof an algorithm b. Empirical and relative (Order of Growth) measurements c.\nInput size and primitive operations d. Time and space efficiency 2\\.\nAsymptotic complexity analysis (average and worst-case bounds) a. Big-O, Big-\nOmega, and Big-Theta formal notations b. Foundational Complexity Classes and\nRepresentative Examples/Problems i. O(1) Constant (e.g., array access) ii.\nO(log2 n) Logarithmic (e.g., binary search) iii. O(n) Linear (e.g., linear\nsearch) iv. O(n log2 n) Log Linear (e.g., mergesort) v. O(n2) Quadratic (e.g.,\nselection sort) vi. O(nc) Polynomial (e.g., O(n3) Gaussian elimination) vii.\nO(2n) Exponential (e.g., Knapsack, Satisfiability (SAT), Traveling Sales-\nPerson (TSP), all subsets) viii. O(n!) Factorial (e.g., Hamiltonian circuit,\nall permutations) 3\\. Empirical measurements of performance 4\\. Tractability\nand intractability a. P, NP, and NP-Complete Complexity Classes b. NP-Complete\nProblems (e.g., SAT, Knapsack, TSP) c. Reductions 5\\. Time and space tradeoffs\nin algorithms 92 KA Core: 6\\. Little-o, Little-Omega, and Little Theta\nnotations 7\\. Formal recursive analysis 8\\. Amortized analysis 9\\. Turing\nMachine-based models of complexity a. Time complexity i. P, NP, NP-C, and EXP\nclasses ii. Cook-Levin theorem b. Space Complexity i. NSpace and PSpace ii.\nSavitch's theorem Illustrative Learning Outcomes: CS Core: 1\\. Prepare a\npresentation that explains to first year students the basic concepts of\nalgorithmic complexity including best, average, and worst-case algorithm\nbehavior, Big- O, Omega, and Theta notations, complexity classes, time and\nspace tradeoffs, empirical measurement, and impact on practical problems. 2\\.\nUsing examples, explain each of the foundational complexity classes in this\nunit. 3\\. For each foundational complexity class in this unit, explain an\nalgorithm that demonstrates the associated runtime complexity. 4\\. For each\nalgorithm in the AL-Foundational unit, explain its runtime complexity class\nand why it belongs to this class. 5\\. Informally evaluate the foundational\ncomplexity class of simple algorithms. 6\\. Given a problem to program for\nwhich there may be several algorithmic approaches, evaluate them and determine\nwhich are feasible, and select one that is optimal in implementation and run-\ntime behavior. 7\\. Develop empirical studies to determine and validate\nhypotheses about the runtime complexity of various algorithms by running\nalgorithms on input of various sizes and comparing actual performance to the\ntheoretical analysis. 8\\. Explain examples that illustrate time-space\ntradeoffs of algorithms. 9\\. Explain how tree balance affects the efficiency\nof binary search tree operations. 10\\. Explain to a non-technical audience the\nsignificance of tractable versus intractable algorithms using an intuitive\nexplanation of Big-O complexity. 11\\. Explain the significance of NP-\nCompleteness. 12\\. Explain how NP-Hard is a lower bound and NP is an upper\nbound for NP-Completeness. 13\\. Explain examples of NP-complete problems. KA\nCore: 14\\. Use recurrence relations to evaluate the time complexity of\nrecursively defined algorithms. 15\\. Apply elementary recurrence relations\nusing a form of the Master Theorem. 16\\. Apply Big-O notation to give upper\ncase bounds on time/space complexity of algorithms. 17\\. Explain the Cook-\nLevin Theorem and the NP-Completeness of SAT. 93 18\\. Explain the classes P\nand NP. 19\\. Prove that a problem is NP-Complete by reducing a classic known\nNP-C problem to it (e.g., 3SAT and Clique). 20\\. Explain the P-space class and\nits relation to the EXP class.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/91f234c8d1c9b66dd2e401717aad01c367db8fe6bf1d1cc8d4b75725a01a3457> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU010" <http://groq.org/91f234c8d1c9b66dd2e401717aad01c367db8fe6bf1d1cc8d4b75725a01a3457> .
_:N01ad29f8e8d7446d9a8df8a23ea5b4d9 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/91f234c8d1c9b66dd2e401717aad01c367db8fe6bf1d1cc8d4b75725a01a3457> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/91f234c8d1c9b66dd2e401717aad01c367db8fe6bf1d1cc8d4b75725a01a3457> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/has_schema_type> _:N01ad29f8e8d7446d9a8df8a23ea5b4d9 <http://groq.org/91f234c8d1c9b66dd2e401717aad01c367db8fe6bf1d1cc8d4b75725a01a3457> .
_:N01ad29f8e8d7446d9a8df8a23ea5b4d9 <http://schema.org/answer> "1" <http://groq.org/91f234c8d1c9b66dd2e401717aad01c367db8fe6bf1d1cc8d4b75725a01a3457> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/has_schema_type> _:N5049ac03533b41a583e0214c34739e66 <http://groq.org/43da24dc887879f27a55af5724b9e269196cb5aac7fa76f437364dc31baaf423> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/43da24dc887879f27a55af5724b9e269196cb5aac7fa76f437364dc31baaf423> .
_:N5049ac03533b41a583e0214c34739e66 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/43da24dc887879f27a55af5724b9e269196cb5aac7fa76f437364dc31baaf423> .
_:N5049ac03533b41a583e0214c34739e66 <http://schema.org/answer> "0" <http://groq.org/43da24dc887879f27a55af5724b9e269196cb5aac7fa76f437364dc31baaf423> .
_:N5049ac03533b41a583e0214c34739e66 <http://schema.org/explain> "The lecture covers some related topics but does not substantially cover the full scope of the Knowledge Unit." <http://groq.org/43da24dc887879f27a55af5724b9e269196cb5aac7fa76f437364dc31baaf423> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU010" <http://groq.org/43da24dc887879f27a55af5724b9e269196cb5aac7fa76f437364dc31baaf423> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 2 Objectif: (résultats d'apprentissage)\ndonnées (itératifs et récursifs) Course content: Structures de données non-linéaires associatives (table associative, ensemble, classe-union) Course name: http://example.org/course/UE_XLG4IU010</page1>\n        <page2>Pages: 187-188 HOURS CS Core = 29 KA Core = 11 MSF-Discrete: Discrete\nMathematics CS Core: 1\\. Sets, relations, functions, cardinality 2\\. Recursive\nmathematical definitions 3\\. Proof techniques (induction, proof by\ncontradiction) 4\\. Permutations, combinations, counting, pigeonhole principle\n5\\. Modular arithmetic 6\\. Logic: truth tables, connectives (operators),\ninference rules, formulas, normal forms, simple predicate logic 7\\. Graphs:\nbasic definitions 8\\. Order notation Illustrative Learning Outcomes: CS Core:\n1\\. Sets, Relations, and Functions, Cardinality a. Explain with examples the\nbasic terminology of functions, relations, and sets. b. Perform the operations\nassociated with sets, functions, and relations. c. Relate practical examples\nto the appropriate set, function, or relation model, and interpret the\nassociated operations and terminology in context. d. Calculate the size of a\nfinite set, including making use of the sum and product rules and inclusion-\nexclusion principle. e. Explain the difference between finite, countable, and\nuncountable sets. 2\\. Recursive mathematical definitions a. Apply recursive\ndefinitions of sequences or structures (e.g., Fibonacci numbers, linked lists,\nparse trees, fractals). b. Formulate inductive proofs of statements about\nrecursive definitions. c. Solve a variety of basic recurrence relations. d.\nAnalyze a problem to determine underlying recurrence relations. e. Given a\nrecursive/iterative code snippet, describe its underlying recurrence relation,\nhypothesize a closed form for the recurrence relation, and prove the\nhypothesis correct (usually, using induction). 3\\. Proof Techniques a.\nIdentify the proof technique used in a given proof. b. Outline the basic\nstructure of each proof technique (direct proof, proof by contradiction, and\ninduction) described in this unit. c. Apply each of the proof techniques\n(direct proof, proof by contradiction, and induction) correctly in the\nconstruction of a sound argument. d. Determine which type of proof is best for\na given problem. e. Explain the parallels between ideas of mathematical and/or\nstructural induction to recursion and recursively defined structures. f.\nExplain the relationship between weak and strong induction and give examples\nof the appropriate use of each. 4\\. Permutations, combinations, and counting\na. Apply counting arguments, including sum and product rules, inclusion-\nexclusion principle, and arithmetic/geometric progressions. b. Apply the\npigeonhole principle in the context of a formal proof. c. Compute permutations\nand combinations of a set, and interpret the meaning in the context of the\nspecific application. d. Map real-world applications to appropriate counting\nformalisms, such as determining the number of ways to arrange people around a\ntable, subject to constraints on the seating arrangement, or the number of\nways to determine certain hands in cards (e.g., a full house). 5\\. Modular\narithmetic a. Perform computations involving modular arithmetic. b. Explain\nthe notion of the greatest common divisor and apply Euclid's algorithm to\ncompute it. 6\\. Logic a. Convert logical statements from informal language to\npropositional and predicate logic expressions. b. Apply formal methods of\nsymbolic propositional and predicate logic, such as calculating validity of\nformulae, computing normal forms, or negating a logical statement. c. Use the\nrules of inference to construct proofs in propositional and predicate logic.\nd. Describe how symbolic logic can be used to model real-life situations or\napplications, including those arising in computing contexts such as software\nanalysis (e.g., program correctness), database queries, and algorithms. e.\nApply formal logic proofs and/or informal, but rigorous, logical reasoning to\nreal problems, such as predicting the behavior of software or solving problems\nsuch as puzzles. f. Describe the strengths and limitations of propositional\nand predicate logic. g. Explain what it means for a proof in propositional (or\npredicate) logic to be valid. 7\\. Graphs a. Illustrate by example the basic\nterminology of graph theory, and some of the properties and special cases of\ntypes of graphs, including trees. b. Demonstrate different traversal methods\nfor trees and graphs, including pre-, post-, and in-order traversal of trees,\nalong with breadth-first and depth-first search for graphs. c. Model a variety\nof real-world problems in computer science using appropriate forms of graphs\nand trees, such as representing a network topology, the organization of a\nhierarchical file system, or a social network. d. Show how concepts from\ngraphs and trees appear in data structures, algorithms, proof techniques\n(structural induction), and counting. KA Core: The recommended topics are the\nsame between CS core and KA-core, but with far more hours, the KA-core can\ncover these topics in depth and might include more computing-related\napplications.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/43da24dc887879f27a55af5724b9e269196cb5aac7fa76f437364dc31baaf423> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/has_schema_type> _:N93fde6e20a4b4851b1ed1ea22091e8aa <http://groq.org/08c7886217d243d2b34ade6da653e877f0591957d64075dc9defad93c5a07f24> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/08c7886217d243d2b34ade6da653e877f0591957d64075dc9defad93c5a07f24> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3AU010</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/08c7886217d243d2b34ade6da653e877f0591957d64075dc9defad93c5a07f24> .
_:N93fde6e20a4b4851b1ed1ea22091e8aa <http://schema.org/explain> "Lecture focuses on teaching methods, KU covers CS platforms/programming technicalities" <http://groq.org/08c7886217d243d2b34ade6da653e877f0591957d64075dc9defad93c5a07f24> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3AU010" <http://groq.org/08c7886217d243d2b34ade6da653e877f0591957d64075dc9defad93c5a07f24> .
_:N93fde6e20a4b4851b1ed1ea22091e8aa <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/08c7886217d243d2b34ade6da653e877f0591957d64075dc9defad93c5a07f24> .
_:N93fde6e20a4b4851b1ed1ea22091e8aa <http://schema.org/answer> "0" <http://groq.org/08c7886217d243d2b34ade6da653e877f0591957d64075dc9defad93c5a07f24> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/6fd6333c76d4d3cd8f7f75f5e4dc1a14b7693fa6036d5c6311ae24055fca194d> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/has_schema_type> _:Ndd8384d93d124c94a39cf5161887d5d5 <http://groq.org/6fd6333c76d4d3cd8f7f75f5e4dc1a14b7693fa6036d5c6311ae24055fca194d> .
_:Ndd8384d93d124c94a39cf5161887d5d5 <http://schema.org/answer> "0" <http://groq.org/6fd6333c76d4d3cd8f7f75f5e4dc1a14b7693fa6036d5c6311ae24055fca194d> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 1 Objectif: (résultats d'apprentissage)\n•\nÉvaluer une implémentation de structure de données en temps et en place mémoire (coûts minimal,\nmaximal, amorti)\n• Course content: et mise en pratique dans l’approche de résolution de problèmes « Diviser pour régner ». Course name: http://example.org/course/UE_XLG3IU010</page1>\n        <page2>Pages:91-93 HOURS CS Core = 6 KA Core = 3 AL-Complexity: Complexity CS Core:\n1\\. Complexity Analysis Framework a. Best, average, and worst-case performance\nof an algorithm b. Empirical and relative (Order of Growth) measurements c.\nInput size and primitive operations d. Time and space efficiency 2\\.\nAsymptotic complexity analysis (average and worst-case bounds) a. Big-O, Big-\nOmega, and Big-Theta formal notations b. Foundational Complexity Classes and\nRepresentative Examples/Problems i. O(1) Constant (e.g., array access) ii.\nO(log2 n) Logarithmic (e.g., binary search) iii. O(n) Linear (e.g., linear\nsearch) iv. O(n log2 n) Log Linear (e.g., mergesort) v. O(n2) Quadratic (e.g.,\nselection sort) vi. O(nc) Polynomial (e.g., O(n3) Gaussian elimination) vii.\nO(2n) Exponential (e.g., Knapsack, Satisfiability (SAT), Traveling Sales-\nPerson (TSP), all subsets) viii. O(n!) Factorial (e.g., Hamiltonian circuit,\nall permutations) 3\\. Empirical measurements of performance 4\\. Tractability\nand intractability a. P, NP, and NP-Complete Complexity Classes b. NP-Complete\nProblems (e.g., SAT, Knapsack, TSP) c. Reductions 5\\. Time and space tradeoffs\nin algorithms 92 KA Core: 6\\. Little-o, Little-Omega, and Little Theta\nnotations 7\\. Formal recursive analysis 8\\. Amortized analysis 9\\. Turing\nMachine-based models of complexity a. Time complexity i. P, NP, NP-C, and EXP\nclasses ii. Cook-Levin theorem b. Space Complexity i. NSpace and PSpace ii.\nSavitch's theorem Illustrative Learning Outcomes: CS Core: 1\\. Prepare a\npresentation that explains to first year students the basic concepts of\nalgorithmic complexity including best, average, and worst-case algorithm\nbehavior, Big- O, Omega, and Theta notations, complexity classes, time and\nspace tradeoffs, empirical measurement, and impact on practical problems. 2\\.\nUsing examples, explain each of the foundational complexity classes in this\nunit. 3\\. For each foundational complexity class in this unit, explain an\nalgorithm that demonstrates the associated runtime complexity. 4\\. For each\nalgorithm in the AL-Foundational unit, explain its runtime complexity class\nand why it belongs to this class. 5\\. Informally evaluate the foundational\ncomplexity class of simple algorithms. 6\\. Given a problem to program for\nwhich there may be several algorithmic approaches, evaluate them and determine\nwhich are feasible, and select one that is optimal in implementation and run-\ntime behavior. 7\\. Develop empirical studies to determine and validate\nhypotheses about the runtime complexity of various algorithms by running\nalgorithms on input of various sizes and comparing actual performance to the\ntheoretical analysis. 8\\. Explain examples that illustrate time-space\ntradeoffs of algorithms. 9\\. Explain how tree balance affects the efficiency\nof binary search tree operations. 10\\. Explain to a non-technical audience the\nsignificance of tractable versus intractable algorithms using an intuitive\nexplanation of Big-O complexity. 11\\. Explain the significance of NP-\nCompleteness. 12\\. Explain how NP-Hard is a lower bound and NP is an upper\nbound for NP-Completeness. 13\\. Explain examples of NP-complete problems. KA\nCore: 14\\. Use recurrence relations to evaluate the time complexity of\nrecursively defined algorithms. 15\\. Apply elementary recurrence relations\nusing a form of the Master Theorem. 16\\. Apply Big-O notation to give upper\ncase bounds on time/space complexity of algorithms. 17\\. Explain the Cook-\nLevin Theorem and the NP-Completeness of SAT. 93 18\\. Explain the classes P\nand NP. 19\\. Prove that a problem is NP-Complete by reducing a classic known\nNP-C problem to it (e.g., 3SAT and Clique). 20\\. Explain the P-space class and\nits relation to the EXP class.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/6fd6333c76d4d3cd8f7f75f5e4dc1a14b7693fa6036d5c6311ae24055fca194d> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU010" <http://groq.org/6fd6333c76d4d3cd8f7f75f5e4dc1a14b7693fa6036d5c6311ae24055fca194d> .
_:Ndd8384d93d124c94a39cf5161887d5d5 <http://schema.org/explain> "The lecture partially covers the KU but lacks depth in theoretical aspects like asymptotic notations beyond Big-O and advanced complexity classes." <http://groq.org/6fd6333c76d4d3cd8f7f75f5e4dc1a14b7693fa6036d5c6311ae24055fca194d> .
_:Ndd8384d93d124c94a39cf5161887d5d5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/6fd6333c76d4d3cd8f7f75f5e4dc1a14b7693fa6036d5c6311ae24055fca194d> .
_:Nc85f33f0498a4b29bfe504eabf92944d <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/cdd9f71fd17602d341a3ae6770859e72e12c00757399422613d2a6ed348ac943> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/cdd9f71fd17602d341a3ae6770859e72e12c00757399422613d2a6ed348ac943> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Bases de données 2 Objectif: (résultats d'apprentissage) Programmer en un langage procédurale lié à une base de données, par exemple PL/SQL ou Course content: Vues et contrôle d’accès\n5. Course name: http://example.org/course/UE_XLG3IU040</page1>\n        <page2>Pages: 118 HOURS CS Core = 2 KA Core = 4 DM-Querying: Query Construction CS\nCore: 1\\. SQL Query Formation a. Interactive SQL execution b. Programmatic\nexecution of an SQL query KA Core: 2\\. Relational Algebra 3\\. SQL a. Data\ndefinition including integrity and other constraint specifications b. Update\nsublanguage Non-core: 4\\. Relational Calculus 5\\. QBE and 4th-generation\nenvironments 6\\. Different ways to invoke non-procedural queries in\nconventional languages 7\\. Introduction to other major query languages (e.g.,\nXPATH, SPARQL) 8\\. Stored procedures Illustrative Learning Outcomes: CS Core:\n1\\. Compose SQL queries that incorporate select, project, join, union,\nintersection, set difference, and set division. 2\\. Determine when a nested\nSQL query is correlated or not. 3\\. Iterate over data retrieved\nprogrammatically from a database via an SQL query. KA Core: 4\\. Define, in\nSQL, a relation schema, including all integrity constraints and delete/update\ntriggers. 5\\. Compose an SQL query to update a tuple in a relation.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/cdd9f71fd17602d341a3ae6770859e72e12c00757399422613d2a6ed348ac943> .
_:Nc85f33f0498a4b29bfe504eabf92944d <http://schema.org/answer> "1" <http://groq.org/cdd9f71fd17602d341a3ae6770859e72e12c00757399422613d2a6ed348ac943> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/has_schema_type> _:Nc85f33f0498a4b29bfe504eabf92944d <http://groq.org/cdd9f71fd17602d341a3ae6770859e72e12c00757399422613d2a6ed348ac943> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU040" <http://groq.org/cdd9f71fd17602d341a3ae6770859e72e12c00757399422613d2a6ed348ac943> .
_:Nc85f33f0498a4b29bfe504eabf92944d <http://schema.org/explain> "Covers stored procedures, views, and programmatic SQL execution, aligning with core topics." <http://groq.org/cdd9f71fd17602d341a3ae6770859e72e12c00757399422613d2a6ed348ac943> .
_:N78cdd4a6df6d45c88b2fce390ef0370b <http://schema.org/answer> "1" <http://groq.org/08cf5ba37650ff18c67fb6bba0dff009c5dc59aa12a36928a07fafeda8f6e46b> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU010" <http://groq.org/08cf5ba37650ff18c67fb6bba0dff009c5dc59aa12a36928a07fafeda8f6e46b> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD GIT-3D Modeling: Core Concepts CS\nCore: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic 3\nKA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of GIT-3D Modeling.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/08cf5ba37650ff18c67fb6bba0dff009c5dc59aa12a36928a07fafeda8f6e46b> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/has_schema_type> _:N78cdd4a6df6d45c88b2fce390ef0370b <http://groq.org/08cf5ba37650ff18c67fb6bba0dff009c5dc59aa12a36928a07fafeda8f6e46b> .
_:N78cdd4a6df6d45c88b2fce390ef0370b <http://schema.org/explain> "The lecture covers the core concepts of GIT-3D Modeling, which aligns with the key concepts and principles mentioned in the KU." <http://groq.org/08cf5ba37650ff18c67fb6bba0dff009c5dc59aa12a36928a07fafeda8f6e46b> .
_:N78cdd4a6df6d45c88b2fce390ef0370b <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/08cf5ba37650ff18c67fb6bba0dff009c5dc59aa12a36928a07fafeda8f6e46b> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/08cf5ba37650ff18c67fb6bba0dff009c5dc59aa12a36928a07fafeda8f6e46b> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Enjeux de la transition écologique Objectif: (résultats d'apprentissage) Course content: Programme des 9 séances en ligne (d’environ 1h30 de travail chacune) : Course name: http://example.org/course/UE_XLG3TU020</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/4b890a7f284487262a09d803305495c6aafa175248108ea0a66e3c8105cd3b80> .
_:Ncf00cea0e988435da74a0032d2a50761 <http://schema.org/explain> "The lecture covers the core concepts of SE-Formal Methods, including placeholder topics 1, 2, and 3, which align with the illustrative learning outcomes." <http://groq.org/4b890a7f284487262a09d803305495c6aafa175248108ea0a66e3c8105cd3b80> .
_:Ncf00cea0e988435da74a0032d2a50761 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/4b890a7f284487262a09d803305495c6aafa175248108ea0a66e3c8105cd3b80> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/4b890a7f284487262a09d803305495c6aafa175248108ea0a66e3c8105cd3b80> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/has_schema_type> _:Ncf00cea0e988435da74a0032d2a50761 <http://groq.org/4b890a7f284487262a09d803305495c6aafa175248108ea0a66e3c8105cd3b80> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU020" <http://groq.org/4b890a7f284487262a09d803305495c6aafa175248108ea0a66e3c8105cd3b80> .
_:Ncf00cea0e988435da74a0032d2a50761 <http://schema.org/answer> "1" <http://groq.org/4b890a7f284487262a09d803305495c6aafa175248108ea0a66e3c8105cd3b80> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/has_schema_type> _:Nb3aad6ad277f47878622173abbf33827 <http://groq.org/01802c73f0c85e618851f9e493db0b36cd0b1093889cf1b9037cd9cd9e4d6dcd> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/01802c73f0c85e618851f9e493db0b36cd0b1093889cf1b9037cd9cd9e4d6dcd> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU030</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/01802c73f0c85e618851f9e493db0b36cd0b1093889cf1b9037cd9cd9e4d6dcd> .
_:Nb3aad6ad277f47878622173abbf33827 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/01802c73f0c85e618851f9e493db0b36cd0b1093889cf1b9037cd9cd9e4d6dcd> .
_:Nb3aad6ad277f47878622173abbf33827 <http://schema.org/answer> "0" <http://groq.org/01802c73f0c85e618851f9e493db0b36cd0b1093889cf1b9037cd9cd9e4d6dcd> .
_:Nb3aad6ad277f47878622173abbf33827 <http://schema.org/explain> "The lecture does not cover the technical content of the KU." <http://groq.org/01802c73f0c85e618851f9e493db0b36cd0b1093889cf1b9037cd9cd9e4d6dcd> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU030" <http://groq.org/01802c73f0c85e618851f9e493db0b36cd0b1093889cf1b9037cd9cd9e4d6dcd> .
_:N17d5dadd6ead4091b180790cbeb6492d <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/93beb4d401eae2e62adc5050c57a27a13640634de427573bf7eab080f67e7a5c> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/has_schema_type> _:N17d5dadd6ead4091b180790cbeb6492d <http://groq.org/93beb4d401eae2e62adc5050c57a27a13640634de427573bf7eab080f67e7a5c> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Bases de données 2 Objectif: (résultats d'apprentissage) Programmer en un langage procédurale lié à une base de données, par exemple PL/SQL ou Course content: Vues et contrôle d’accès\n5. Course name: http://example.org/course/UE_XLG3IU040</page1>\n        <page2>Pages: 144 HOURS CS Core = 0 KA Core = 0 FPL-Constructs: Advanced Programming\nConstructs Non-core: 1\\. Encapsulation mechanisms 2\\. Delayed evaluation and\ninfinite streams 3\\. Compare and contrast delayed evaluation vs eager\nevaluation 4\\. Unification vs assertion vs expression evaluation 5\\. Control\nabstractions: exception handling, continuations, monads. 6\\. Object-oriented\nabstractions: multiple inheritance, mixins, traits, multimethods 7\\.\nMetaprogramming: macros, generative programming, model-based development 8\\.\nString manipulation via pattern-matching (regular expressions) 9\\. Dynamic\ncode evaluation (\"eval\") 10\\. Language support for checking assertions,\ninvariants, and pre/post-conditions 11\\. Domain specific languages, such as\ndatabase languages, data science languages, embedded computing languages,\nsynchronous languages, hardware interface languages 12\\. Massive parallel high\nperformance computing models and languages Illustrative learning outcomes:\nNon-core: 1\\. Use various advanced programming constructs and idioms\ncorrectly. 2\\. Discuss how various advanced programming constructs aim to\nimprove program structure, software quality, and programmer productivity. 3\\.\nDiscuss how various advanced programming constructs interact with the\ndefinition and implementation of other language features.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/93beb4d401eae2e62adc5050c57a27a13640634de427573bf7eab080f67e7a5c> .
_:N17d5dadd6ead4091b180790cbeb6492d <http://schema.org/answer> "1" <http://groq.org/93beb4d401eae2e62adc5050c57a27a13640634de427573bf7eab080f67e7a5c> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/93beb4d401eae2e62adc5050c57a27a13640634de427573bf7eab080f67e7a5c> .
_:N17d5dadd6ead4091b180790cbeb6492d <http://schema.org/explain> "The lecture covers topics such as views, control access, and programming in a procedural language linked to a database, which aligns with the KU's focus on advanced programming constructs." <http://groq.org/93beb4d401eae2e62adc5050c57a27a13640634de427573bf7eab080f67e7a5c> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU040" <http://groq.org/93beb4d401eae2e62adc5050c57a27a13640634de427573bf7eab080f67e7a5c> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/has_schema_type> _:Nc3826a5ecb9f4008b66db3d4e14d3608 <http://groq.org/7a7fd647e306992a51b7b343dbce282716c5b99ae6f79f1c78564e39869350df> .
_:Nc3826a5ecb9f4008b66db3d4e14d3608 <http://schema.org/answer> "0" <http://groq.org/7a7fd647e306992a51b7b343dbce282716c5b99ae6f79f1c78564e39869350df> .
_:Nc3826a5ecb9f4008b66db3d4e14d3608 <http://schema.org/explain> "The lecture focuses on methodology and professional insertion, whereas the KU covers SE-Formal Methods, with no apparent connection between the two topics." <http://groq.org/7a7fd647e306992a51b7b343dbce282716c5b99ae6f79f1c78564e39869350df> .
_:Nc3826a5ecb9f4008b66db3d4e14d3608 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/7a7fd647e306992a51b7b343dbce282716c5b99ae6f79f1c78564e39869350df> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S4 Objectif: (résultats d'apprentissage)\nfaire et savoir-être) et d'un plan d'actions sur les prochaines années : à l'écrit et à l'oral\n- d'identitier et d'animer son réseau (professionnel et élargi)\n- de créer et de faire vivre ses profils numériques professionnels\n- de mener une enquête métier auprès d'un professionnel et de la restituer Course content: - présentation orale de la restitution de l'enquête et des recherches sur le métier\n- équivalent de 8 TD + présentation orale des enquêtes:\n- identication de ses valeurs\n- indentification de ses compétences\n- consrtruction de son projet professionnel et personnel\n- présentation de son projet Course name: http://example.org/course/UE_XLG4TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/7a7fd647e306992a51b7b343dbce282716c5b99ae6f79f1c78564e39869350df> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/7a7fd647e306992a51b7b343dbce282716c5b99ae6f79f1c78564e39869350df> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU010" <http://groq.org/7a7fd647e306992a51b7b343dbce282716c5b99ae6f79f1c78564e39869350df> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4AU010" <http://groq.org/b29c368fdb4f269f2059d9ba94c4612b2eca0c99330a91702e4bbe01d4d0c0e6> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/b29c368fdb4f269f2059d9ba94c4612b2eca0c99330a91702e4bbe01d4d0c0e6> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/has_schema_type> _:N2326acd67d544b088be575a81311478e <http://groq.org/b29c368fdb4f269f2059d9ba94c4612b2eca0c99330a91702e4bbe01d4d0c0e6> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S4 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4AU010</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/b29c368fdb4f269f2059d9ba94c4612b2eca0c99330a91702e4bbe01d4d0c0e6> .
_:N2326acd67d544b088be575a81311478e <http://schema.org/answer> "0" <http://groq.org/b29c368fdb4f269f2059d9ba94c4612b2eca0c99330a91702e4bbe01d4d0c0e6> .
_:N2326acd67d544b088be575a81311478e <http://schema.org/explain> "Lecture focuses on teaching methods, KU covers CS platforms/programming" <http://groq.org/b29c368fdb4f269f2059d9ba94c4612b2eca0c99330a91702e4bbe01d4d0c0e6> .
_:N2326acd67d544b088be575a81311478e <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/b29c368fdb4f269f2059d9ba94c4612b2eca0c99330a91702e4bbe01d4d0c0e6> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/d3347760928ab81cfd02384f4a63f6253b30892c4f9ddf912c33c897ccf6adcd> .
_:N445e49543bcd4d738f8b17104611cac5 <http://schema.org/explain> "The lecture focuses on management simulation and business games, while the KU covers technical aspects of animation and simulation." <http://groq.org/d3347760928ab81cfd02384f4a63f6253b30892c4f9ddf912c33c897ccf6adcd> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Simulation de gestion Objectif: (résultats d'apprentissage) conséquences.\n• Pouvoir s’exprimer spontanément, très couramment, de façon précise et rendre distinctes de\nfines nuances de sens en rapport avec les sujets abordés.\n• Être capable de raisonner par soi-même. Course content: Simulation de la gestion ou jeu d’entreprise sur plusieurs exercices d’une entreprise dans un milieu\nconcurrentiel avec un focus sur les décisions de marketing. Course name: http://example.org/course/UE_XLG4IU070</page1>\n        <page2>Pages: 152-153 HOURS CS Core = 3 KA Core = 2 GIT-Animation and Simulation:\nCore Principles CS Core: 1\\. Key concepts in animation and simulation. 2\\.\nProcedural animation and physics-based modeling. 3\\. Motion capture techniques\nand keyframe animation. 4\\. Real-time simulation techniques for interactive\napplications. KA Core: 5\\. AI-based animation and behavioral modeling. 6\\.\nCrowd simulation and group behaviors in animations. 7\\. Advanced physics-based\nsimulations. Illustrative Learning Outcomes: 1\\. Apply keyframe animation\ntechniques to an interactive application. 2\\. Differentiate between procedural\nand AI-driven animation. 3\\. Understand the role of physics in real-time\nsimulations.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/d3347760928ab81cfd02384f4a63f6253b30892c4f9ddf912c33c897ccf6adcd> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU070" <http://groq.org/d3347760928ab81cfd02384f4a63f6253b30892c4f9ddf912c33c897ccf6adcd> .
_:N445e49543bcd4d738f8b17104611cac5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/d3347760928ab81cfd02384f4a63f6253b30892c4f9ddf912c33c897ccf6adcd> .
_:N445e49543bcd4d738f8b17104611cac5 <http://schema.org/answer> "0" <http://groq.org/d3347760928ab81cfd02384f4a63f6253b30892c4f9ddf912c33c897ccf6adcd> .
<http://example.org/course/UE_XLG4IU070> <http://example.org/has_schema_type> _:N445e49543bcd4d738f8b17104611cac5 <http://groq.org/d3347760928ab81cfd02384f4a63f6253b30892c4f9ddf912c33c897ccf6adcd> .
_:Nb8db3b219c604c95bad6376ffe2fe3c8 <http://schema.org/answer> "0" <http://groq.org/e0d357b2514e1271ce7951d89ff96a1058be2565a41fa37c577842132dfac497> .
_:Nb8db3b219c604c95bad6376ffe2fe3c8 <http://schema.org/explain> "Lecture focuses on teaching methods, not technical platform constraints or programming languages." <http://groq.org/e0d357b2514e1271ce7951d89ff96a1058be2565a41fa37c577842132dfac497> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/e0d357b2514e1271ce7951d89ff96a1058be2565a41fa37c577842132dfac497> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU030</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/e0d357b2514e1271ce7951d89ff96a1058be2565a41fa37c577842132dfac497> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU030" <http://groq.org/e0d357b2514e1271ce7951d89ff96a1058be2565a41fa37c577842132dfac497> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/has_schema_type> _:Nb8db3b219c604c95bad6376ffe2fe3c8 <http://groq.org/e0d357b2514e1271ce7951d89ff96a1058be2565a41fa37c577842132dfac497> .
_:Nb8db3b219c604c95bad6376ffe2fe3c8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/e0d357b2514e1271ce7951d89ff96a1058be2565a41fa37c577842132dfac497> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/has_schema_type> _:N0b3b9ea6a1cc4e8895358cc28363fabb <http://groq.org/77d216efbf9d0ccb2a496e0bcd909cf0250492c767f695cf27f2100940baaae5> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/77d216efbf9d0ccb2a496e0bcd909cf0250492c767f695cf27f2100940baaae5> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU020" <http://groq.org/77d216efbf9d0ccb2a496e0bcd909cf0250492c767f695cf27f2100940baaae5> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Logique pour l'informatique Objectif: (résultats d'apprentissage)\nconsistance et complétude d'un système de preuves.\n4. Représenter une preuve de la déduction naturelle sous forme d'arbre d'inférence.\n5. Utiliser les algorithmes d'unification et de résolution pour le raisonnement automatique sur les\nformules logiques.\n1) Raisonnement algébrique booléen\n• Dualités des connecteurs logiques\n• Formes normales conjonctive et disjonctive\n2) Systèmes de preuves\n• Système d'inférence associé à une définition inductive\n• Preuve d'appartenance à un ensemble inductif par un arbre de preuves\n• Règles d'inférences de la déduction naturelle pour la logique propositionnelle\n• Distinguer logique classique et logique intuitionniste\n3) Donner du sens aux langages logique Course content: • Interprétation, modèle, satisfiabilité, validité\n• Correspondance avec le système de preuve: correction et complétude\n4) Calcul des prédicats\n• Manipulation des quantificateurs\n• Skolémisation, forme clausale\n• Théorie logique\n5) Raisonner automatiquement sur les formules logique\n• Algorithme d'unification\n• Algorithme de résolution Course name: http://example.org/course/UE_XLG3IU020</page1>\n        <page2>Pages:70-70 HOURS CS Core = 2 KA Core = 2 AI-KRR: Fundamental Knowledge\nRepresentation and Reasoning CS Core: 1\\. Types of representations a.\nSymbolic, logical i. Creating a representation from a natural language problem\nstatement b. Learned subsymbolic representations c. Graphical models (e.g.,\nnaive Bayes, Bayesian network) 2\\. Review of probabilistic reasoning, Bayes\ntheorem (See also: MSF-Probability) 3\\. Bayesian reasoning a. Bayesian\ninference KA Core: 4\\. Random variables and probability distributions a.\nAxioms of probability b. Probabilistic inference c. Bayes' Rule (derivation)\nd. Bayesian inference (more complex examples) 5\\. Independence 6\\. Conditional\nIndependence 7\\. Markov chains and Markov models 8\\. Utility and decision\nmaking Illustrative Learning Outcomes: 1\\. Given a natural language problem\nstatement, encode it as a symbolic or logical representation. 2\\. Explain how\nwe can make decisions under uncertainty, using concepts such as Bayes theorem\nand utility. 3\\. Compute a probabilistic inference in a real-world problem\nusing Bayes' theorem to determine the probability of a hypothesis given\nevidence. 4\\. Apply Bayes' rule to determine the probability of a hypothesis\ngiven evidence. 5\\. Compute the probability of outcomes and test whether\noutcomes are independent. 71 AI-ML: Machine Learning CS Core: 1\\. Definition\nand examples of a broad variety of machine learning tasks a. Supervised\nlearning i. Classification ii. Regression b. Reinforcement learning c.\nUnsupervised learning i. Clustering 2\\. Fundamental ideas: a. No free lunch\ntheorem: no one learner can solve all problems; representational design\ndecisions have consequences. b. Sources of error and undecidability</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/77d216efbf9d0ccb2a496e0bcd909cf0250492c767f695cf27f2100940baaae5> .
_:N0b3b9ea6a1cc4e8895358cc28363fabb <http://schema.org/explain> "The lecture focuses on formal logic and proof systems, while the KU covers probabilistic reasoning and machine learning, with little overlap." <http://groq.org/77d216efbf9d0ccb2a496e0bcd909cf0250492c767f695cf27f2100940baaae5> .
_:N0b3b9ea6a1cc4e8895358cc28363fabb <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/77d216efbf9d0ccb2a496e0bcd909cf0250492c767f695cf27f2100940baaae5> .
_:N0b3b9ea6a1cc4e8895358cc28363fabb <http://schema.org/answer> "0" <http://groq.org/77d216efbf9d0ccb2a496e0bcd909cf0250492c767f695cf27f2100940baaae5> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4AU010" <http://groq.org/c079105a6b724e8e3f47a8ef51ecb7be1c3662a7252ad17f179699e45c8e9bb2> .
_:Nc1bcdd4fa7344ff09d60f9ca128bcf1c <http://schema.org/answer> "1" <http://groq.org/c079105a6b724e8e3f47a8ef51ecb7be1c3662a7252ad17f179699e45c8e9bb2> .
_:Nc1bcdd4fa7344ff09d60f9ca128bcf1c <http://schema.org/explain> "The lecture covers topics such as development platforms, programming languages, and platform constraints, which align with the Knowledge Unit's content." <http://groq.org/c079105a6b724e8e3f47a8ef51ecb7be1c3662a7252ad17f179699e45c8e9bb2> .
_:Nc1bcdd4fa7344ff09d60f9ca128bcf1c <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/c079105a6b724e8e3f47a8ef51ecb7be1c3662a7252ad17f179699e45c8e9bb2> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S4 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4AU010</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/c079105a6b724e8e3f47a8ef51ecb7be1c3662a7252ad17f179699e45c8e9bb2> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/c079105a6b724e8e3f47a8ef51ecb7be1c3662a7252ad17f179699e45c8e9bb2> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/has_schema_type> _:Nc1bcdd4fa7344ff09d60f9ca128bcf1c <http://groq.org/c079105a6b724e8e3f47a8ef51ecb7be1c3662a7252ad17f179699e45c8e9bb2> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/d284c3c60b68f8ab18f36fbc6785d37e104a80e3b9d72226cc74fb703d958c94> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/has_schema_type> _:N71e442880d8d4ee085c422cb10699298 <http://groq.org/d284c3c60b68f8ab18f36fbc6785d37e104a80e3b9d72226cc74fb703d958c94> .
_:N71e442880d8d4ee085c422cb10699298 <http://schema.org/answer> "0" <http://groq.org/d284c3c60b68f8ab18f36fbc6785d37e104a80e3b9d72226cc74fb703d958c94> .
_:N71e442880d8d4ee085c422cb10699298 <http://schema.org/explain> "The lecture focuses on professional development and project management, not covering the technical SE-Testing and Quality Assurance topics." <http://groq.org/d284c3c60b68f8ab18f36fbc6785d37e104a80e3b9d72226cc74fb703d958c94> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S4 Objectif: (résultats d'apprentissage)\nfaire et savoir-être) et d'un plan d'actions sur les prochaines années : à l'écrit et à l'oral\n- d'identitier et d'animer son réseau (professionnel et élargi)\n- de créer et de faire vivre ses profils numériques professionnels\n- de mener une enquête métier auprès d'un professionnel et de la restituer Course content: - présentation orale de la restitution de l'enquête et des recherches sur le métier\n- équivalent de 8 TD + présentation orale des enquêtes:\n- identication de ses valeurs\n- indentification de ses compétences\n- consrtruction de son projet professionnel et personnel\n- présentation de son projet Course name: http://example.org/course/UE_XLG4TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Testing and Quality Assurance:\nCore Concepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nSE-Testing and Quality Assurance. 2\\. Apply principles in practical scenarios.\n3\\. Analyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/d284c3c60b68f8ab18f36fbc6785d37e104a80e3b9d72226cc74fb703d958c94> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU010" <http://groq.org/d284c3c60b68f8ab18f36fbc6785d37e104a80e3b9d72226cc74fb703d958c94> .
_:N71e442880d8d4ee085c422cb10699298 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/d284c3c60b68f8ab18f36fbc6785d37e104a80e3b9d72226cc74fb703d958c94> .
_:N37ad4702412e4245bbe183bb13f05156 <http://schema.org/answer> "1" <http://groq.org/e47a8861bccd6ded0b1014780a9e471d19b35c4518152bfb18bbe944f2e796ba> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU020" <http://groq.org/e47a8861bccd6ded0b1014780a9e471d19b35c4518152bfb18bbe944f2e796ba> .
_:N37ad4702412e4245bbe183bb13f05156 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/e47a8861bccd6ded0b1014780a9e471d19b35c4518152bfb18bbe944f2e796ba> .
_:N37ad4702412e4245bbe183bb13f05156 <http://schema.org/explain> "Covers logic proof systems, normal forms, unification, resolution, and automated reasoning, aligning with KU's logic objectives." <http://groq.org/e47a8861bccd6ded0b1014780a9e471d19b35c4518152bfb18bbe944f2e796ba> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/e47a8861bccd6ded0b1014780a9e471d19b35c4518152bfb18bbe944f2e796ba> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/has_schema_type> _:N37ad4702412e4245bbe183bb13f05156 <http://groq.org/e47a8861bccd6ded0b1014780a9e471d19b35c4518152bfb18bbe944f2e796ba> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Logique pour l'informatique Objectif: (résultats d'apprentissage)\nconsistance et complétude d'un système de preuves.\n4. Représenter une preuve de la déduction naturelle sous forme d'arbre d'inférence.\n5. Utiliser les algorithmes d'unification et de résolution pour le raisonnement automatique sur les\nformules logiques.\n1) Raisonnement algébrique booléen\n• Dualités des connecteurs logiques\n• Formes normales conjonctive et disjonctive\n2) Systèmes de preuves\n• Système d'inférence associé à une définition inductive\n• Preuve d'appartenance à un ensemble inductif par un arbre de preuves\n• Règles d'inférences de la déduction naturelle pour la logique propositionnelle\n• Distinguer logique classique et logique intuitionniste\n3) Donner du sens aux langages logique Course content: • Interprétation, modèle, satisfiabilité, validité\n• Correspondance avec le système de preuve: correction et complétude\n4) Calcul des prédicats\n• Manipulation des quantificateurs\n• Skolémisation, forme clausale\n• Théorie logique\n5) Raisonner automatiquement sur les formules logique\n• Algorithme d'unification\n• Algorithme de résolution Course name: http://example.org/course/UE_XLG3IU020</page1>\n        <page2>Pages: 187-188 HOURS CS Core = 29 KA Core = 11 MSF-Discrete: Discrete\nMathematics CS Core: 1\\. Sets, relations, functions, cardinality 2\\. Recursive\nmathematical definitions 3\\. Proof techniques (induction, proof by\ncontradiction) 4\\. Permutations, combinations, counting, pigeonhole principle\n5\\. Modular arithmetic 6\\. Logic: truth tables, connectives (operators),\ninference rules, formulas, normal forms, simple predicate logic 7\\. Graphs:\nbasic definitions 8\\. Order notation Illustrative Learning Outcomes: CS Core:\n1\\. Sets, Relations, and Functions, Cardinality a. Explain with examples the\nbasic terminology of functions, relations, and sets. b. Perform the operations\nassociated with sets, functions, and relations. c. Relate practical examples\nto the appropriate set, function, or relation model, and interpret the\nassociated operations and terminology in context. d. Calculate the size of a\nfinite set, including making use of the sum and product rules and inclusion-\nexclusion principle. e. Explain the difference between finite, countable, and\nuncountable sets. 2\\. Recursive mathematical definitions a. Apply recursive\ndefinitions of sequences or structures (e.g., Fibonacci numbers, linked lists,\nparse trees, fractals). b. Formulate inductive proofs of statements about\nrecursive definitions. c. Solve a variety of basic recurrence relations. d.\nAnalyze a problem to determine underlying recurrence relations. e. Given a\nrecursive/iterative code snippet, describe its underlying recurrence relation,\nhypothesize a closed form for the recurrence relation, and prove the\nhypothesis correct (usually, using induction). 3\\. Proof Techniques a.\nIdentify the proof technique used in a given proof. b. Outline the basic\nstructure of each proof technique (direct proof, proof by contradiction, and\ninduction) described in this unit. c. Apply each of the proof techniques\n(direct proof, proof by contradiction, and induction) correctly in the\nconstruction of a sound argument. d. Determine which type of proof is best for\na given problem. e. Explain the parallels between ideas of mathematical and/or\nstructural induction to recursion and recursively defined structures. f.\nExplain the relationship between weak and strong induction and give examples\nof the appropriate use of each. 4\\. Permutations, combinations, and counting\na. Apply counting arguments, including sum and product rules, inclusion-\nexclusion principle, and arithmetic/geometric progressions. b. Apply the\npigeonhole principle in the context of a formal proof. c. Compute permutations\nand combinations of a set, and interpret the meaning in the context of the\nspecific application. d. Map real-world applications to appropriate counting\nformalisms, such as determining the number of ways to arrange people around a\ntable, subject to constraints on the seating arrangement, or the number of\nways to determine certain hands in cards (e.g., a full house). 5\\. Modular\narithmetic a. Perform computations involving modular arithmetic. b. Explain\nthe notion of the greatest common divisor and apply Euclid's algorithm to\ncompute it. 6\\. Logic a. Convert logical statements from informal language to\npropositional and predicate logic expressions. b. Apply formal methods of\nsymbolic propositional and predicate logic, such as calculating validity of\nformulae, computing normal forms, or negating a logical statement. c. Use the\nrules of inference to construct proofs in propositional and predicate logic.\nd. Describe how symbolic logic can be used to model real-life situations or\napplications, including those arising in computing contexts such as software\nanalysis (e.g., program correctness), database queries, and algorithms. e.\nApply formal logic proofs and/or informal, but rigorous, logical reasoning to\nreal problems, such as predicting the behavior of software or solving problems\nsuch as puzzles. f. Describe the strengths and limitations of propositional\nand predicate logic. g. Explain what it means for a proof in propositional (or\npredicate) logic to be valid. 7\\. Graphs a. Illustrate by example the basic\nterminology of graph theory, and some of the properties and special cases of\ntypes of graphs, including trees. b. Demonstrate different traversal methods\nfor trees and graphs, including pre-, post-, and in-order traversal of trees,\nalong with breadth-first and depth-first search for graphs. c. Model a variety\nof real-world problems in computer science using appropriate forms of graphs\nand trees, such as representing a network topology, the organization of a\nhierarchical file system, or a social network. d. Show how concepts from\ngraphs and trees appear in data structures, algorithms, proof techniques\n(structural induction), and counting. KA Core: The recommended topics are the\nsame between CS core and KA-core, but with far more hours, the KA-core can\ncover these topics in depth and might include more computing-related\napplications.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/e47a8861bccd6ded0b1014780a9e471d19b35c4518152bfb18bbe944f2e796ba> .
_:Nabab6fb845894e929d97d424cdd75a74 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/664209bd2d4b9b34ac17d4c2c52a4f2bdf68a89b86c4d491b0aefc7e50e63736> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/has_schema_type> _:Nabab6fb845894e929d97d424cdd75a74 <http://groq.org/664209bd2d4b9b34ac17d4c2c52a4f2bdf68a89b86c4d491b0aefc7e50e63736> .
_:Nabab6fb845894e929d97d424cdd75a74 <http://schema.org/explain> "Covers core complexity analysis, asymptotic notations, and NP concepts but lacks some advanced topics like Savitch's theorem." <http://groq.org/664209bd2d4b9b34ac17d4c2c52a4f2bdf68a89b86c4d491b0aefc7e50e63736> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/664209bd2d4b9b34ac17d4c2c52a4f2bdf68a89b86c4d491b0aefc7e50e63736> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 1 Objectif: (résultats d'apprentissage)\n•\nÉvaluer une implémentation de structure de données en temps et en place mémoire (coûts minimal,\nmaximal, amorti)\n• Course content: et mise en pratique dans l’approche de résolution de problèmes « Diviser pour régner ». Course name: http://example.org/course/UE_XLG3IU010</page1>\n        <page2>Pages:91-93 HOURS CS Core = 6 KA Core = 3 AL-Complexity: Complexity CS Core:\n1\\. Complexity Analysis Framework a. Best, average, and worst-case performance\nof an algorithm b. Empirical and relative (Order of Growth) measurements c.\nInput size and primitive operations d. Time and space efficiency 2\\.\nAsymptotic complexity analysis (average and worst-case bounds) a. Big-O, Big-\nOmega, and Big-Theta formal notations b. Foundational Complexity Classes and\nRepresentative Examples/Problems i. O(1) Constant (e.g., array access) ii.\nO(log2 n) Logarithmic (e.g., binary search) iii. O(n) Linear (e.g., linear\nsearch) iv. O(n log2 n) Log Linear (e.g., mergesort) v. O(n2) Quadratic (e.g.,\nselection sort) vi. O(nc) Polynomial (e.g., O(n3) Gaussian elimination) vii.\nO(2n) Exponential (e.g., Knapsack, Satisfiability (SAT), Traveling Sales-\nPerson (TSP), all subsets) viii. O(n!) Factorial (e.g., Hamiltonian circuit,\nall permutations) 3\\. Empirical measurements of performance 4\\. Tractability\nand intractability a. P, NP, and NP-Complete Complexity Classes b. NP-Complete\nProblems (e.g., SAT, Knapsack, TSP) c. Reductions 5\\. Time and space tradeoffs\nin algorithms 92 KA Core: 6\\. Little-o, Little-Omega, and Little Theta\nnotations 7\\. Formal recursive analysis 8\\. Amortized analysis 9\\. Turing\nMachine-based models of complexity a. Time complexity i. P, NP, NP-C, and EXP\nclasses ii. Cook-Levin theorem b. Space Complexity i. NSpace and PSpace ii.\nSavitch's theorem Illustrative Learning Outcomes: CS Core: 1\\. Prepare a\npresentation that explains to first year students the basic concepts of\nalgorithmic complexity including best, average, and worst-case algorithm\nbehavior, Big- O, Omega, and Theta notations, complexity classes, time and\nspace tradeoffs, empirical measurement, and impact on practical problems. 2\\.\nUsing examples, explain each of the foundational complexity classes in this\nunit. 3\\. For each foundational complexity class in this unit, explain an\nalgorithm that demonstrates the associated runtime complexity. 4\\. For each\nalgorithm in the AL-Foundational unit, explain its runtime complexity class\nand why it belongs to this class. 5\\. Informally evaluate the foundational\ncomplexity class of simple algorithms. 6\\. Given a problem to program for\nwhich there may be several algorithmic approaches, evaluate them and determine\nwhich are feasible, and select one that is optimal in implementation and run-\ntime behavior. 7\\. Develop empirical studies to determine and validate\nhypotheses about the runtime complexity of various algorithms by running\nalgorithms on input of various sizes and comparing actual performance to the\ntheoretical analysis. 8\\. Explain examples that illustrate time-space\ntradeoffs of algorithms. 9\\. Explain how tree balance affects the efficiency\nof binary search tree operations. 10\\. Explain to a non-technical audience the\nsignificance of tractable versus intractable algorithms using an intuitive\nexplanation of Big-O complexity. 11\\. Explain the significance of NP-\nCompleteness. 12\\. Explain how NP-Hard is a lower bound and NP is an upper\nbound for NP-Completeness. 13\\. Explain examples of NP-complete problems. KA\nCore: 14\\. Use recurrence relations to evaluate the time complexity of\nrecursively defined algorithms. 15\\. Apply elementary recurrence relations\nusing a form of the Master Theorem. 16\\. Apply Big-O notation to give upper\ncase bounds on time/space complexity of algorithms. 17\\. Explain the Cook-\nLevin Theorem and the NP-Completeness of SAT. 93 18\\. Explain the classes P\nand NP. 19\\. Prove that a problem is NP-Complete by reducing a classic known\nNP-C problem to it (e.g., 3SAT and Clique). 20\\. Explain the P-space class and\nits relation to the EXP class.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/664209bd2d4b9b34ac17d4c2c52a4f2bdf68a89b86c4d491b0aefc7e50e63736> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU010" <http://groq.org/664209bd2d4b9b34ac17d4c2c52a4f2bdf68a89b86c4d491b0aefc7e50e63736> .
_:Nabab6fb845894e929d97d424cdd75a74 <http://schema.org/answer> "1" <http://groq.org/664209bd2d4b9b34ac17d4c2c52a4f2bdf68a89b86c4d491b0aefc7e50e63736> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/60c2d4b150df41fd6df9d1c785d4c7f755462e12bd55cc529e36b5bb25272e9a> .
_:N043791c9f8cc49ffb4bc9a396531e36f <http://schema.org/explain> "The lecture focuses on teaching methods, while the KU covers formal methods in software engineering, indicating no substantial overlap." <http://groq.org/60c2d4b150df41fd6df9d1c785d4c7f755462e12bd55cc529e36b5bb25272e9a> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/has_schema_type> _:N043791c9f8cc49ffb4bc9a396531e36f <http://groq.org/60c2d4b150df41fd6df9d1c785d4c7f755462e12bd55cc529e36b5bb25272e9a> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3AU010" <http://groq.org/60c2d4b150df41fd6df9d1c785d4c7f755462e12bd55cc529e36b5bb25272e9a> .
_:N043791c9f8cc49ffb4bc9a396531e36f <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/60c2d4b150df41fd6df9d1c785d4c7f755462e12bd55cc529e36b5bb25272e9a> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3AU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/60c2d4b150df41fd6df9d1c785d4c7f755462e12bd55cc529e36b5bb25272e9a> .
_:N043791c9f8cc49ffb4bc9a396531e36f <http://schema.org/answer> "0" <http://groq.org/60c2d4b150df41fd6df9d1c785d4c7f755462e12bd55cc529e36b5bb25272e9a> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/68f528c6a3fab15ab629885d24604f08d146ca24042d57b2343ca6c4cb9e8bbe> .
_:Nb6e9fb413a5e41f99f6fbf8a403a99a7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/68f528c6a3fab15ab629885d24604f08d146ca24042d57b2343ca6c4cb9e8bbe> .
_:Nb6e9fb413a5e41f99f6fbf8a403a99a7 <http://schema.org/answer> "0" <http://groq.org/68f528c6a3fab15ab629885d24604f08d146ca24042d57b2343ca6c4cb9e8bbe> .
_:Nb6e9fb413a5e41f99f6fbf8a403a99a7 <http://schema.org/explain> "The lecture focuses on ecological transition, unrelated to software engineering." <http://groq.org/68f528c6a3fab15ab629885d24604f08d146ca24042d57b2343ca6c4cb9e8bbe> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Enjeux de la transition écologique Objectif: (résultats d'apprentissage) Course content: Programme des 9 séances en ligne (d’environ 1h30 de travail chacune) : Course name: http://example.org/course/UE_XLG3TU020</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Maintenance and Evolution:\nCore Concepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nSE-Maintenance and Evolution. 2\\. Apply principles in practical scenarios. 3\\.\nAnalyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/68f528c6a3fab15ab629885d24604f08d146ca24042d57b2343ca6c4cb9e8bbe> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/has_schema_type> _:Nb6e9fb413a5e41f99f6fbf8a403a99a7 <http://groq.org/68f528c6a3fab15ab629885d24604f08d146ca24042d57b2343ca6c4cb9e8bbe> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU020" <http://groq.org/68f528c6a3fab15ab629885d24604f08d146ca24042d57b2343ca6c4cb9e8bbe> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/has_schema_type> _:N18f55f19ea9f4dcba7cad29c83531363 <http://groq.org/ce7ddedffe9b0f6cda8a96ed29a50e21148c4285d9b06d676e716826ef8c32aa> .
_:N18f55f19ea9f4dcba7cad29c83531363 <http://schema.org/answer> "1" <http://groq.org/ce7ddedffe9b0f6cda8a96ed29a50e21148c4285d9b06d676e716826ef8c32aa> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU030" <http://groq.org/ce7ddedffe9b0f6cda8a96ed29a50e21148c4285d9b06d676e716826ef8c32aa> .
_:N18f55f19ea9f4dcba7cad29c83531363 <http://schema.org/explain> "The lecture covers key concepts of SE-Formal Methods, applies principles in practical scenarios, and analyzes the importance of the topic in computing, aligning with the KU's learning outcomes." <http://groq.org/ce7ddedffe9b0f6cda8a96ed29a50e21148c4285d9b06d676e716826ef8c32aa> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU030</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/ce7ddedffe9b0f6cda8a96ed29a50e21148c4285d9b06d676e716826ef8c32aa> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/ce7ddedffe9b0f6cda8a96ed29a50e21148c4285d9b06d676e716826ef8c32aa> .
_:N18f55f19ea9f4dcba7cad29c83531363 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/ce7ddedffe9b0f6cda8a96ed29a50e21148c4285d9b06d676e716826ef8c32aa> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU030" <http://groq.org/496a8b9bab081f1b6dec10796ece64c40edebb6382430527f8948e1246f1935a> .
_:Nb672b9de89ee471aa0112f066c9f060e <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/496a8b9bab081f1b6dec10796ece64c40edebb6382430527f8948e1246f1935a> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/496a8b9bab081f1b6dec10796ece64c40edebb6382430527f8948e1246f1935a> .
_:Nb672b9de89ee471aa0112f066c9f060e <http://schema.org/answer> "0" <http://groq.org/496a8b9bab081f1b6dec10796ece64c40edebb6382430527f8948e1246f1935a> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/has_schema_type> _:Nb672b9de89ee471aa0112f066c9f060e <http://groq.org/496a8b9bab081f1b6dec10796ece64c40edebb6382430527f8948e1246f1935a> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU030</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/496a8b9bab081f1b6dec10796ece64c40edebb6382430527f8948e1246f1935a> .
_:Nb672b9de89ee471aa0112f066c9f060e <http://schema.org/explain> "Lecture focuses on teaching methods, not technical platform/programming details in KU." <http://groq.org/496a8b9bab081f1b6dec10796ece64c40edebb6382430527f8948e1246f1935a> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/c0236bfd283fa48598579e70bef6c21a5466a1261fd2e5fc99cc54ad4ba0af3a> .
_:N487a4e4a22684ff684690546c6a47865 <http://schema.org/explain> "Lecture focuses on digital creation tools/formats, while KU covers formal semantics theories (axiomatic, denotational, type systems) with no overlap." <http://groq.org/c0236bfd283fa48598579e70bef6c21a5466a1261fd2e5fc99cc54ad4ba0af3a> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU060" <http://groq.org/c0236bfd283fa48598579e70bef6c21a5466a1261fd2e5fc99cc54ad4ba0af3a> .
_:N487a4e4a22684ff684690546c6a47865 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/c0236bfd283fa48598579e70bef6c21a5466a1261fd2e5fc99cc54ad4ba0af3a> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Création numérique Objectif: (résultats d'apprentissage)\n- lister les principaux formats compris par les outils de création (Connaissance) ;\n- estimer les conséquences de choix de format sur la création (Analyse) ;\n- décrire les principaux paradigmes de création numérique (connaissance) ;\n- programmer une application de création numérique répondant à un cahier des\ncharges (Application) ;\n- concevoir un algorithme engendrant une création dans un format imposé (Application) ; Course content: - principaux supports de création numérique et limitations associées (bitmap,vectoriel, 2D, 3D,\ndécoupes, impressions, machine outils numériques,etc.);\n- principaux formats compris par les outils de création et les conséquences sur la création;\n- paradigmes de création numérique (impératif, événementiel, émergeant, etc.); Course name: http://example.org/course/UE_XLG4IU060</page1>\n        <page2>Pages: 145-146 HOURS CS Core = 0 KA Core = 0 FPL-Formalism: Formal Semantics\nNon-core: 1\\. Syntax vs semantics 2\\. Approaches to semantics: axiomatic,\noperational, denotational, type-based 3\\. Axiomatic semantics of abstract\nconstructs such as assignment, selection, iteration using precondition, post-\nconditions, and loop invariant 4\\. Operational semantics analysis of abstract\nconstructs and sequence of such as assignment, expression evaluation,\nselection, iteration using environment and store a. Symbolic execution b.\nConstraint checkers 5\\. Denotational semantics a. Lambda Calculus. (See also:\nAL-Models, FPL-Functional) 6\\. Proofs by induction over language semantics 7\\.\nFormal definitions and proofs for type systems (See also: FPL-Types) a.\nPropositions as types (implication as a function, conjunction as a product,\ndisjunction as a sum) b. Dependent types (universal quantification as\ndependent function, existential quantification as dependent product) c.\nParametricity Illustrative learning outcomes: Non-core: 1\\. Construct formal\nsemantics for a small language. 2\\. Write a lambda-calculus program and show\nits evaluation to a normal form. 3\\. Discuss the different approaches of\noperational, denotational, and axiomatic semantics. 4\\. Use induction to prove\nproperties of all programs in a language. 5\\. Use induction to prove\nproperties of all programs in a language that is well-typed according to a\nformally defined type system. 6\\. Use parametricity to establish the behavior\nof code given only its type.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/c0236bfd283fa48598579e70bef6c21a5466a1261fd2e5fc99cc54ad4ba0af3a> .
<http://example.org/course/UE_XLG4IU060> <http://example.org/has_schema_type> _:N487a4e4a22684ff684690546c6a47865 <http://groq.org/c0236bfd283fa48598579e70bef6c21a5466a1261fd2e5fc99cc54ad4ba0af3a> .
_:N487a4e4a22684ff684690546c6a47865 <http://schema.org/answer> "0" <http://groq.org/c0236bfd283fa48598579e70bef6c21a5466a1261fd2e5fc99cc54ad4ba0af3a> .
_:Nad411345f9724a5ba4c2dfe038cc1372 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/cf81baef5389299e37711efbae91a517b959cdf989bd78daab4dcfe58b3a1af1> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Bases de données 2 Objectif: (résultats d'apprentissage) Programmer en un langage procédurale lié à une base de données, par exemple PL/SQL ou Course content: Vues et contrôle d’accès\n5. Course name: http://example.org/course/UE_XLG3IU040</page1>\n        <page2>Pages: 118 HOURS CS Core = 2 KA Core = 4 DM-Querying: Query Construction CS\nCore: 1\\. SQL Query Formation a. Interactive SQL execution b. Programmatic\nexecution of an SQL query KA Core: 2\\. Relational Algebra 3\\. SQL a. Data\ndefinition including integrity and other constraint specifications b. Update\nsublanguage Non-core: 4\\. Relational Calculus 5\\. QBE and 4th-generation\nenvironments 6\\. Different ways to invoke non-procedural queries in\nconventional languages 7\\. Introduction to other major query languages (e.g.,\nXPATH, SPARQL) 8\\. Stored procedures Illustrative Learning Outcomes: CS Core:\n1\\. Compose SQL queries that incorporate select, project, join, union,\nintersection, set difference, and set division. 2\\. Determine when a nested\nSQL query is correlated or not. 3\\. Iterate over data retrieved\nprogrammatically from a database via an SQL query. KA Core: 4\\. Define, in\nSQL, a relation schema, including all integrity constraints and delete/update\ntriggers. 5\\. Compose an SQL query to update a tuple in a relation.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/cf81baef5389299e37711efbae91a517b959cdf989bd78daab4dcfe58b3a1af1> .
_:Nad411345f9724a5ba4c2dfe038cc1372 <http://schema.org/answer> "1" <http://groq.org/cf81baef5389299e37711efbae91a517b959cdf989bd78daab4dcfe58b3a1af1> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/cf81baef5389299e37711efbae91a517b959cdf989bd78daab4dcfe58b3a1af1> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/has_schema_type> _:Nad411345f9724a5ba4c2dfe038cc1372 <http://groq.org/cf81baef5389299e37711efbae91a517b959cdf989bd78daab4dcfe58b3a1af1> .
_:Nad411345f9724a5ba4c2dfe038cc1372 <http://schema.org/explain> "The lecture covers topics such as SQL query formation, relational algebra, and data definition, which are all part of the KU." <http://groq.org/cf81baef5389299e37711efbae91a517b959cdf989bd78daab4dcfe58b3a1af1> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU040" <http://groq.org/cf81baef5389299e37711efbae91a517b959cdf989bd78daab4dcfe58b3a1af1> .
_:N778fe3cbc4d242adb8c24c47dd0a7f5c <http://schema.org/answer> "1" <http://groq.org/cc6c248ffa5144eec2ff0ed6cded71511c7d7f301ae86fd7632fcaa5e222de29> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 2 Objectif: (résultats d'apprentissage)\ndonnées (itératifs et récursifs) Course content: Structures de données non-linéaires associatives (table associative, ensemble, classe-union) Course name: http://example.org/course/UE_XLG4IU010</page1>\n        <page2>Pages: 133 HOURS CS Core = 0 KA Core = 2 + 1 (MSF) FPL-Logic: Logic\nProgramming KA Core: 1\\. Universal vs existential quantifiers. (See also: AI-\nLRR, MSF-Discrete) 2\\. First order predicate logic vs higher order logic. (See\nalso: AI-LRR, MSF-Discrete) 3\\. Expressing complex relations using logical\nconnectives and simpler relations. 4\\. Definitions of Horn clause, facts,\ngoals and subgoals. 5\\. Unification and unification algorithm; unification vs\nassertion vs expression evaluation. 6\\. Mixing relations with functions. (See\nalso: MSF-Discrete) 7\\. Cuts, backtracking, and non-determinism. 8\\. Closed-\nworld vs open-world assumptions. Non-core: 9\\. Memory overhead of variable\ncopying in handling iterative programs. 10\\. Programming constructs to store\npartial computation and pruning search trees. 11\\. Mixing functional\nprogramming and logic programming using concepts such as equational logic,\nnarrowing, residuation, and semantic unification. (See also: FPL-Functional)\n12\\. Higher-order, constraint, and inductive logic programming. (See also: AI-\nLRR) 13\\. Integration with other programming paradigms such as object-oriented\nprogramming. 14\\. Advance programming constructs such as difference-lists,\ncreating user defined data structures, set of, etc. Illustrative learning\noutcomes: KA Core: 1\\. Use a logic language to implement a conventional\nalgorithm. 2\\. Use a logic language to implement an algorithm employing\nimplicit search using clauses, relations, and cuts. 3\\. Use a simple\nillustrative example to show correspondence between First Order Predicate\nLogic (FOPL) and logic programs using Horn clauses. 4\\. Use examples to\nillustrate the unification algorithm and its role of parameter-passing in\nquery reduction. 5\\. Use simple logic programs interleaving relations,\nfunctions, and recursive programming such as factorial and Fibonacci numbers\nand simple complex relationships between entities and illustrate execution and\nparameter-passing using unification and backtracking. Non-core: 6\\. Illustrate\ncomputation of simple programs such as Fibonacci and show overhead of\nrecomputation, and then show how to improve execution overhead.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/cc6c248ffa5144eec2ff0ed6cded71511c7d7f301ae86fd7632fcaa5e222de29> .
_:N778fe3cbc4d242adb8c24c47dd0a7f5c <http://schema.org/explain> "The lecture covers a significant portion of the KU, including topics such as universal and existential quantifiers, logical connectives, and unification, which are core components of the KU." <http://groq.org/cc6c248ffa5144eec2ff0ed6cded71511c7d7f301ae86fd7632fcaa5e222de29> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU010" <http://groq.org/cc6c248ffa5144eec2ff0ed6cded71511c7d7f301ae86fd7632fcaa5e222de29> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/cc6c248ffa5144eec2ff0ed6cded71511c7d7f301ae86fd7632fcaa5e222de29> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/has_schema_type> _:N778fe3cbc4d242adb8c24c47dd0a7f5c <http://groq.org/cc6c248ffa5144eec2ff0ed6cded71511c7d7f301ae86fd7632fcaa5e222de29> .
_:N778fe3cbc4d242adb8c24c47dd0a7f5c <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/cc6c248ffa5144eec2ff0ed6cded71511c7d7f301ae86fd7632fcaa5e222de29> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Développement web client Objectif: (résultats d'apprentissage) Course content: approfondir les connaissances dans le langage TypeScript, déjà vu en L1\nprésenter un framework de développement web écrit en TypeScript, comme Angular ou Vue. Course name: http://example.org/course/UE_XLG4IU050</page1>\n        <page2>Pages : 168-169 CS Core : 20, KA Core : None CS Core: 1\\. Basic concepts such\nas variables, primitive data types, expressions, and their evaluation 2\\. How\nimperative programs work: state and state transitions on execution of\nstatements, flow of control 3\\. Basic constructs such as assignment\nstatements, conditional and iterative statements, basic I/O 4\\. Key modularity\nconstructs such as functions (and methods and classes, if supported in the\nlanguage) and related concepts like parameter passing, scope, abstraction,\ndata encapsulation (See also: FPL-OOP) 5\\. Input and output using files and\nAPIs 6\\. Structured data types available in the chosen programming language\nlike sequences (e.g., arrays, lists), associative containers (e.g.,\ndictionaries, maps), others (e.g., sets, tuples) and when and how to use them\n(See also: AL-Foundational) 7\\. Libraries and frameworks provided by the\nlanguage (when/where applicable) 8\\. Recursion 9\\. Dealing with runtime errors\nin programs (e.g., exception handling). 10\\. Basic concepts of programming\nerrors, testing, and debugging (See also: SE-Construction, SEC-Coding) 11\\.\nDocumenting/commenting code at the program and module level.(See also: SE-\nConstruction) 12\\. Develop a security mindset. (See also: SEC-Foundations)\nIllustrative Learning Outcomes: CS Core: In these learning outcomes, the term\n\"develop\" means \"design, write, test, and debug.\" 1\\. Develop programs that\nuse the fundamental programming constructs: assignment and expressions, basic\nI/O, conditional and iterative statements. 2\\. Develop programs using\nfunctions with parameter passing. 3\\. Develop programs that effectively use\nthe different structured data types provided in the language like\narrays/lists, dictionaries, and sets. 4\\. Develop programs that use file I/O\nto provide data persistence across multiple executions. 5\\. Develop programs\nthat use language-provided libraries and frameworks (where applicable). 6\\.\nDevelop programs that use APIs to access or update data (e.g., from the web).\n7\\. Develop programs that create simple classes and instantiate objects of\nthose classes (if supported by the language). 8\\. Explain the concept of\nrecursion and identify when and how to use it effectively. 9\\. Develop\nrecursive functions. 10\\. Develop programs that can handle runtime errors.\n11\\. Read a given program and explain what it does. 12\\. Write comments for a\nprogram or a module specifying what it does. 13\\. Trace the flow of control\nduring the execution of a program. 14\\. Use appropriate terminology to\nidentify elements of a program (e.g., identifier, operator, operand).</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/9bbb4ba8bce7ece0a5251f9bc7d02b1883de3f66466614942f1d65f6866808f5> .
_:N8c524c03d25742e79fc978bf860a9859 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/9bbb4ba8bce7ece0a5251f9bc7d02b1883de3f66466614942f1d65f6866808f5> .
_:N8c524c03d25742e79fc978bf860a9859 <http://schema.org/explain> "The lecture covers a significant portion of the KU, including topics such as TypeScript, Angular, and Vue, as well as fundamental programming constructs, data types, and error handling." <http://groq.org/9bbb4ba8bce7ece0a5251f9bc7d02b1883de3f66466614942f1d65f6866808f5> .
<http://example.org/course/UE_XLG4IU050> <http://example.org/has_schema_type> _:N8c524c03d25742e79fc978bf860a9859 <http://groq.org/9bbb4ba8bce7ece0a5251f9bc7d02b1883de3f66466614942f1d65f6866808f5> .
_:N8c524c03d25742e79fc978bf860a9859 <http://schema.org/answer> "1" <http://groq.org/9bbb4ba8bce7ece0a5251f9bc7d02b1883de3f66466614942f1d65f6866808f5> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU050" <http://groq.org/9bbb4ba8bce7ece0a5251f9bc7d02b1883de3f66466614942f1d65f6866808f5> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/9bbb4ba8bce7ece0a5251f9bc7d02b1883de3f66466614942f1d65f6866808f5> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/has_schema_type> _:N9d9ca49104fe44e794a443ad145bac6e <http://groq.org/326a44462582b2d8d5ae67bb2bb5833e5465125d3e713833fa24b504da2c6346> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/326a44462582b2d8d5ae67bb2bb5833e5465125d3e713833fa24b504da2c6346> .
_:N9d9ca49104fe44e794a443ad145bac6e <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/326a44462582b2d8d5ae67bb2bb5833e5465125d3e713833fa24b504da2c6346> .
_:N9d9ca49104fe44e794a443ad145bac6e <http://schema.org/answer> "0" <http://groq.org/326a44462582b2d8d5ae67bb2bb5833e5465125d3e713833fa24b504da2c6346> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Enjeux de la transition écologique Objectif: (résultats d'apprentissage) Course content: Programme des 9 séances en ligne (d’environ 1h30 de travail chacune) : Course name: http://example.org/course/UE_XLG3TU020</page1>\n        <page2>Pages: 146-147 HOURS CS Core = 0 KA Core = 0 FPL-Design: Design Principles of\nProgramming Languages Non-core: 1\\. Language design principles a. Simplicity\nb. Security (See also: SEC-Coding) c. Fast translation d. Efficient object\ncode e. Orthogonality f. Readability g. Completeness h. Implementation\nstrategies 2\\. Designing a language to fit a specific domain or problem 3\\.\nInteroperability between programming languages 4\\. Language portability 5\\.\nFormal description of a programming language 6\\. Green computing principles\n(See also: SEP-Sustainability) Illustrative Learning Outcomes: Non-core: 1\\.\nUnderstand what constitutes good language design and apply that knowledge to\nevaluate a real programming language.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/326a44462582b2d8d5ae67bb2bb5833e5465125d3e713833fa24b504da2c6346> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU020" <http://groq.org/326a44462582b2d8d5ae67bb2bb5833e5465125d3e713833fa24b504da2c6346> .
_:N9d9ca49104fe44e794a443ad145bac6e <http://schema.org/explain> "Lecture focuses on ecological transition, while KU covers programming language design principles with minimal overlap except brief mention of green computing." <http://groq.org/326a44462582b2d8d5ae67bb2bb5833e5465125d3e713833fa24b504da2c6346> .
_:N57d2df93f7b0495983ac3b006eb2a047 <http://schema.org/answer> "0" <http://groq.org/6b37063de1197f01def8ceedc85b1b1d9c8ab010c02c5a177501a78b9ce7cfe3> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/has_schema_type> _:N57d2df93f7b0495983ac3b006eb2a047 <http://groq.org/6b37063de1197f01def8ceedc85b1b1d9c8ab010c02c5a177501a78b9ce7cfe3> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/6b37063de1197f01def8ceedc85b1b1d9c8ab010c02c5a177501a78b9ce7cfe3> .
_:N57d2df93f7b0495983ac3b006eb2a047 <http://schema.org/explain> "No overlap in topics; lecture focuses on professional skills, KU on technical testing/quality assurance." <http://groq.org/6b37063de1197f01def8ceedc85b1b1d9c8ab010c02c5a177501a78b9ce7cfe3> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S4 Objectif: (résultats d'apprentissage)\nfaire et savoir-être) et d'un plan d'actions sur les prochaines années : à l'écrit et à l'oral\n- d'identitier et d'animer son réseau (professionnel et élargi)\n- de créer et de faire vivre ses profils numériques professionnels\n- de mener une enquête métier auprès d'un professionnel et de la restituer Course content: - présentation orale de la restitution de l'enquête et des recherches sur le métier\n- équivalent de 8 TD + présentation orale des enquêtes:\n- identication de ses valeurs\n- indentification de ses compétences\n- consrtruction de son projet professionnel et personnel\n- présentation de son projet Course name: http://example.org/course/UE_XLG4TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Testing and Quality Assurance:\nCore Concepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nSE-Testing and Quality Assurance. 2\\. Apply principles in practical scenarios.\n3\\. Analyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/6b37063de1197f01def8ceedc85b1b1d9c8ab010c02c5a177501a78b9ce7cfe3> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU010" <http://groq.org/6b37063de1197f01def8ceedc85b1b1d9c8ab010c02c5a177501a78b9ce7cfe3> .
_:N57d2df93f7b0495983ac3b006eb2a047 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/6b37063de1197f01def8ceedc85b1b1d9c8ab010c02c5a177501a78b9ce7cfe3> .
_:N79872b7ff4e8459684fd95e587371b67 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/283e53fdc2ed1200cd5e0bd2d046f2daa2d8ce4bc22a81192c9f5e11d88754c9> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/has_schema_type> _:N79872b7ff4e8459684fd95e587371b67 <http://groq.org/283e53fdc2ed1200cd5e0bd2d046f2daa2d8ce4bc22a81192c9f5e11d88754c9> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/283e53fdc2ed1200cd5e0bd2d046f2daa2d8ce4bc22a81192c9f5e11d88754c9> .
_:N79872b7ff4e8459684fd95e587371b67 <http://schema.org/answer> "0" <http://groq.org/283e53fdc2ed1200cd5e0bd2d046f2daa2d8ce4bc22a81192c9f5e11d88754c9> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Enjeux de la transition écologique Objectif: (résultats d'apprentissage) Course content: Programme des 9 séances en ligne (d’environ 1h30 de travail chacune) : Course name: http://example.org/course/UE_XLG3TU020</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Maintenance and Evolution:\nCore Concepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nSE-Maintenance and Evolution. 2\\. Apply principles in practical scenarios. 3\\.\nAnalyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/283e53fdc2ed1200cd5e0bd2d046f2daa2d8ce4bc22a81192c9f5e11d88754c9> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU020" <http://groq.org/283e53fdc2ed1200cd5e0bd2d046f2daa2d8ce4bc22a81192c9f5e11d88754c9> .
_:N79872b7ff4e8459684fd95e587371b67 <http://schema.org/explain> "No overlap in topics; lecture focuses on ecological transition, KU on software maintenance principles." <http://groq.org/283e53fdc2ed1200cd5e0bd2d046f2daa2d8ce4bc22a81192c9f5e11d88754c9> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/85c0e4875f984f87d4b9ba774f29e3f6a208f416b34ce0b62ca29aa87c2367d5> .
_:N18485f7708f444f68c69e6081d3d5a9c <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/85c0e4875f984f87d4b9ba774f29e3f6a208f416b34ce0b62ca29aa87c2367d5> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/has_schema_type> _:N18485f7708f444f68c69e6081d3d5a9c <http://groq.org/85c0e4875f984f87d4b9ba774f29e3f6a208f416b34ce0b62ca29aa87c2367d5> .
_:N18485f7708f444f68c69e6081d3d5a9c <http://schema.org/answer> "0" <http://groq.org/85c0e4875f984f87d4b9ba774f29e3f6a208f416b34ce0b62ca29aa87c2367d5> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algèbre linéaire Objectif: (résultats d'apprentissage) Appliquer un algorithme adéquat pour résoudre un système linéaire\n• Course content: • Course name: http://example.org/course/UE_XLG4MU060</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/85c0e4875f984f87d4b9ba774f29e3f6a208f416b34ce0b62ca29aa87c2367d5> .
_:N18485f7708f444f68c69e6081d3d5a9c <http://schema.org/explain> "The lecture focuses on linear algebra and solving linear systems, while the KU covers development platforms and programming paradigms." <http://groq.org/85c0e4875f984f87d4b9ba774f29e3f6a208f416b34ce0b62ca29aa87c2367d5> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4MU060" <http://groq.org/85c0e4875f984f87d4b9ba774f29e3f6a208f416b34ce0b62ca29aa87c2367d5> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/5982fd020b342158f937a9bba1b1f0d8b7be75f14e03d615662ca9d0da52512b> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/has_schema_type> _:N71584e8c5e294615abda9b2623f42a48 <http://groq.org/5982fd020b342158f937a9bba1b1f0d8b7be75f14e03d615662ca9d0da52512b> .
_:N71584e8c5e294615abda9b2623f42a48 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/5982fd020b342158f937a9bba1b1f0d8b7be75f14e03d615662ca9d0da52512b> .
_:N71584e8c5e294615abda9b2623f42a48 <http://schema.org/answer> "0" <http://groq.org/5982fd020b342158f937a9bba1b1f0d8b7be75f14e03d615662ca9d0da52512b> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Bases de données 2 Objectif: (résultats d'apprentissage) Programmer en un langage procédurale lié à une base de données, par exemple PL/SQL ou Course content: Vues et contrôle d’accès\n5. Course name: http://example.org/course/UE_XLG3IU040</page1>\n        <page2>Pages : 168-169 CS Core : 20, KA Core : None CS Core: 1\\. Basic concepts such\nas variables, primitive data types, expressions, and their evaluation 2\\. How\nimperative programs work: state and state transitions on execution of\nstatements, flow of control 3\\. Basic constructs such as assignment\nstatements, conditional and iterative statements, basic I/O 4\\. Key modularity\nconstructs such as functions (and methods and classes, if supported in the\nlanguage) and related concepts like parameter passing, scope, abstraction,\ndata encapsulation (See also: FPL-OOP) 5\\. Input and output using files and\nAPIs 6\\. Structured data types available in the chosen programming language\nlike sequences (e.g., arrays, lists), associative containers (e.g.,\ndictionaries, maps), others (e.g., sets, tuples) and when and how to use them\n(See also: AL-Foundational) 7\\. Libraries and frameworks provided by the\nlanguage (when/where applicable) 8\\. Recursion 9\\. Dealing with runtime errors\nin programs (e.g., exception handling). 10\\. Basic concepts of programming\nerrors, testing, and debugging (See also: SE-Construction, SEC-Coding) 11\\.\nDocumenting/commenting code at the program and module level.(See also: SE-\nConstruction) 12\\. Develop a security mindset. (See also: SEC-Foundations)\nIllustrative Learning Outcomes: CS Core: In these learning outcomes, the term\n\"develop\" means \"design, write, test, and debug.\" 1\\. Develop programs that\nuse the fundamental programming constructs: assignment and expressions, basic\nI/O, conditional and iterative statements. 2\\. Develop programs using\nfunctions with parameter passing. 3\\. Develop programs that effectively use\nthe different structured data types provided in the language like\narrays/lists, dictionaries, and sets. 4\\. Develop programs that use file I/O\nto provide data persistence across multiple executions. 5\\. Develop programs\nthat use language-provided libraries and frameworks (where applicable). 6\\.\nDevelop programs that use APIs to access or update data (e.g., from the web).\n7\\. Develop programs that create simple classes and instantiate objects of\nthose classes (if supported by the language). 8\\. Explain the concept of\nrecursion and identify when and how to use it effectively. 9\\. Develop\nrecursive functions. 10\\. Develop programs that can handle runtime errors.\n11\\. Read a given program and explain what it does. 12\\. Write comments for a\nprogram or a module specifying what it does. 13\\. Trace the flow of control\nduring the execution of a program. 14\\. Use appropriate terminology to\nidentify elements of a program (e.g., identifier, operator, operand).</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/5982fd020b342158f937a9bba1b1f0d8b7be75f14e03d615662ca9d0da52512b> .
_:N71584e8c5e294615abda9b2623f42a48 <http://schema.org/explain> "Lecture focuses on database views/access control, while KU covers general programming fundamentals." <http://groq.org/5982fd020b342158f937a9bba1b1f0d8b7be75f14e03d615662ca9d0da52512b> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU040" <http://groq.org/5982fd020b342158f937a9bba1b1f0d8b7be75f14e03d615662ca9d0da52512b> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Introduction aux probabilités Objectif: (résultats d'apprentissage)\n• Course content: Définition et calcul de la probabilité conditionnelle\n• Course name: http://example.org/course/UE_XLG3MU050</page1>\n        <page2>Pages: 188-189 HOURS CS Core = 11 KA Core = 29 MSF-Probability: Probability CS\nCore: 1\\. Basic notions: sample spaces, events, probability, conditional\nprobability, Bayes' rule 2\\. Discrete random variables and distributions 3\\.\nContinuous random variables and distributions 4\\. Expectation, variance, law\nof large numbers, central limit theorem 5\\. Conditional distributions and\nexpectation 6\\. Applications to computing, the difference between probability\nand statistics (as subjects) KA Core: The recommended topics are the same\nbetween CS core and KA-core, but with far more hours, the KA-core can cover\nthese topics in depth and might include more computing-related applications.\nIllustrative Learning Outcomes: CS Core: 1\\. Basic notions: sample spaces,\nevents, probability, conditional probability, Bayes' rule a. Translate a prose\ndescription of a probabilistic process into a formal setting of sample spaces,\noutcome probabilities, and events. b. Calculate the probability of simple\nevents. c. Determine whether two events are independent. d. Compute\nconditional probabilities, including through applying (and explaining) Bayes'\nRule. 2\\. Discrete random variables and distributions a. Define the concept of\na random variable and indicator random variable. b. Determine whether two\nrandom variables are independent. c. Identify common discrete distributions\n(e.g., uniform, Bernoulli, binomial, geometric). 3\\. Continuous random\nvariables and distributions a. Identify common continuous distributions (e.g.,\nuniform, normal, exponential). b. Calculate probabilities using cumulative\ndensity functions. 4\\. Expectation, variance, law of large numbers, central\nlimit theorem a. Define the concept of expectation and variance of a random\nvariable. b. Compute the expected value and variance of simple or common\ndiscrete/continuous random variables. c. Explain the relevance of the law of\nlarge numbers and central limit theorem to probability calculations. 5\\.\nConditional distributions and expectation a. Explain the distinction between\njoint, marginal, and conditional distributions. b. Compute marginal and\nconditional distributions from a full distribution, for both discrete and\ncontinuous random variables. c. Compute conditional expectations for both\ndiscrete and continuous random variables. 6\\. Applications to computing a.\nDescribe how probability can be used to model real-life situations or\napplications, such as predictive text, hash tables, and quantum computation.\nb. Apply probabilistic processes to solving computational problems, such as\nthrough randomized algorithms or in security contexts.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/cdce5f28c65b2fdb51718557234dbbd94299eb1135c263bbd55d7ecec882202c> .
_:Nbb0efeec42f1442dbbed9f71d06941fb <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/cdce5f28c65b2fdb51718557234dbbd94299eb1135c263bbd55d7ecec882202c> .
_:Nbb0efeec42f1442dbbed9f71d06941fb <http://schema.org/answer> "1" <http://groq.org/cdce5f28c65b2fdb51718557234dbbd94299eb1135c263bbd55d7ecec882202c> .
_:Nbb0efeec42f1442dbbed9f71d06941fb <http://schema.org/explain> "The lecture covers the basic notions of probability, conditional probability, Bayes' rule, and discrete and continuous random variables, which is a significant subset of the KU." <http://groq.org/cdce5f28c65b2fdb51718557234dbbd94299eb1135c263bbd55d7ecec882202c> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/cdce5f28c65b2fdb51718557234dbbd94299eb1135c263bbd55d7ecec882202c> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3MU050" <http://groq.org/cdce5f28c65b2fdb51718557234dbbd94299eb1135c263bbd55d7ecec882202c> .
<http://example.org/course/UE_XLG3MU050> <http://example.org/has_schema_type> _:Nbb0efeec42f1442dbbed9f71d06941fb <http://groq.org/cdce5f28c65b2fdb51718557234dbbd94299eb1135c263bbd55d7ecec882202c> .
_:Nf3f57199472d45db8da3f7b882ef00f5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/846f66ea0202e868339bf5c54c766c40df4a0eb9a9b2612ef78d5fbbf4d5b937> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/846f66ea0202e868339bf5c54c766c40df4a0eb9a9b2612ef78d5fbbf4d5b937> .
_:Nf3f57199472d45db8da3f7b882ef00f5 <http://schema.org/answer> "0" <http://groq.org/846f66ea0202e868339bf5c54c766c40df4a0eb9a9b2612ef78d5fbbf4d5b937> .
_:Nf3f57199472d45db8da3f7b882ef00f5 <http://schema.org/explain> "Lecture focuses on teaching methods, not platform-specific programming content." <http://groq.org/846f66ea0202e868339bf5c54c766c40df4a0eb9a9b2612ef78d5fbbf4d5b937> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/has_schema_type> _:Nf3f57199472d45db8da3f7b882ef00f5 <http://groq.org/846f66ea0202e868339bf5c54c766c40df4a0eb9a9b2612ef78d5fbbf4d5b937> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU020" <http://groq.org/846f66ea0202e868339bf5c54c766c40df4a0eb9a9b2612ef78d5fbbf4d5b937> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Unité Enseignement de Découverte Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU020</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/846f66ea0202e868339bf5c54c766c40df4a0eb9a9b2612ef78d5fbbf4d5b937> .
_:Nb155d4de1ccb4ccd873b94c9d27a406c <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/14f5e58c06e97c8f73fe0ca070eb08da77063f96b5b29f93892436074ce0d247> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/14f5e58c06e97c8f73fe0ca070eb08da77063f96b5b29f93892436074ce0d247> .
_:Nb155d4de1ccb4ccd873b94c9d27a406c <http://schema.org/answer> "0" <http://groq.org/14f5e58c06e97c8f73fe0ca070eb08da77063f96b5b29f93892436074ce0d247> .
_:Nb155d4de1ccb4ccd873b94c9d27a406c <http://schema.org/explain> "No overlap in topics; lecture is linear algebra, KU is about programming platforms and languages." <http://groq.org/14f5e58c06e97c8f73fe0ca070eb08da77063f96b5b29f93892436074ce0d247> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/has_schema_type> _:Nb155d4de1ccb4ccd873b94c9d27a406c <http://groq.org/14f5e58c06e97c8f73fe0ca070eb08da77063f96b5b29f93892436074ce0d247> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algèbre linéaire Objectif: (résultats d'apprentissage) Appliquer un algorithme adéquat pour résoudre un système linéaire\n• Course content: • Course name: http://example.org/course/UE_XLG4MU060</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/14f5e58c06e97c8f73fe0ca070eb08da77063f96b5b29f93892436074ce0d247> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4MU060" <http://groq.org/14f5e58c06e97c8f73fe0ca070eb08da77063f96b5b29f93892436074ce0d247> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/is_aligned_with> _:N90eedc90e23447729ddf566fa8f4d6db <http://faiss.org/44106c1fdce2201b86969cbb0eb5d92ee12489fd17975a4f83018d1b93bb5d78> .
_:N90eedc90e23447729ddf566fa8f4d6db <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://faiss.org/44106c1fdce2201b86969cbb0eb5d92ee12489fd17975a4f83018d1b93bb5d78> .
_:Nce5a722354cc476b86e87fcf8978db2e <http://example.org/has_score> "0.6342715"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/44106c1fdce2201b86969cbb0eb5d92ee12489fd17975a4f83018d1b93bb5d78> .
_:N90eedc90e23447729ddf566fa8f4d6db <http://example.org/has_score> "0.6372254"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/44106c1fdce2201b86969cbb0eb5d92ee12489fd17975a4f83018d1b93bb5d78> .
<http://example.org/faiss> <http://example.org/input> "Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU030" <http://faiss.org/44106c1fdce2201b86969cbb0eb5d92ee12489fd17975a4f83018d1b93bb5d78> .
_:N7f773fd2ca4146e2bcb31b775cad2110 <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://faiss.org/44106c1fdce2201b86969cbb0eb5d92ee12489fd17975a4f83018d1b93bb5d78> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/is_aligned_with> _:Nce5a722354cc476b86e87fcf8978db2e <http://faiss.org/44106c1fdce2201b86969cbb0eb5d92ee12489fd17975a4f83018d1b93bb5d78> .
_:N7f773fd2ca4146e2bcb31b775cad2110 <http://example.org/has_score> "0.6454415"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/44106c1fdce2201b86969cbb0eb5d92ee12489fd17975a4f83018d1b93bb5d78> .
_:Nce5a722354cc476b86e87fcf8978db2e <http://example.org/has_chunk> "Illustrative Learning Outcomes:\n1. Explain the graphics rendering pipeline.\n2. Differentiate between rasterization and ray tracing.\n3. Apply transformations to 2D and 3D models." <http://faiss.org/44106c1fdce2201b86969cbb0eb5d92ee12489fd17975a4f83018d1b93bb5d78> .
_:N90eedc90e23447729ddf566fa8f4d6db <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/44106c1fdce2201b86969cbb0eb5d92ee12489fd17975a4f83018d1b93bb5d78> .
_:N7f773fd2ca4146e2bcb31b775cad2110 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://faiss.org/44106c1fdce2201b86969cbb0eb5d92ee12489fd17975a4f83018d1b93bb5d78> .
_:Nce5a722354cc476b86e87fcf8978db2e <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Graphics_and_Interactive_Techniques_GIT/GIT-Fundamentals.txt> <http://faiss.org/44106c1fdce2201b86969cbb0eb5d92ee12489fd17975a4f83018d1b93bb5d78> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/is_aligned_with> _:N7f773fd2ca4146e2bcb31b775cad2110 <http://faiss.org/44106c1fdce2201b86969cbb0eb5d92ee12489fd17975a4f83018d1b93bb5d78> .
_:N2b9ad2a80dda4362b47baa095029a372 <http://schema.org/answer> "1" <http://groq.org/f2f25135caa653dbbd499ec19cbd598adecf3a677e7b5838676e231778543ed9> .
<http://example.org/course/UE_XLG4IU020> <http://example.org/has_schema_type> _:N2b9ad2a80dda4362b47baa095029a372 <http://groq.org/f2f25135caa653dbbd499ec19cbd598adecf3a677e7b5838676e231778543ed9> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Langages et automates Objectif: (résultats d'apprentissage)\n5. Course content: • Langages algébriques\n- Grammaire algébrique\n- Arbre de dérivation\n- Automates à pile\n• Hiérarchie de Chomsky\n- Classification des grammaires;\n- Algorithmes de reconnaissance pour les grammaires de type 1 et 2\n• Analyse lexicale et syntaxique\n- TP de flex et bison Course name: http://example.org/course/UE_XLG4IU020</page1>\n        <page2>Pages: 141 HOURS CS Core = 0 KA Core = 0 FPL-Syntax: Syntax Analysis Non-core:\n1\\. Regular grammars vs context-free grammars (See also: AL-Models) 2\\.\nScanning and parsing based on language specifications 3\\. Lexical analysis\nusing regular expressions 4\\. Tokens and their use 5\\. Parsing strategies\nincluding top-down (e.g., recursive descent, or LL) and bottom-up (e.g., LR or\nGLR) techniques a. Lookahead tables and their application to parsing 6\\.\nLanguage theory: a. Chomsky hierarchy (See also: AL-Models) b. Left-\nmost/right-most derivation and ambiguity c. Grammar transformation 7\\. Parser\nerror recovery mechanisms 8\\. Generating scanners and parsers from declarative\nspecifications Illustrative learning outcomes: Non-core: 1\\. Use formal\ngrammars to specify the syntax of languages. 2\\. Illustrate the role of\nlookahead tables in parsing. 3\\. Use declarative tools to generate parsers and\nscanners. 4\\. Recognize key issues in syntax definitions: ambiguity,\nassociativity, precedence.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/f2f25135caa653dbbd499ec19cbd598adecf3a677e7b5838676e231778543ed9> .
_:N2b9ad2a80dda4362b47baa095029a372 <http://schema.org/explain> "The lecture covers topics such as grammatical hierarchy, parsing strategies, and language theory, which are substantially covered in the KU." <http://groq.org/f2f25135caa653dbbd499ec19cbd598adecf3a677e7b5838676e231778543ed9> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/f2f25135caa653dbbd499ec19cbd598adecf3a677e7b5838676e231778543ed9> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU020" <http://groq.org/f2f25135caa653dbbd499ec19cbd598adecf3a677e7b5838676e231778543ed9> .
_:N2b9ad2a80dda4362b47baa095029a372 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/f2f25135caa653dbbd499ec19cbd598adecf3a677e7b5838676e231778543ed9> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU040" <http://groq.org/73ccb86edf1aa030a71bda08db69dde15dccf25b1f8e735bdc23bd6feb978e1f> .
_:N349406e7b9ad4e1e9772d031d8fb1f93 <http://schema.org/explain> "Lecture focuses on business economics, KU covers AR technology. No substantial overlap." <http://groq.org/73ccb86edf1aa030a71bda08db69dde15dccf25b1f8e735bdc23bd6feb978e1f> .
_:N349406e7b9ad4e1e9772d031d8fb1f93 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/73ccb86edf1aa030a71bda08db69dde15dccf25b1f8e735bdc23bd6feb978e1f> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/73ccb86edf1aa030a71bda08db69dde15dccf25b1f8e735bdc23bd6feb978e1f> .
_:N349406e7b9ad4e1e9772d031d8fb1f93 <http://schema.org/answer> "0" <http://groq.org/73ccb86edf1aa030a71bda08db69dde15dccf25b1f8e735bdc23bd6feb978e1f> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/has_schema_type> _:N349406e7b9ad4e1e9772d031d8fb1f93 <http://groq.org/73ccb86edf1aa030a71bda08db69dde15dccf25b1f8e735bdc23bd6feb978e1f> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Connaissance de l'entreprise Objectif: (résultats d'apprentissage)\nl’entreprise dans son environnement) Course content: Approche économique de l’entreprise Course name: http://example.org/course/UE_XLG3TU040</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD GIT-Augmented Reality: Core\nConcepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nGIT-Augmented Reality. 2\\. Apply principles in practical scenarios. 3\\.\nAnalyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/73ccb86edf1aa030a71bda08db69dde15dccf25b1f8e735bdc23bd6feb978e1f> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU030" <http://groq.org/3431e005c2791c0bb7690eb54edf3cbe1e4190d1c9733ef36f745da969105dd0> .
_:N8076ea8a7c4d4dcbafbc2f624a15fdb8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/3431e005c2791c0bb7690eb54edf3cbe1e4190d1c9733ef36f745da969105dd0> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU030</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/3431e005c2791c0bb7690eb54edf3cbe1e4190d1c9733ef36f745da969105dd0> .
_:N8076ea8a7c4d4dcbafbc2f624a15fdb8 <http://schema.org/answer> "1" <http://groq.org/3431e005c2791c0bb7690eb54edf3cbe1e4190d1c9733ef36f745da969105dd0> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/3431e005c2791c0bb7690eb54edf3cbe1e4190d1c9733ef36f745da969105dd0> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/has_schema_type> _:N8076ea8a7c4d4dcbafbc2f624a15fdb8 <http://groq.org/3431e005c2791c0bb7690eb54edf3cbe1e4190d1c9733ef36f745da969105dd0> .
_:N8076ea8a7c4d4dcbafbc2f624a15fdb8 <http://schema.org/explain> "The lecture covers key concepts of SE-Formal Methods, applies principles in practical scenarios, and analyzes the importance of the topic in computing, aligning with the KU's learning outcomes." <http://groq.org/3431e005c2791c0bb7690eb54edf3cbe1e4190d1c9733ef36f745da969105dd0> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/has_schema_type> _:Nb8c8c5352e1841d4b611c00960ddfd57 <http://groq.org/4d0df183470862e4275e97727329ece72234c6c22075863d950916d1d114ae53> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU040" <http://groq.org/4d0df183470862e4275e97727329ece72234c6c22075863d950916d1d114ae53> .
_:Nb8c8c5352e1841d4b611c00960ddfd57 <http://schema.org/answer> "1" <http://groq.org/4d0df183470862e4275e97727329ece72234c6c22075863d950916d1d114ae53> .
_:Nb8c8c5352e1841d4b611c00960ddfd57 <http://schema.org/explain> "The lecture covers the key concepts of GIT-3D Modeling, its practical applications, and its importance in computing, which aligns with the KU's learning outcomes." <http://groq.org/4d0df183470862e4275e97727329ece72234c6c22075863d950916d1d114ae53> .
_:Nb8c8c5352e1841d4b611c00960ddfd57 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/4d0df183470862e4275e97727329ece72234c6c22075863d950916d1d114ae53> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/4d0df183470862e4275e97727329ece72234c6c22075863d950916d1d114ae53> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Connaissance de l'entreprise Objectif: (résultats d'apprentissage)\nl’entreprise dans son environnement) Course content: Approche économique de l’entreprise Course name: http://example.org/course/UE_XLG3TU040</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD GIT-3D Modeling: Core Concepts CS\nCore: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic 3\nKA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of GIT-3D Modeling.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/4d0df183470862e4275e97727329ece72234c6c22075863d950916d1d114ae53> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/de73e3d9b04b1067a7d868a11db308e7661083307bfbcd04e07f15dfd04d6422> .
_:Nb4c36178bed44db4bb2225b520bb4a93 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/de73e3d9b04b1067a7d868a11db308e7661083307bfbcd04e07f15dfd04d6422> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU010" <http://groq.org/de73e3d9b04b1067a7d868a11db308e7661083307bfbcd04e07f15dfd04d6422> .
_:Nb4c36178bed44db4bb2225b520bb4a93 <http://schema.org/explain> "Lecture focuses on analysis and divide/conquer, but KU covers broader DS/Algos not fully addressed." <http://groq.org/de73e3d9b04b1067a7d868a11db308e7661083307bfbcd04e07f15dfd04d6422> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/has_schema_type> _:Nb4c36178bed44db4bb2225b520bb4a93 <http://groq.org/de73e3d9b04b1067a7d868a11db308e7661083307bfbcd04e07f15dfd04d6422> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 1 Objectif: (résultats d'apprentissage)\n•\nÉvaluer une implémentation de structure de données en temps et en place mémoire (coûts minimal,\nmaximal, amorti)\n• Course content: et mise en pratique dans l’approche de résolution de problèmes « Diviser pour régner ». Course name: http://example.org/course/UE_XLG3IU010</page1>\n        <page2>Pages:88-90 HOURS CS Core = 11 KA Core = 6 AL-Foundational: Foundational Data\nStructures and Algorithms CS Core: (See also: SDF-Data-Structures, SDF-\nAlgorithms) 1\\. Abstract Data Type (ADT) and operations on an ADT (See also:\nFPL-Types) a. Dictionary operations (insert, delete, find) 2\\. Arrays a.\nNumeric vs non-numeric, character strings b. Single (vector) vs\nmultidimensional (matrix) 3\\. Records/Structs/Tuples and Objects (See also:\nFPL-OOP) 4\\. Linked lists (for historical reasons) a. Single vs Double and\nLinear vs Circular 5\\. Stacks 6\\. Queues and deques a. Heap-based priority\nqueue 7\\. Hash tables/maps a. Collision resolution and complexity (e.g.,\nprobing, chaining, rehash) 8\\. Graphs (e.g., [un]directed, [a]cyclic,\n[un]connected, and [un]weighted) (See also: MSF-Discrete) a. Graph\nrepresentation: adjacency list vs matrix 9\\. Trees (See also: MSF-Discrete) a.\nBinary, n-ary, and search trees b. Balanced (e.g., AVL, Red-Black, Heap) 10\\.\nSets (See also: MSF-Discrete) 11\\. Search algorithms a. O(n) complexity (e.g.,\nlinear/sequential array/list search) b. O(log2 n) complexity (e.g., binary\nsearch) c. O(logb n) complexity (e.g., uninformed depth/breadth-first tree\nsearch) 12\\. Sorting algorithms (e.g., stable, unstable) a. O(n2) complexity\n(e.g., insertion, selection), b. O(n log n) complexity (e.g., quicksort,\nmerge, timsort) 13\\. Graph algorithms a. Shortest path (e.g., Dijkstra's,\nFloyd's) b. Minimal spanning tree (e.g., Prim's, Kruskal's) KA Core: 14\\.\nSorting algorithms a. O(n log n) complexity heapsort b. Pseudo O(n) complexity\n(e.g., bucket, counting, radix) 15\\. Graph algorithms a. Transitive closure\n(e.g., Warshall's) b. Topological sort 16\\. Matching a. Efficient string\nmatching (e.g., Boyer-Moore, Knuth-Morris-Pratt) b. Longest common subsequence\nmatching c. Regular expression matching Non-core: 17\\. Cryptography algorithms\n(e.g., SHA-256) (See also: SEC-Crypto) 18\\. Parallel algorithms (See also:\nPDC-Algorithms, FPL-Parallel) 19\\. Consensus algorithms (e.g., Blockchain)\n(See also: SEC-Crypto) a. Proof of work vs proof of stake (See also: SEP-\nSustainability) 20\\. Quantum computing algorithms (See also: AL-Models, AR-\nQuantum) a. Oracle-based (e.g., Deutsch-Jozsa, Bernstein-Vazirani, Simon) b.\nSuperpolynomial speed-up via QFT (e.g., Shor's) c. Polynomial speed-up via\namplitude amplification (e.g., Grover's) 21\\. Fast-Fourier Transform (FFT)\nalgorithm 22\\. Differential evolution algorithm Illustrative Learning\nOutcomes: CS Core: 1\\. For each ADT/Data-Structure in this unit a. Explain its\ndefinition, properties, representation(s), and associated ADT operations. b.\nExplain step-by-step how the ADT operations associated with the data structure\ntransform it. 2\\. For each algorithm in this unit explain step-by-step how the\nalgorithm operates. 3\\. For each algorithmic approach (e.g., sorting) in this\nunit apply a prototypical example of the approach (e.g., merge sort). 90 4\\.\nGiven requirements for a problem, develop multiple solutions using various\ndata structures and algorithms. Subsequently, evaluate the suitability,\nstrengths, and weaknesses selecting an approach that best satisfies the\nrequirements. 5\\. Explain how collision avoidance and collision resolution is\nhandled in hash tables. 6\\. Explain factors beyond computational efficiency\nthat influence the choice of algorithms, such as programming time,\nmaintainability, and the use of application-specific patterns in the input\ndata. 7\\. Explain the heap property and the use of heaps as an implementation\nof a priority queue. KA Core: 8\\. For each of the algorithms and algorithmic\napproaches in the KA Core topics: a. Explain a prototypical example of the\nalgorithm, and b. Explain step-by-step how the algorithm operates. Non-core:\n9\\. An appreciation of quantum computation and its application to certain\nproblems.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/de73e3d9b04b1067a7d868a11db308e7661083307bfbcd04e07f15dfd04d6422> .
_:Nb4c36178bed44db4bb2225b520bb4a93 <http://schema.org/answer> "0" <http://groq.org/de73e3d9b04b1067a7d868a11db308e7661083307bfbcd04e07f15dfd04d6422> .
_:N516f0d8cb9d94eddbc7d089ac2fdc6d0 <http://schema.org/answer> "1" <http://groq.org/a82e16fc96333111aa55cfdd6b042e3922bb65ecc97efa1de47748f19cc9e40e> .
_:N516f0d8cb9d94eddbc7d089ac2fdc6d0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/a82e16fc96333111aa55cfdd6b042e3922bb65ecc97efa1de47748f19cc9e40e> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/has_schema_type> _:N516f0d8cb9d94eddbc7d089ac2fdc6d0 <http://groq.org/a82e16fc96333111aa55cfdd6b042e3922bb65ecc97efa1de47748f19cc9e40e> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Bases de données 2 Objectif: (résultats d'apprentissage) Programmer en un langage procédurale lié à une base de données, par exemple PL/SQL ou Course content: Vues et contrôle d’accès\n5. Course name: http://example.org/course/UE_XLG3IU040</page1>\n        <page2>Pages : 168-169 CS Core : 20, KA Core : None CS Core: 1\\. Basic concepts such\nas variables, primitive data types, expressions, and their evaluation 2\\. How\nimperative programs work: state and state transitions on execution of\nstatements, flow of control 3\\. Basic constructs such as assignment\nstatements, conditional and iterative statements, basic I/O 4\\. Key modularity\nconstructs such as functions (and methods and classes, if supported in the\nlanguage) and related concepts like parameter passing, scope, abstraction,\ndata encapsulation (See also: FPL-OOP) 5\\. Input and output using files and\nAPIs 6\\. Structured data types available in the chosen programming language\nlike sequences (e.g., arrays, lists), associative containers (e.g.,\ndictionaries, maps), others (e.g., sets, tuples) and when and how to use them\n(See also: AL-Foundational) 7\\. Libraries and frameworks provided by the\nlanguage (when/where applicable) 8\\. Recursion 9\\. Dealing with runtime errors\nin programs (e.g., exception handling). 10\\. Basic concepts of programming\nerrors, testing, and debugging (See also: SE-Construction, SEC-Coding) 11\\.\nDocumenting/commenting code at the program and module level.(See also: SE-\nConstruction) 12\\. Develop a security mindset. (See also: SEC-Foundations)\nIllustrative Learning Outcomes: CS Core: In these learning outcomes, the term\n\"develop\" means \"design, write, test, and debug.\" 1\\. Develop programs that\nuse the fundamental programming constructs: assignment and expressions, basic\nI/O, conditional and iterative statements. 2\\. Develop programs using\nfunctions with parameter passing. 3\\. Develop programs that effectively use\nthe different structured data types provided in the language like\narrays/lists, dictionaries, and sets. 4\\. Develop programs that use file I/O\nto provide data persistence across multiple executions. 5\\. Develop programs\nthat use language-provided libraries and frameworks (where applicable). 6\\.\nDevelop programs that use APIs to access or update data (e.g., from the web).\n7\\. Develop programs that create simple classes and instantiate objects of\nthose classes (if supported by the language). 8\\. Explain the concept of\nrecursion and identify when and how to use it effectively. 9\\. Develop\nrecursive functions. 10\\. Develop programs that can handle runtime errors.\n11\\. Read a given program and explain what it does. 12\\. Write comments for a\nprogram or a module specifying what it does. 13\\. Trace the flow of control\nduring the execution of a program. 14\\. Use appropriate terminology to\nidentify elements of a program (e.g., identifier, operator, operand).</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/a82e16fc96333111aa55cfdd6b042e3922bb65ecc97efa1de47748f19cc9e40e> .
_:N516f0d8cb9d94eddbc7d089ac2fdc6d0 <http://schema.org/explain> "The lecture covers a significant portion of the KU, including programming constructs, data types, file I/O, and recursion, but does not explicitly mention some of the KU's more advanced topics, such as classes and APIs." <http://groq.org/a82e16fc96333111aa55cfdd6b042e3922bb65ecc97efa1de47748f19cc9e40e> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/a82e16fc96333111aa55cfdd6b042e3922bb65ecc97efa1de47748f19cc9e40e> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU040" <http://groq.org/a82e16fc96333111aa55cfdd6b042e3922bb65ecc97efa1de47748f19cc9e40e> .
_:Nfbb173c2e34b47b08356f9c9397d3094 <http://example.org/has_score> "0.6486707"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/df15c5f52cc888f8092a5b1a2a5bbdd2da219b6148a5ede2126cb4b2e927d79d> .
_:Nfbb173c2e34b47b08356f9c9397d3094 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Translation_Language_Translation_and_Execution.txt> <http://faiss.org/df15c5f52cc888f8092a5b1a2a5bbdd2da219b6148a5ede2126cb4b2e927d79d> .
_:Nfd80eaa7351d41b0b1f833a7e35e7404 <http://example.org/has_score> "0.6421694"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/df15c5f52cc888f8092a5b1a2a5bbdd2da219b6148a5ede2126cb4b2e927d79d> .
_:Nfbb173c2e34b47b08356f9c9397d3094 <http://example.org/has_chunk> ". Language translation pipeline: syntax analysis, parsing, optional type-checking, translation/code\ngeneration and optimization, linking, loading, execution\nKA Core:\n9. Run-time representation of core language constructs such as objects (method tables) and functions\nthat can be passed as parameters to and returned from functions (closures)\n10. Secure compiler development (See also: SEC-Foundations, SEC-Coding)\nIllustrative learning outcomes:\nCS Core:\n1" <http://faiss.org/df15c5f52cc888f8092a5b1a2a5bbdd2da219b6148a5ede2126cb4b2e927d79d> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/is_aligned_with> _:Nfbb173c2e34b47b08356f9c9397d3094 <http://faiss.org/df15c5f52cc888f8092a5b1a2a5bbdd2da219b6148a5ede2126cb4b2e927d79d> .
_:Nfd80eaa7351d41b0b1f833a7e35e7404 <http://example.org/has_chunk> ". Regular expressions (See also: AL-Models)\n8. Programs and processes (See also: OS-Process)\n9. Workflow\nIllustrative learning outcomes:\nCS Core:\n1. Create and execute automated scripts to manage various system tasks.\n2. Solve various text processing problems through scripting." <http://faiss.org/df15c5f52cc888f8092a5b1a2a5bbdd2da219b6148a5ede2126cb4b2e927d79d> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/is_aligned_with> _:Ne508180f5a0142b29bf4a364f7faaf21 <http://faiss.org/df15c5f52cc888f8092a5b1a2a5bbdd2da219b6148a5ede2126cb4b2e927d79d> .
_:Ne508180f5a0142b29bf4a364f7faaf21 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nPDC-Synchronization and Concurrency: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of PDC-Synchronization and Concurrency.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/df15c5f52cc888f8092a5b1a2a5bbdd2da219b6148a5ede2126cb4b2e927d79d> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/is_aligned_with> _:Nfd80eaa7351d41b0b1f833a7e35e7404 <http://faiss.org/df15c5f52cc888f8092a5b1a2a5bbdd2da219b6148a5ede2126cb4b2e927d79d> .
_:Ne508180f5a0142b29bf4a364f7faaf21 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Parallel_and_Distributed_Computing_PDC/PDC-Synchronization_and_Concurrency.txt> <http://faiss.org/df15c5f52cc888f8092a5b1a2a5bbdd2da219b6148a5ede2126cb4b2e927d79d> .
<http://example.org/faiss> <http://example.org/input> "Label: Systèmes d'exploitation Objectif: (résultats d'apprentissage)\nsynchronisation/communication (Application)\n• Etre capable d'utiliser les mécanismes de synchronisation usuels sous Linux (sémaphores,\nmutexes, signaux) (Application)\n• Comprendre le principe de mémoire virtuelle (Initiation)\n• Savoir gérer les entrées/sorties sous Linux (Initiation) Course content: par le système d'exploitation y sont exposées : comment les processus se partagent-ils l'accès au\nprocesseur ? Comment se synchronisent-ils et quels mécanismes leur permettent d'échanger des\ndonnées ? Comment sont gérés la mémoire et les entrées/sorties ? Course name: http://example.org/course/UE_XLG4IU030" <http://faiss.org/df15c5f52cc888f8092a5b1a2a5bbdd2da219b6148a5ede2126cb4b2e927d79d> .
_:Nfd80eaa7351d41b0b1f833a7e35e7404 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Scripting_Shell_Scripting.txt> <http://faiss.org/df15c5f52cc888f8092a5b1a2a5bbdd2da219b6148a5ede2126cb4b2e927d79d> .
_:Ne508180f5a0142b29bf4a364f7faaf21 <http://example.org/has_score> "0.6419754"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/df15c5f52cc888f8092a5b1a2a5bbdd2da219b6148a5ede2126cb4b2e927d79d> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/e121dc7051f36a375ec8a53a5de0e333574e1a90b34fa7780d9d034433e04ff1> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU020" <http://groq.org/e121dc7051f36a375ec8a53a5de0e333574e1a90b34fa7780d9d034433e04ff1> .
_:Nfc46e61878944ab79b1d40c59c2b18df <http://schema.org/answer> "1" <http://groq.org/e121dc7051f36a375ec8a53a5de0e333574e1a90b34fa7780d9d034433e04ff1> .
_:Nfc46e61878944ab79b1d40c59c2b18df <http://schema.org/explain> "The lecture covers a large subset of the KU, particularly focusing on logic and proof systems." <http://groq.org/e121dc7051f36a375ec8a53a5de0e333574e1a90b34fa7780d9d034433e04ff1> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/has_schema_type> _:Nfc46e61878944ab79b1d40c59c2b18df <http://groq.org/e121dc7051f36a375ec8a53a5de0e333574e1a90b34fa7780d9d034433e04ff1> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Logique pour l'informatique Objectif: (résultats d'apprentissage)\nconsistance et complétude d'un système de preuves.\n4. Représenter une preuve de la déduction naturelle sous forme d'arbre d'inférence.\n5. Utiliser les algorithmes d'unification et de résolution pour le raisonnement automatique sur les\nformules logiques.\n1) Raisonnement algébrique booléen\n• Dualités des connecteurs logiques\n• Formes normales conjonctive et disjonctive\n2) Systèmes de preuves\n• Système d'inférence associé à une définition inductive\n• Preuve d'appartenance à un ensemble inductif par un arbre de preuves\n• Règles d'inférences de la déduction naturelle pour la logique propositionnelle\n• Distinguer logique classique et logique intuitionniste\n3) Donner du sens aux langages logique Course content: • Interprétation, modèle, satisfiabilité, validité\n• Correspondance avec le système de preuve: correction et complétude\n4) Calcul des prédicats\n• Manipulation des quantificateurs\n• Skolémisation, forme clausale\n• Théorie logique\n5) Raisonner automatiquement sur les formules logique\n• Algorithme d'unification\n• Algorithme de résolution Course name: http://example.org/course/UE_XLG3IU020</page1>\n        <page2>Pages: 187-188 HOURS CS Core = 29 KA Core = 11 MSF-Discrete: Discrete\nMathematics CS Core: 1\\. Sets, relations, functions, cardinality 2\\. Recursive\nmathematical definitions 3\\. Proof techniques (induction, proof by\ncontradiction) 4\\. Permutations, combinations, counting, pigeonhole principle\n5\\. Modular arithmetic 6\\. Logic: truth tables, connectives (operators),\ninference rules, formulas, normal forms, simple predicate logic 7\\. Graphs:\nbasic definitions 8\\. Order notation Illustrative Learning Outcomes: CS Core:\n1\\. Sets, Relations, and Functions, Cardinality a. Explain with examples the\nbasic terminology of functions, relations, and sets. b. Perform the operations\nassociated with sets, functions, and relations. c. Relate practical examples\nto the appropriate set, function, or relation model, and interpret the\nassociated operations and terminology in context. d. Calculate the size of a\nfinite set, including making use of the sum and product rules and inclusion-\nexclusion principle. e. Explain the difference between finite, countable, and\nuncountable sets. 2\\. Recursive mathematical definitions a. Apply recursive\ndefinitions of sequences or structures (e.g., Fibonacci numbers, linked lists,\nparse trees, fractals). b. Formulate inductive proofs of statements about\nrecursive definitions. c. Solve a variety of basic recurrence relations. d.\nAnalyze a problem to determine underlying recurrence relations. e. Given a\nrecursive/iterative code snippet, describe its underlying recurrence relation,\nhypothesize a closed form for the recurrence relation, and prove the\nhypothesis correct (usually, using induction). 3\\. Proof Techniques a.\nIdentify the proof technique used in a given proof. b. Outline the basic\nstructure of each proof technique (direct proof, proof by contradiction, and\ninduction) described in this unit. c. Apply each of the proof techniques\n(direct proof, proof by contradiction, and induction) correctly in the\nconstruction of a sound argument. d. Determine which type of proof is best for\na given problem. e. Explain the parallels between ideas of mathematical and/or\nstructural induction to recursion and recursively defined structures. f.\nExplain the relationship between weak and strong induction and give examples\nof the appropriate use of each. 4\\. Permutations, combinations, and counting\na. Apply counting arguments, including sum and product rules, inclusion-\nexclusion principle, and arithmetic/geometric progressions. b. Apply the\npigeonhole principle in the context of a formal proof. c. Compute permutations\nand combinations of a set, and interpret the meaning in the context of the\nspecific application. d. Map real-world applications to appropriate counting\nformalisms, such as determining the number of ways to arrange people around a\ntable, subject to constraints on the seating arrangement, or the number of\nways to determine certain hands in cards (e.g., a full house). 5\\. Modular\narithmetic a. Perform computations involving modular arithmetic. b. Explain\nthe notion of the greatest common divisor and apply Euclid's algorithm to\ncompute it. 6\\. Logic a. Convert logical statements from informal language to\npropositional and predicate logic expressions. b. Apply formal methods of\nsymbolic propositional and predicate logic, such as calculating validity of\nformulae, computing normal forms, or negating a logical statement. c. Use the\nrules of inference to construct proofs in propositional and predicate logic.\nd. Describe how symbolic logic can be used to model real-life situations or\napplications, including those arising in computing contexts such as software\nanalysis (e.g., program correctness), database queries, and algorithms. e.\nApply formal logic proofs and/or informal, but rigorous, logical reasoning to\nreal problems, such as predicting the behavior of software or solving problems\nsuch as puzzles. f. Describe the strengths and limitations of propositional\nand predicate logic. g. Explain what it means for a proof in propositional (or\npredicate) logic to be valid. 7\\. Graphs a. Illustrate by example the basic\nterminology of graph theory, and some of the properties and special cases of\ntypes of graphs, including trees. b. Demonstrate different traversal methods\nfor trees and graphs, including pre-, post-, and in-order traversal of trees,\nalong with breadth-first and depth-first search for graphs. c. Model a variety\nof real-world problems in computer science using appropriate forms of graphs\nand trees, such as representing a network topology, the organization of a\nhierarchical file system, or a social network. d. Show how concepts from\ngraphs and trees appear in data structures, algorithms, proof techniques\n(structural induction), and counting. KA Core: The recommended topics are the\nsame between CS core and KA-core, but with far more hours, the KA-core can\ncover these topics in depth and might include more computing-related\napplications.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/e121dc7051f36a375ec8a53a5de0e333574e1a90b34fa7780d9d034433e04ff1> .
_:Nfc46e61878944ab79b1d40c59c2b18df <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/e121dc7051f36a375ec8a53a5de0e333574e1a90b34fa7780d9d034433e04ff1> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/7a96685736210850150cfaf22d3643f0179df0a6540164c6e5f0044816323c3a> .
_:N7e7a808cca3d4f228f72c5ab47df0de2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/7a96685736210850150cfaf22d3643f0179df0a6540164c6e5f0044816323c3a> .
_:N7e7a808cca3d4f228f72c5ab47df0de2 <http://schema.org/answer> "0" <http://groq.org/7a96685736210850150cfaf22d3643f0179df0a6540164c6e5f0044816323c3a> .
<http://example.org/course/UE_XLG4IU060> <http://example.org/has_schema_type> _:N7e7a808cca3d4f228f72c5ab47df0de2 <http://groq.org/7a96685736210850150cfaf22d3643f0179df0a6540164c6e5f0044816323c3a> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Création numérique Objectif: (résultats d'apprentissage)\n- lister les principaux formats compris par les outils de création (Connaissance) ;\n- estimer les conséquences de choix de format sur la création (Analyse) ;\n- décrire les principaux paradigmes de création numérique (connaissance) ;\n- programmer une application de création numérique répondant à un cahier des\ncharges (Application) ;\n- concevoir un algorithme engendrant une création dans un format imposé (Application) ; Course content: - principaux supports de création numérique et limitations associées (bitmap,vectoriel, 2D, 3D,\ndécoupes, impressions, machine outils numériques,etc.);\n- principaux formats compris par les outils de création et les conséquences sur la création;\n- paradigmes de création numérique (impératif, événementiel, émergeant, etc.); Course name: http://example.org/course/UE_XLG4IU060</page1>\n        <page2>Pages: 145-146 HOURS CS Core = 0 KA Core = 0 FPL-Formalism: Formal Semantics\nNon-core: 1\\. Syntax vs semantics 2\\. Approaches to semantics: axiomatic,\noperational, denotational, type-based 3\\. Axiomatic semantics of abstract\nconstructs such as assignment, selection, iteration using precondition, post-\nconditions, and loop invariant 4\\. Operational semantics analysis of abstract\nconstructs and sequence of such as assignment, expression evaluation,\nselection, iteration using environment and store a. Symbolic execution b.\nConstraint checkers 5\\. Denotational semantics a. Lambda Calculus. (See also:\nAL-Models, FPL-Functional) 6\\. Proofs by induction over language semantics 7\\.\nFormal definitions and proofs for type systems (See also: FPL-Types) a.\nPropositions as types (implication as a function, conjunction as a product,\ndisjunction as a sum) b. Dependent types (universal quantification as\ndependent function, existential quantification as dependent product) c.\nParametricity Illustrative learning outcomes: Non-core: 1\\. Construct formal\nsemantics for a small language. 2\\. Write a lambda-calculus program and show\nits evaluation to a normal form. 3\\. Discuss the different approaches of\noperational, denotational, and axiomatic semantics. 4\\. Use induction to prove\nproperties of all programs in a language. 5\\. Use induction to prove\nproperties of all programs in a language that is well-typed according to a\nformally defined type system. 6\\. Use parametricity to establish the behavior\nof code given only its type.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/7a96685736210850150cfaf22d3643f0179df0a6540164c6e5f0044816323c3a> .
_:N7e7a808cca3d4f228f72c5ab47df0de2 <http://schema.org/explain> "The lecture focuses on digital creation tools and formats, while the KU covers formal semantics and type systems, which are unrelated." <http://groq.org/7a96685736210850150cfaf22d3643f0179df0a6540164c6e5f0044816323c3a> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU060" <http://groq.org/7a96685736210850150cfaf22d3643f0179df0a6540164c6e5f0044816323c3a> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4AU010" <http://groq.org/24ce27efd406a4f86d4f324229bb6b30b7ec8189c60aae0a49ad773f8ae6b93f> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/24ce27efd406a4f86d4f324229bb6b30b7ec8189c60aae0a49ad773f8ae6b93f> .
_:N038c5eccf77f4309b562cd904571b3e7 <http://schema.org/explain> "The lecture focuses on teaching methods in English, while the KU covers software architecture in computer science, with no overlap in content." <http://groq.org/24ce27efd406a4f86d4f324229bb6b30b7ec8189c60aae0a49ad773f8ae6b93f> .
_:N038c5eccf77f4309b562cd904571b3e7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/24ce27efd406a4f86d4f324229bb6b30b7ec8189c60aae0a49ad773f8ae6b93f> .
_:N038c5eccf77f4309b562cd904571b3e7 <http://schema.org/answer> "0" <http://groq.org/24ce27efd406a4f86d4f324229bb6b30b7ec8189c60aae0a49ad773f8ae6b93f> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/has_schema_type> _:N038c5eccf77f4309b562cd904571b3e7 <http://groq.org/24ce27efd406a4f86d4f324229bb6b30b7ec8189c60aae0a49ad773f8ae6b93f> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S4 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4AU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Software Architecture: Core\nConcepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nSE-Software Architecture. 2\\. Apply principles in practical scenarios. 3\\.\nAnalyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/24ce27efd406a4f86d4f324229bb6b30b7ec8189c60aae0a49ad773f8ae6b93f> .
_:N8d2753a60c82457da61905ca75788043 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/21c7b00b1e6fc1516d9f1349aa5f34ae88c8d10ca34d71597adc13c706f7745c> .
_:N8d2753a60c82457da61905ca75788043 <http://schema.org/explain> "The lecture covers topics such as process synchronization, memory management, and file abstraction, which are also mentioned in the KU." <http://groq.org/21c7b00b1e6fc1516d9f1349aa5f34ae88c8d10ca34d71597adc13c706f7745c> .
_:N8d2753a60c82457da61905ca75788043 <http://schema.org/answer> "1" <http://groq.org/21c7b00b1e6fc1516d9f1349aa5f34ae88c8d10ca34d71597adc13c706f7745c> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Systèmes d'exploitation Objectif: (résultats d'apprentissage)\nsynchronisation/communication (Application)\n• Etre capable d'utiliser les mécanismes de synchronisation usuels sous Linux (sémaphores,\nmutexes, signaux) (Application)\n• Comprendre le principe de mémoire virtuelle (Initiation)\n• Savoir gérer les entrées/sorties sous Linux (Initiation) Course content: par le système d'exploitation y sont exposées : comment les processus se partagent-ils l'accès au\nprocesseur ? Comment se synchronisent-ils et quels mécanismes leur permettent d'échanger des\ndonnées ? Comment sont gérés la mémoire et les entrées/sorties ? Course name: http://example.org/course/UE_XLG4IU030</page1>\n        <page2>Pages: 133-134 HOURS CS Core = 2 KA Core = 0 FPL-Scripting: Shell Scripting CS\nCore: 1\\. Error/exception handling 2\\. Piping (See also: AR-Organization, SF-\nOverview, OS-Process) 3\\. System commands (See also: SF-Overview) a. Interface\nwith operating systems (See also: SF-Overview, OS-Principles) 4\\. Environment\nvariables (See also: SF-Overview) 5\\. File abstraction and operators (See\nalso: SDF-Fundamentals, OS-Files, SF-Resource) 6\\. Data structures, such as\narrays and lists. (See also: AL-Foundational, SDF-Fundamentals, SDFData-\nStructures) 7\\. Regular expressions (See also: AL-Models) 8\\. Programs and\nprocesses (See also: OS-Process) 9\\. Workflow Illustrative learning outcomes:\nCS Core: 1\\. Create and execute automated scripts to manage various system\ntasks. 2\\. Solve various text processing problems through scripting.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/21c7b00b1e6fc1516d9f1349aa5f34ae88c8d10ca34d71597adc13c706f7745c> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU030" <http://groq.org/21c7b00b1e6fc1516d9f1349aa5f34ae88c8d10ca34d71597adc13c706f7745c> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/21c7b00b1e6fc1516d9f1349aa5f34ae88c8d10ca34d71597adc13c706f7745c> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/has_schema_type> _:N8d2753a60c82457da61905ca75788043 <http://groq.org/21c7b00b1e6fc1516d9f1349aa5f34ae88c8d10ca34d71597adc13c706f7745c> .
_:Nb6140f407eb8478f8cbe5bb82f932666 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/21dc11f08b027a3caa068209b75297730cb5563b76b42e3a4ebf662f9190fc58> .
_:Nb6140f407eb8478f8cbe5bb82f932666 <http://schema.org/explain> "The lecture focuses on methodology and professional insertion, whereas the KU covers SE-Testing and Quality Assurance, which are unrelated topics." <http://groq.org/21dc11f08b027a3caa068209b75297730cb5563b76b42e3a4ebf662f9190fc58> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/has_schema_type> _:Nb6140f407eb8478f8cbe5bb82f932666 <http://groq.org/21dc11f08b027a3caa068209b75297730cb5563b76b42e3a4ebf662f9190fc58> .
_:Nb6140f407eb8478f8cbe5bb82f932666 <http://schema.org/answer> "0" <http://groq.org/21dc11f08b027a3caa068209b75297730cb5563b76b42e3a4ebf662f9190fc58> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/21dc11f08b027a3caa068209b75297730cb5563b76b42e3a4ebf662f9190fc58> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S4 Objectif: (résultats d'apprentissage)\nfaire et savoir-être) et d'un plan d'actions sur les prochaines années : à l'écrit et à l'oral\n- d'identitier et d'animer son réseau (professionnel et élargi)\n- de créer et de faire vivre ses profils numériques professionnels\n- de mener une enquête métier auprès d'un professionnel et de la restituer Course content: - présentation orale de la restitution de l'enquête et des recherches sur le métier\n- équivalent de 8 TD + présentation orale des enquêtes:\n- identication de ses valeurs\n- indentification de ses compétences\n- consrtruction de son projet professionnel et personnel\n- présentation de son projet Course name: http://example.org/course/UE_XLG4TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Testing and Quality Assurance:\nCore Concepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nSE-Testing and Quality Assurance. 2\\. Apply principles in practical scenarios.\n3\\. Analyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/21dc11f08b027a3caa068209b75297730cb5563b76b42e3a4ebf662f9190fc58> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU010" <http://groq.org/21dc11f08b027a3caa068209b75297730cb5563b76b42e3a4ebf662f9190fc58> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/937d04fc9ffb2807ad96f61996c37ac04d4e485a06d59e7325a7778e7826877b> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/has_schema_type> _:Nbaa7e663e7d044ab9f1c4f12c1f76767 <http://groq.org/937d04fc9ffb2807ad96f61996c37ac04d4e485a06d59e7325a7778e7826877b> .
_:Nbaa7e663e7d044ab9f1c4f12c1f76767 <http://schema.org/explain> "Lecture focuses on OS principles (synchronization, memory), while KU covers scripting (piping, system commands) with no direct overlap." <http://groq.org/937d04fc9ffb2807ad96f61996c37ac04d4e485a06d59e7325a7778e7826877b> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU030" <http://groq.org/937d04fc9ffb2807ad96f61996c37ac04d4e485a06d59e7325a7778e7826877b> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Systèmes d'exploitation Objectif: (résultats d'apprentissage)\nsynchronisation/communication (Application)\n• Etre capable d'utiliser les mécanismes de synchronisation usuels sous Linux (sémaphores,\nmutexes, signaux) (Application)\n• Comprendre le principe de mémoire virtuelle (Initiation)\n• Savoir gérer les entrées/sorties sous Linux (Initiation) Course content: par le système d'exploitation y sont exposées : comment les processus se partagent-ils l'accès au\nprocesseur ? Comment se synchronisent-ils et quels mécanismes leur permettent d'échanger des\ndonnées ? Comment sont gérés la mémoire et les entrées/sorties ? Course name: http://example.org/course/UE_XLG4IU030</page1>\n        <page2>Pages: 133-134 HOURS CS Core = 2 KA Core = 0 FPL-Scripting: Shell Scripting CS\nCore: 1\\. Error/exception handling 2\\. Piping (See also: AR-Organization, SF-\nOverview, OS-Process) 3\\. System commands (See also: SF-Overview) a. Interface\nwith operating systems (See also: SF-Overview, OS-Principles) 4\\. Environment\nvariables (See also: SF-Overview) 5\\. File abstraction and operators (See\nalso: SDF-Fundamentals, OS-Files, SF-Resource) 6\\. Data structures, such as\narrays and lists. (See also: AL-Foundational, SDF-Fundamentals, SDFData-\nStructures) 7\\. Regular expressions (See also: AL-Models) 8\\. Programs and\nprocesses (See also: OS-Process) 9\\. Workflow Illustrative learning outcomes:\nCS Core: 1\\. Create and execute automated scripts to manage various system\ntasks. 2\\. Solve various text processing problems through scripting.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/937d04fc9ffb2807ad96f61996c37ac04d4e485a06d59e7325a7778e7826877b> .
_:Nbaa7e663e7d044ab9f1c4f12c1f76767 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/937d04fc9ffb2807ad96f61996c37ac04d4e485a06d59e7325a7778e7826877b> .
_:Nbaa7e663e7d044ab9f1c4f12c1f76767 <http://schema.org/answer> "0" <http://groq.org/937d04fc9ffb2807ad96f61996c37ac04d4e485a06d59e7325a7778e7826877b> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4AU010" <http://groq.org/4925b67dfe151d2e3895fb8421f1ab1d08f072b567562bcd567186708ca4f781> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S4 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4AU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/4925b67dfe151d2e3895fb8421f1ab1d08f072b567562bcd567186708ca4f781> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/4925b67dfe151d2e3895fb8421f1ab1d08f072b567562bcd567186708ca4f781> .
_:N3cffadd7c63f43d49d3536477ae49af7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/4925b67dfe151d2e3895fb8421f1ab1d08f072b567562bcd567186708ca4f781> .
_:N3cffadd7c63f43d49d3536477ae49af7 <http://schema.org/explain> "Lecture focuses on teaching methods, while KU covers formal methods in CS; topics unrelated." <http://groq.org/4925b67dfe151d2e3895fb8421f1ab1d08f072b567562bcd567186708ca4f781> .
_:N3cffadd7c63f43d49d3536477ae49af7 <http://schema.org/answer> "0" <http://groq.org/4925b67dfe151d2e3895fb8421f1ab1d08f072b567562bcd567186708ca4f781> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/has_schema_type> _:N3cffadd7c63f43d49d3536477ae49af7 <http://groq.org/4925b67dfe151d2e3895fb8421f1ab1d08f072b567562bcd567186708ca4f781> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/833efcdef05da641d71d58af852b3a471da9f009d646ed56dbcd2ddcd7368c8f> .
_:N1ac0eb30a3ff4637b6cb22156b77d72a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/833efcdef05da641d71d58af852b3a471da9f009d646ed56dbcd2ddcd7368c8f> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/has_schema_type> _:N1ac0eb30a3ff4637b6cb22156b77d72a <http://groq.org/833efcdef05da641d71d58af852b3a471da9f009d646ed56dbcd2ddcd7368c8f> .
_:N1ac0eb30a3ff4637b6cb22156b77d72a <http://schema.org/answer> "1" <http://groq.org/833efcdef05da641d71d58af852b3a471da9f009d646ed56dbcd2ddcd7368c8f> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Enjeux de la transition écologique Objectif: (résultats d'apprentissage) Course content: Programme des 9 séances en ligne (d’environ 1h30 de travail chacune) : Course name: http://example.org/course/UE_XLG3TU020</page1>\n        <page2>Pages: 146-147 HOURS CS Core = 0 KA Core = 0 FPL-Design: Design Principles of\nProgramming Languages Non-core: 1\\. Language design principles a. Simplicity\nb. Security (See also: SEC-Coding) c. Fast translation d. Efficient object\ncode e. Orthogonality f. Readability g. Completeness h. Implementation\nstrategies 2\\. Designing a language to fit a specific domain or problem 3\\.\nInteroperability between programming languages 4\\. Language portability 5\\.\nFormal description of a programming language 6\\. Green computing principles\n(See also: SEP-Sustainability) Illustrative Learning Outcomes: Non-core: 1\\.\nUnderstand what constitutes good language design and apply that knowledge to\nevaluate a real programming language.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/833efcdef05da641d71d58af852b3a471da9f009d646ed56dbcd2ddcd7368c8f> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU020" <http://groq.org/833efcdef05da641d71d58af852b3a471da9f009d646ed56dbcd2ddcd7368c8f> .
_:N1ac0eb30a3ff4637b6cb22156b77d72a <http://schema.org/explain> "The lecture covers topics related to language design principles, such as simplicity, security, and readability, which align with the KU's objectives." <http://groq.org/833efcdef05da641d71d58af852b3a471da9f009d646ed56dbcd2ddcd7368c8f> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU010" <http://groq.org/f54806f59f4526352f5e31bfe9c5e7c694c4c5416b0bcb4292fee0a7a106e690> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU010</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/f54806f59f4526352f5e31bfe9c5e7c694c4c5416b0bcb4292fee0a7a106e690> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/f54806f59f4526352f5e31bfe9c5e7c694c4c5416b0bcb4292fee0a7a106e690> .
_:N56bda9cbaae54b6786d53fd32a75d217 <http://schema.org/explain> "Lecture focuses on teaching methods, not platform-specific programming constraints or languages." <http://groq.org/f54806f59f4526352f5e31bfe9c5e7c694c4c5416b0bcb4292fee0a7a106e690> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/has_schema_type> _:N56bda9cbaae54b6786d53fd32a75d217 <http://groq.org/f54806f59f4526352f5e31bfe9c5e7c694c4c5416b0bcb4292fee0a7a106e690> .
_:N56bda9cbaae54b6786d53fd32a75d217 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/f54806f59f4526352f5e31bfe9c5e7c694c4c5416b0bcb4292fee0a7a106e690> .
_:N56bda9cbaae54b6786d53fd32a75d217 <http://schema.org/answer> "0" <http://groq.org/f54806f59f4526352f5e31bfe9c5e7c694c4c5416b0bcb4292fee0a7a106e690> .
_:N0815cdacf6d844b79fa0045dc24f7b79 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/e683d1b0fee3231e19bef5679c2bfeb2cb8aa4a84caf51dbda23c45b9820ad50> .
_:N0815cdacf6d844b79fa0045dc24f7b79 <http://schema.org/answer> "1" <http://groq.org/e683d1b0fee3231e19bef5679c2bfeb2cb8aa4a84caf51dbda23c45b9820ad50> .
_:N0815cdacf6d844b79fa0045dc24f7b79 <http://schema.org/explain> "The lecture covers a significant portion of the KU's core concepts and advanced topics, with a focus on practical applications and analysis." <http://groq.org/e683d1b0fee3231e19bef5679c2bfeb2cb8aa4a84caf51dbda23c45b9820ad50> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/e683d1b0fee3231e19bef5679c2bfeb2cb8aa4a84caf51dbda23c45b9820ad50> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Unité Enseignement de Découverte Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU020</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD GIT-3D Modeling: Core Concepts CS\nCore: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic 3\nKA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of GIT-3D Modeling.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/e683d1b0fee3231e19bef5679c2bfeb2cb8aa4a84caf51dbda23c45b9820ad50> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/has_schema_type> _:N0815cdacf6d844b79fa0045dc24f7b79 <http://groq.org/e683d1b0fee3231e19bef5679c2bfeb2cb8aa4a84caf51dbda23c45b9820ad50> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU020" <http://groq.org/e683d1b0fee3231e19bef5679c2bfeb2cb8aa4a84caf51dbda23c45b9820ad50> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/has_schema_type> _:Nf11c4eea8a0e4ab7962648e31d8e0c06 <http://groq.org/5ae2dbf1ab6e4f850719acd2fb7d6661bb4f3dabd2948ea7d45dc5d36fd7c653> .
_:Nf11c4eea8a0e4ab7962648e31d8e0c06 <http://schema.org/explain> "The lecture covers key concepts of PDC-Synchronization and Concurrency, such as synchronization mechanisms, memory management, and I/O management, which align with the KU's core concepts." <http://groq.org/5ae2dbf1ab6e4f850719acd2fb7d6661bb4f3dabd2948ea7d45dc5d36fd7c653> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Systèmes d'exploitation Objectif: (résultats d'apprentissage)\nsynchronisation/communication (Application)\n• Etre capable d'utiliser les mécanismes de synchronisation usuels sous Linux (sémaphores,\nmutexes, signaux) (Application)\n• Comprendre le principe de mémoire virtuelle (Initiation)\n• Savoir gérer les entrées/sorties sous Linux (Initiation) Course content: par le système d'exploitation y sont exposées : comment les processus se partagent-ils l'accès au\nprocesseur ? Comment se synchronisent-ils et quels mécanismes leur permettent d'échanger des\ndonnées ? Comment sont gérés la mémoire et les entrées/sorties ? Course name: http://example.org/course/UE_XLG4IU030</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD PDC-Synchronization and\nConcurrency: Core Concepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder\ntopic 2 3\\. Placeholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\.\nPlaceholder advanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key\nconcepts of PDC-Synchronization and Concurrency. 2\\. Apply principles in\npractical scenarios. 3\\. Analyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/5ae2dbf1ab6e4f850719acd2fb7d6661bb4f3dabd2948ea7d45dc5d36fd7c653> .
_:Nf11c4eea8a0e4ab7962648e31d8e0c06 <http://schema.org/answer> "1" <http://groq.org/5ae2dbf1ab6e4f850719acd2fb7d6661bb4f3dabd2948ea7d45dc5d36fd7c653> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU030" <http://groq.org/5ae2dbf1ab6e4f850719acd2fb7d6661bb4f3dabd2948ea7d45dc5d36fd7c653> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/5ae2dbf1ab6e4f850719acd2fb7d6661bb4f3dabd2948ea7d45dc5d36fd7c653> .
_:Nf11c4eea8a0e4ab7962648e31d8e0c06 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/5ae2dbf1ab6e4f850719acd2fb7d6661bb4f3dabd2948ea7d45dc5d36fd7c653> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/2a9e0f2e72720e8d50b4dba60e9557e67350c5ca33059543fced0f15aa0045e7> .
_:N34f1a0e02131459687efa3694bc3364f <http://schema.org/answer> "0" <http://groq.org/2a9e0f2e72720e8d50b4dba60e9557e67350c5ca33059543fced0f15aa0045e7> .
_:N34f1a0e02131459687efa3694bc3364f <http://schema.org/explain> "The lecture focuses on procedural database programming and access control, while the KU covers broader querying topics." <http://groq.org/2a9e0f2e72720e8d50b4dba60e9557e67350c5ca33059543fced0f15aa0045e7> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/has_schema_type> _:N34f1a0e02131459687efa3694bc3364f <http://groq.org/2a9e0f2e72720e8d50b4dba60e9557e67350c5ca33059543fced0f15aa0045e7> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Bases de données 2 Objectif: (résultats d'apprentissage) Programmer en un langage procédurale lié à une base de données, par exemple PL/SQL ou Course content: Vues et contrôle d’accès\n5. Course name: http://example.org/course/UE_XLG3IU040</page1>\n        <page2>Pages: 118 HOURS CS Core = 2 KA Core = 4 DM-Querying: Query Construction CS\nCore: 1\\. SQL Query Formation a. Interactive SQL execution b. Programmatic\nexecution of an SQL query KA Core: 2\\. Relational Algebra 3\\. SQL a. Data\ndefinition including integrity and other constraint specifications b. Update\nsublanguage Non-core: 4\\. Relational Calculus 5\\. QBE and 4th-generation\nenvironments 6\\. Different ways to invoke non-procedural queries in\nconventional languages 7\\. Introduction to other major query languages (e.g.,\nXPATH, SPARQL) 8\\. Stored procedures Illustrative Learning Outcomes: CS Core:\n1\\. Compose SQL queries that incorporate select, project, join, union,\nintersection, set difference, and set division. 2\\. Determine when a nested\nSQL query is correlated or not. 3\\. Iterate over data retrieved\nprogrammatically from a database via an SQL query. KA Core: 4\\. Define, in\nSQL, a relation schema, including all integrity constraints and delete/update\ntriggers. 5\\. Compose an SQL query to update a tuple in a relation.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/2a9e0f2e72720e8d50b4dba60e9557e67350c5ca33059543fced0f15aa0045e7> .
_:N34f1a0e02131459687efa3694bc3364f <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/2a9e0f2e72720e8d50b4dba60e9557e67350c5ca33059543fced0f15aa0045e7> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU040" <http://groq.org/2a9e0f2e72720e8d50b4dba60e9557e67350c5ca33059543fced0f15aa0045e7> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/fccb4a50dbbca381571d22546f83a4476949896ac176d705810d8b35f7e22b7a> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/has_schema_type> _:N27fa68a7cac8494ebedc80cf2f7a0c01 <http://groq.org/fccb4a50dbbca381571d22546f83a4476949896ac176d705810d8b35f7e22b7a> .
_:N27fa68a7cac8494ebedc80cf2f7a0c01 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/fccb4a50dbbca381571d22546f83a4476949896ac176d705810d8b35f7e22b7a> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Enjeux de la transition écologique Objectif: (résultats d'apprentissage) Course content: Programme des 9 séances en ligne (d’environ 1h30 de travail chacune) : Course name: http://example.org/course/UE_XLG3TU020</page1>\n        <page2>Pages: 146-147 HOURS CS Core = 0 KA Core = 0 FPL-Design: Design Principles of\nProgramming Languages Non-core: 1\\. Language design principles a. Simplicity\nb. Security (See also: SEC-Coding) c. Fast translation d. Efficient object\ncode e. Orthogonality f. Readability g. Completeness h. Implementation\nstrategies 2\\. Designing a language to fit a specific domain or problem 3\\.\nInteroperability between programming languages 4\\. Language portability 5\\.\nFormal description of a programming language 6\\. Green computing principles\n(See also: SEP-Sustainability) Illustrative Learning Outcomes: Non-core: 1\\.\nUnderstand what constitutes good language design and apply that knowledge to\nevaluate a real programming language.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/fccb4a50dbbca381571d22546f83a4476949896ac176d705810d8b35f7e22b7a> .
_:N27fa68a7cac8494ebedc80cf2f7a0c01 <http://schema.org/answer> "0" <http://groq.org/fccb4a50dbbca381571d22546f83a4476949896ac176d705810d8b35f7e22b7a> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU020" <http://groq.org/fccb4a50dbbca381571d22546f83a4476949896ac176d705810d8b35f7e22b7a> .
_:N27fa68a7cac8494ebedc80cf2f7a0c01 <http://schema.org/explain> "The lecture focuses on ecological transition, not programming language design." <http://groq.org/fccb4a50dbbca381571d22546f83a4476949896ac176d705810d8b35f7e22b7a> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU020" <http://groq.org/d0d7cb7b4304a4244058c389d6b2074d3ae55852d9b243e93ec8ee0f53cb12f3> .
_:N16715aa263bb4cd8af4510ab1686c57e <http://schema.org/answer> "1" <http://groq.org/d0d7cb7b4304a4244058c389d6b2074d3ae55852d9b243e93ec8ee0f53cb12f3> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Logique pour l'informatique Objectif: (résultats d'apprentissage)\nconsistance et complétude d'un système de preuves.\n4. Représenter une preuve de la déduction naturelle sous forme d'arbre d'inférence.\n5. Utiliser les algorithmes d'unification et de résolution pour le raisonnement automatique sur les\nformules logiques.\n1) Raisonnement algébrique booléen\n• Dualités des connecteurs logiques\n• Formes normales conjonctive et disjonctive\n2) Systèmes de preuves\n• Système d'inférence associé à une définition inductive\n• Preuve d'appartenance à un ensemble inductif par un arbre de preuves\n• Règles d'inférences de la déduction naturelle pour la logique propositionnelle\n• Distinguer logique classique et logique intuitionniste\n3) Donner du sens aux langages logique Course content: • Interprétation, modèle, satisfiabilité, validité\n• Correspondance avec le système de preuve: correction et complétude\n4) Calcul des prédicats\n• Manipulation des quantificateurs\n• Skolémisation, forme clausale\n• Théorie logique\n5) Raisonner automatiquement sur les formules logique\n• Algorithme d'unification\n• Algorithme de résolution Course name: http://example.org/course/UE_XLG3IU020</page1>\n        <page2>Pages:70-70 HOURS CS Core = 2 KA Core = 2 AI-KRR: Fundamental Knowledge\nRepresentation and Reasoning CS Core: 1\\. Types of representations a.\nSymbolic, logical i. Creating a representation from a natural language problem\nstatement b. Learned subsymbolic representations c. Graphical models (e.g.,\nnaive Bayes, Bayesian network) 2\\. Review of probabilistic reasoning, Bayes\ntheorem (See also: MSF-Probability) 3\\. Bayesian reasoning a. Bayesian\ninference KA Core: 4\\. Random variables and probability distributions a.\nAxioms of probability b. Probabilistic inference c. Bayes' Rule (derivation)\nd. Bayesian inference (more complex examples) 5\\. Independence 6\\. Conditional\nIndependence 7\\. Markov chains and Markov models 8\\. Utility and decision\nmaking Illustrative Learning Outcomes: 1\\. Given a natural language problem\nstatement, encode it as a symbolic or logical representation. 2\\. Explain how\nwe can make decisions under uncertainty, using concepts such as Bayes theorem\nand utility. 3\\. Compute a probabilistic inference in a real-world problem\nusing Bayes' theorem to determine the probability of a hypothesis given\nevidence. 4\\. Apply Bayes' rule to determine the probability of a hypothesis\ngiven evidence. 5\\. Compute the probability of outcomes and test whether\noutcomes are independent. 71 AI-ML: Machine Learning CS Core: 1\\. Definition\nand examples of a broad variety of machine learning tasks a. Supervised\nlearning i. Classification ii. Regression b. Reinforcement learning c.\nUnsupervised learning i. Clustering 2\\. Fundamental ideas: a. No free lunch\ntheorem: no one learner can solve all problems; representational design\ndecisions have consequences. b. Sources of error and undecidability</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/d0d7cb7b4304a4244058c389d6b2074d3ae55852d9b243e93ec8ee0f53cb12f3> .
_:N16715aa263bb4cd8af4510ab1686c57e <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/d0d7cb7b4304a4244058c389d6b2074d3ae55852d9b243e93ec8ee0f53cb12f3> .
_:N16715aa263bb4cd8af4510ab1686c57e <http://schema.org/explain> "The lecture covers topics in logic, proof systems, and reasoning, which align with the KU's focus on fundamental knowledge representation and reasoning in AI-KRR and CS Core." <http://groq.org/d0d7cb7b4304a4244058c389d6b2074d3ae55852d9b243e93ec8ee0f53cb12f3> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/has_schema_type> _:N16715aa263bb4cd8af4510ab1686c57e <http://groq.org/d0d7cb7b4304a4244058c389d6b2074d3ae55852d9b243e93ec8ee0f53cb12f3> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/d0d7cb7b4304a4244058c389d6b2074d3ae55852d9b243e93ec8ee0f53cb12f3> .
_:N1ab39538e0a645c58c9d28ba28086818 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/25f50326d6b8444bee3a01e6f8be624e2ecc4c5f707486f5703b3c03c3b60fda> .
_:N1ab39538e0a645c58c9d28ba28086818 <http://schema.org/answer> "1" <http://groq.org/25f50326d6b8444bee3a01e6f8be624e2ecc4c5f707486f5703b3c03c3b60fda> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/has_schema_type> _:N1ab39538e0a645c58c9d28ba28086818 <http://groq.org/25f50326d6b8444bee3a01e6f8be624e2ecc4c5f707486f5703b3c03c3b60fda> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU030" <http://groq.org/25f50326d6b8444bee3a01e6f8be624e2ecc4c5f707486f5703b3c03c3b60fda> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Systèmes d'exploitation Objectif: (résultats d'apprentissage)\nsynchronisation/communication (Application)\n• Etre capable d'utiliser les mécanismes de synchronisation usuels sous Linux (sémaphores,\nmutexes, signaux) (Application)\n• Comprendre le principe de mémoire virtuelle (Initiation)\n• Savoir gérer les entrées/sorties sous Linux (Initiation) Course content: par le système d'exploitation y sont exposées : comment les processus se partagent-ils l'accès au\nprocesseur ? Comment se synchronisent-ils et quels mécanismes leur permettent d'échanger des\ndonnées ? Comment sont gérés la mémoire et les entrées/sorties ? Course name: http://example.org/course/UE_XLG4IU030</page1>\n        <page2>Pages: 139-140 HOURS CS Core = 2 KA Core = 3 FPL-Translation: Language\nTranslation and Execution CS Core: 1\\. Execution models for JIT (Just-In-\nTime), compiler, interpreter 2\\. Use of intermediate code, e.g., bytecode 3\\.\nLimitations and benefits of JIT, compiler, and interpreter 4\\. Cross\ncompilers/transpilers 5\\. BNF and extended BNF representation of context-free\ngrammar 6\\. Parse tree using a simple sentence such as arithmetic expression\nor if-then-else statement 7\\. Execution as native code or within a virtual\nmachine 8\\. Language translation pipeline: syntax analysis, parsing, optional\ntype-checking, translation/code generation and optimization, linking, loading,\nexecution KA Core: 9\\. Run-time representation of core language constructs\nsuch as objects (method tables) and functions that can be passed as parameters\nto and returned from functions (closures) 10\\. Secure compiler development\n(See also: SEC-Foundations, SEC-Coding) Illustrative learning outcomes: CS\nCore: 1\\. Explain and understand the differences between compiled, JIT, and\ninterpreted language implementations, including the benefits and limitations\nof each. 2\\. Differentiate syntax and parsing from semantics and evaluation.\n3\\. Use BNF and extended BNF to specify the syntax of simple constructs such\nas if-then-else, type declaration and iterative constructs for known languages\nsuch as C++ or Python. 4\\. Illustrate the parse tree using a simple\nsentence/arithmetic expression. 5\\. Illustrate translation of syntax diagrams\nto BNF/extended BNF for simple constructs such as if-thenelse, type\ndeclaration, iterative constructs, etc. 6\\. Illustrate ambiguity in parsing\nusing nested if-then-else/arithmetic expression and show resolution using\nprecedence order. KA-Core: 7\\. Discuss the benefits and limitations of garbage\ncollection, including the notion of reachability.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/25f50326d6b8444bee3a01e6f8be624e2ecc4c5f707486f5703b3c03c3b60fda> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/25f50326d6b8444bee3a01e6f8be624e2ecc4c5f707486f5703b3c03c3b60fda> .
_:N1ab39538e0a645c58c9d28ba28086818 <http://schema.org/explain> "The lecture covers topics such as process synchronization, memory management, and I/O management, which are also covered in the KU, indicating a substantial overlap." <http://groq.org/25f50326d6b8444bee3a01e6f8be624e2ecc4c5f707486f5703b3c03c3b60fda> .
_:N868c15a9919d435faff073ca7944d19a <http://schema.org/explain> "The lecture focuses on data structures, not logic programming." <http://groq.org/f864101355e3d05311ba15cf9ea8b1aece69a5b4c51e4d866fa632d350e0915b> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/f864101355e3d05311ba15cf9ea8b1aece69a5b4c51e4d866fa632d350e0915b> .
_:N868c15a9919d435faff073ca7944d19a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/f864101355e3d05311ba15cf9ea8b1aece69a5b4c51e4d866fa632d350e0915b> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/has_schema_type> _:N868c15a9919d435faff073ca7944d19a <http://groq.org/f864101355e3d05311ba15cf9ea8b1aece69a5b4c51e4d866fa632d350e0915b> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 2 Objectif: (résultats d'apprentissage)\ndonnées (itératifs et récursifs) Course content: Structures de données non-linéaires associatives (table associative, ensemble, classe-union) Course name: http://example.org/course/UE_XLG4IU010</page1>\n        <page2>Pages: 133 HOURS CS Core = 0 KA Core = 2 + 1 (MSF) FPL-Logic: Logic\nProgramming KA Core: 1\\. Universal vs existential quantifiers. (See also: AI-\nLRR, MSF-Discrete) 2\\. First order predicate logic vs higher order logic. (See\nalso: AI-LRR, MSF-Discrete) 3\\. Expressing complex relations using logical\nconnectives and simpler relations. 4\\. Definitions of Horn clause, facts,\ngoals and subgoals. 5\\. Unification and unification algorithm; unification vs\nassertion vs expression evaluation. 6\\. Mixing relations with functions. (See\nalso: MSF-Discrete) 7\\. Cuts, backtracking, and non-determinism. 8\\. Closed-\nworld vs open-world assumptions. Non-core: 9\\. Memory overhead of variable\ncopying in handling iterative programs. 10\\. Programming constructs to store\npartial computation and pruning search trees. 11\\. Mixing functional\nprogramming and logic programming using concepts such as equational logic,\nnarrowing, residuation, and semantic unification. (See also: FPL-Functional)\n12\\. Higher-order, constraint, and inductive logic programming. (See also: AI-\nLRR) 13\\. Integration with other programming paradigms such as object-oriented\nprogramming. 14\\. Advance programming constructs such as difference-lists,\ncreating user defined data structures, set of, etc. Illustrative learning\noutcomes: KA Core: 1\\. Use a logic language to implement a conventional\nalgorithm. 2\\. Use a logic language to implement an algorithm employing\nimplicit search using clauses, relations, and cuts. 3\\. Use a simple\nillustrative example to show correspondence between First Order Predicate\nLogic (FOPL) and logic programs using Horn clauses. 4\\. Use examples to\nillustrate the unification algorithm and its role of parameter-passing in\nquery reduction. 5\\. Use simple logic programs interleaving relations,\nfunctions, and recursive programming such as factorial and Fibonacci numbers\nand simple complex relationships between entities and illustrate execution and\nparameter-passing using unification and backtracking. Non-core: 6\\. Illustrate\ncomputation of simple programs such as Fibonacci and show overhead of\nrecomputation, and then show how to improve execution overhead.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/f864101355e3d05311ba15cf9ea8b1aece69a5b4c51e4d866fa632d350e0915b> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU010" <http://groq.org/f864101355e3d05311ba15cf9ea8b1aece69a5b4c51e4d866fa632d350e0915b> .
_:N868c15a9919d435faff073ca7944d19a <http://schema.org/answer> "0" <http://groq.org/f864101355e3d05311ba15cf9ea8b1aece69a5b4c51e4d866fa632d350e0915b> .
_:Nc71c1a33367b4a89a932b6021f426d1f <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/d1c06ab1eafcefe5d0950052c4b399b076c6a9da7ef2130099d8165a54590756> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 1 Objectif: (résultats d'apprentissage)\n•\nÉvaluer une implémentation de structure de données en temps et en place mémoire (coûts minimal,\nmaximal, amorti)\n• Course content: et mise en pratique dans l’approche de résolution de problèmes « Diviser pour régner ». Course name: http://example.org/course/UE_XLG3IU010</page1>\n        <page2>Pages: 133 HOURS CS Core = 0 KA Core = 2 + 1 (MSF) FPL-Logic: Logic\nProgramming KA Core: 1\\. Universal vs existential quantifiers. (See also: AI-\nLRR, MSF-Discrete) 2\\. First order predicate logic vs higher order logic. (See\nalso: AI-LRR, MSF-Discrete) 3\\. Expressing complex relations using logical\nconnectives and simpler relations. 4\\. Definitions of Horn clause, facts,\ngoals and subgoals. 5\\. Unification and unification algorithm; unification vs\nassertion vs expression evaluation. 6\\. Mixing relations with functions. (See\nalso: MSF-Discrete) 7\\. Cuts, backtracking, and non-determinism. 8\\. Closed-\nworld vs open-world assumptions. Non-core: 9\\. Memory overhead of variable\ncopying in handling iterative programs. 10\\. Programming constructs to store\npartial computation and pruning search trees. 11\\. Mixing functional\nprogramming and logic programming using concepts such as equational logic,\nnarrowing, residuation, and semantic unification. (See also: FPL-Functional)\n12\\. Higher-order, constraint, and inductive logic programming. (See also: AI-\nLRR) 13\\. Integration with other programming paradigms such as object-oriented\nprogramming. 14\\. Advance programming constructs such as difference-lists,\ncreating user defined data structures, set of, etc. Illustrative learning\noutcomes: KA Core: 1\\. Use a logic language to implement a conventional\nalgorithm. 2\\. Use a logic language to implement an algorithm employing\nimplicit search using clauses, relations, and cuts. 3\\. Use a simple\nillustrative example to show correspondence between First Order Predicate\nLogic (FOPL) and logic programs using Horn clauses. 4\\. Use examples to\nillustrate the unification algorithm and its role of parameter-passing in\nquery reduction. 5\\. Use simple logic programs interleaving relations,\nfunctions, and recursive programming such as factorial and Fibonacci numbers\nand simple complex relationships between entities and illustrate execution and\nparameter-passing using unification and backtracking. Non-core: 6\\. Illustrate\ncomputation of simple programs such as Fibonacci and show overhead of\nrecomputation, and then show how to improve execution overhead.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/d1c06ab1eafcefe5d0950052c4b399b076c6a9da7ef2130099d8165a54590756> .
_:Nc71c1a33367b4a89a932b6021f426d1f <http://schema.org/answer> "1" <http://groq.org/d1c06ab1eafcefe5d0950052c4b399b076c6a9da7ef2130099d8165a54590756> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU010" <http://groq.org/d1c06ab1eafcefe5d0950052c4b399b076c6a9da7ef2130099d8165a54590756> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/d1c06ab1eafcefe5d0950052c4b399b076c6a9da7ef2130099d8165a54590756> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/has_schema_type> _:Nc71c1a33367b4a89a932b6021f426d1f <http://groq.org/d1c06ab1eafcefe5d0950052c4b399b076c6a9da7ef2130099d8165a54590756> .
_:Nc71c1a33367b4a89a932b6021f426d1f <http://schema.org/explain> "The lecture covers a significant portion of the KU, including topics such as algorithm implementation, data structures, and logic programming, with a focus on practical application and problem-solving." <http://groq.org/d1c06ab1eafcefe5d0950052c4b399b076c6a9da7ef2130099d8165a54590756> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Introduction aux probabilités Objectif: (résultats d'apprentissage)\n• Course content: Définition et calcul de la probabilité conditionnelle\n• Course name: http://example.org/course/UE_XLG3MU050</page1>\n        <page2>Pages: 188-189 HOURS CS Core = 11 KA Core = 29 MSF-Probability: Probability CS\nCore: 1\\. Basic notions: sample spaces, events, probability, conditional\nprobability, Bayes' rule 2\\. Discrete random variables and distributions 3\\.\nContinuous random variables and distributions 4\\. Expectation, variance, law\nof large numbers, central limit theorem 5\\. Conditional distributions and\nexpectation 6\\. Applications to computing, the difference between probability\nand statistics (as subjects) KA Core: The recommended topics are the same\nbetween CS core and KA-core, but with far more hours, the KA-core can cover\nthese topics in depth and might include more computing-related applications.\nIllustrative Learning Outcomes: CS Core: 1\\. Basic notions: sample spaces,\nevents, probability, conditional probability, Bayes' rule a. Translate a prose\ndescription of a probabilistic process into a formal setting of sample spaces,\noutcome probabilities, and events. b. Calculate the probability of simple\nevents. c. Determine whether two events are independent. d. Compute\nconditional probabilities, including through applying (and explaining) Bayes'\nRule. 2\\. Discrete random variables and distributions a. Define the concept of\na random variable and indicator random variable. b. Determine whether two\nrandom variables are independent. c. Identify common discrete distributions\n(e.g., uniform, Bernoulli, binomial, geometric). 3\\. Continuous random\nvariables and distributions a. Identify common continuous distributions (e.g.,\nuniform, normal, exponential). b. Calculate probabilities using cumulative\ndensity functions. 4\\. Expectation, variance, law of large numbers, central\nlimit theorem a. Define the concept of expectation and variance of a random\nvariable. b. Compute the expected value and variance of simple or common\ndiscrete/continuous random variables. c. Explain the relevance of the law of\nlarge numbers and central limit theorem to probability calculations. 5\\.\nConditional distributions and expectation a. Explain the distinction between\njoint, marginal, and conditional distributions. b. Compute marginal and\nconditional distributions from a full distribution, for both discrete and\ncontinuous random variables. c. Compute conditional expectations for both\ndiscrete and continuous random variables. 6\\. Applications to computing a.\nDescribe how probability can be used to model real-life situations or\napplications, such as predictive text, hash tables, and quantum computation.\nb. Apply probabilistic processes to solving computational problems, such as\nthrough randomized algorithms or in security contexts.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/f5dbdf2c3f63d4b18533386a550a58495104ae6a9fd36204a577d3b11ebecfb4> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/f5dbdf2c3f63d4b18533386a550a58495104ae6a9fd36204a577d3b11ebecfb4> .
_:N4d030aeadad143b6b68c06a18b74208d <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/f5dbdf2c3f63d4b18533386a550a58495104ae6a9fd36204a577d3b11ebecfb4> .
_:N4d030aeadad143b6b68c06a18b74208d <http://schema.org/explain> "Covers only conditional probability, not broader KU topics" <http://groq.org/f5dbdf2c3f63d4b18533386a550a58495104ae6a9fd36204a577d3b11ebecfb4> .
<http://example.org/course/UE_XLG3MU050> <http://example.org/has_schema_type> _:N4d030aeadad143b6b68c06a18b74208d <http://groq.org/f5dbdf2c3f63d4b18533386a550a58495104ae6a9fd36204a577d3b11ebecfb4> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3MU050" <http://groq.org/f5dbdf2c3f63d4b18533386a550a58495104ae6a9fd36204a577d3b11ebecfb4> .
_:N4d030aeadad143b6b68c06a18b74208d <http://schema.org/answer> "0" <http://groq.org/f5dbdf2c3f63d4b18533386a550a58495104ae6a9fd36204a577d3b11ebecfb4> .
_:Nd27e227e18b444c5b3fee914fbcb55bc <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/93af2df190988c088b745c96ec42616199ae2052a3bc2278e6031180215cac3d> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algèbre linéaire Objectif: (résultats d'apprentissage) Appliquer un algorithme adéquat pour résoudre un système linéaire\n• Course content: • Course name: http://example.org/course/UE_XLG4MU060</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/93af2df190988c088b745c96ec42616199ae2052a3bc2278e6031180215cac3d> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4MU060" <http://groq.org/93af2df190988c088b745c96ec42616199ae2052a3bc2278e6031180215cac3d> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/has_schema_type> _:Nd27e227e18b444c5b3fee914fbcb55bc <http://groq.org/93af2df190988c088b745c96ec42616199ae2052a3bc2278e6031180215cac3d> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/93af2df190988c088b745c96ec42616199ae2052a3bc2278e6031180215cac3d> .
_:Nd27e227e18b444c5b3fee914fbcb55bc <http://schema.org/explain> "The lecture does not cover the specific topics of development platforms, programming languages, and techniques for learning a platform-specific programming language, which are the main focus of the KU." <http://groq.org/93af2df190988c088b745c96ec42616199ae2052a3bc2278e6031180215cac3d> .
_:Nd27e227e18b444c5b3fee914fbcb55bc <http://schema.org/answer> "0" <http://groq.org/93af2df190988c088b745c96ec42616199ae2052a3bc2278e6031180215cac3d> .
_:N4cf770bfff814fcd85c81c8e6e3604bd <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/b367ff59ad4157a03ce83d9125f192256ba508cd2b951328235b2447d1c8fb6f> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/b367ff59ad4157a03ce83d9125f192256ba508cd2b951328235b2447d1c8fb6f> .
_:N4cf770bfff814fcd85c81c8e6e3604bd <http://schema.org/answer> "0" <http://groq.org/b367ff59ad4157a03ce83d9125f192256ba508cd2b951328235b2447d1c8fb6f> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 1 Objectif: (résultats d'apprentissage)\n•\nÉvaluer une implémentation de structure de données en temps et en place mémoire (coûts minimal,\nmaximal, amorti)\n• Course content: et mise en pratique dans l’approche de résolution de problèmes « Diviser pour régner ». Course name: http://example.org/course/UE_XLG3IU010</page1>\n        <page2>Pages: 133 HOURS CS Core = 0 KA Core = 2 + 1 (MSF) FPL-Logic: Logic\nProgramming KA Core: 1\\. Universal vs existential quantifiers. (See also: AI-\nLRR, MSF-Discrete) 2\\. First order predicate logic vs higher order logic. (See\nalso: AI-LRR, MSF-Discrete) 3\\. Expressing complex relations using logical\nconnectives and simpler relations. 4\\. Definitions of Horn clause, facts,\ngoals and subgoals. 5\\. Unification and unification algorithm; unification vs\nassertion vs expression evaluation. 6\\. Mixing relations with functions. (See\nalso: MSF-Discrete) 7\\. Cuts, backtracking, and non-determinism. 8\\. Closed-\nworld vs open-world assumptions. Non-core: 9\\. Memory overhead of variable\ncopying in handling iterative programs. 10\\. Programming constructs to store\npartial computation and pruning search trees. 11\\. Mixing functional\nprogramming and logic programming using concepts such as equational logic,\nnarrowing, residuation, and semantic unification. (See also: FPL-Functional)\n12\\. Higher-order, constraint, and inductive logic programming. (See also: AI-\nLRR) 13\\. Integration with other programming paradigms such as object-oriented\nprogramming. 14\\. Advance programming constructs such as difference-lists,\ncreating user defined data structures, set of, etc. Illustrative learning\noutcomes: KA Core: 1\\. Use a logic language to implement a conventional\nalgorithm. 2\\. Use a logic language to implement an algorithm employing\nimplicit search using clauses, relations, and cuts. 3\\. Use a simple\nillustrative example to show correspondence between First Order Predicate\nLogic (FOPL) and logic programs using Horn clauses. 4\\. Use examples to\nillustrate the unification algorithm and its role of parameter-passing in\nquery reduction. 5\\. Use simple logic programs interleaving relations,\nfunctions, and recursive programming such as factorial and Fibonacci numbers\nand simple complex relationships between entities and illustrate execution and\nparameter-passing using unification and backtracking. Non-core: 6\\. Illustrate\ncomputation of simple programs such as Fibonacci and show overhead of\nrecomputation, and then show how to improve execution overhead.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/b367ff59ad4157a03ce83d9125f192256ba508cd2b951328235b2447d1c8fb6f> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU010" <http://groq.org/b367ff59ad4157a03ce83d9125f192256ba508cd2b951328235b2447d1c8fb6f> .
_:N4cf770bfff814fcd85c81c8e6e3604bd <http://schema.org/explain> "Lecture focuses on data structures/Divide and Conquer, while KU covers logic programming fundamentals (unification, Horn clauses, etc.) not mentioned in lecture" <http://groq.org/b367ff59ad4157a03ce83d9125f192256ba508cd2b951328235b2447d1c8fb6f> .
<http://example.org/course/UE_XLG3IU010> <http://example.org/has_schema_type> _:N4cf770bfff814fcd85c81c8e6e3604bd <http://groq.org/b367ff59ad4157a03ce83d9125f192256ba508cd2b951328235b2447d1c8fb6f> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/has_schema_type> _:Nd55c3cb0801d4804803171c89ff27d5a <http://groq.org/ce393e41e90442234d668265143308f7192021f70bfd567ab233fa46fd85513c> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/ce393e41e90442234d668265143308f7192021f70bfd567ab233fa46fd85513c> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S4 Objectif: (résultats d'apprentissage)\nfaire et savoir-être) et d'un plan d'actions sur les prochaines années : à l'écrit et à l'oral\n- d'identitier et d'animer son réseau (professionnel et élargi)\n- de créer et de faire vivre ses profils numériques professionnels\n- de mener une enquête métier auprès d'un professionnel et de la restituer Course content: - présentation orale de la restitution de l'enquête et des recherches sur le métier\n- équivalent de 8 TD + présentation orale des enquêtes:\n- identication de ses valeurs\n- indentification de ses compétences\n- consrtruction de son projet professionnel et personnel\n- présentation de son projet Course name: http://example.org/course/UE_XLG4TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Project Management: Core\nConcepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nSE-Project Management. 2\\. Apply principles in practical scenarios. 3\\.\nAnalyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/ce393e41e90442234d668265143308f7192021f70bfd567ab233fa46fd85513c> .
_:Nd55c3cb0801d4804803171c89ff27d5a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/ce393e41e90442234d668265143308f7192021f70bfd567ab233fa46fd85513c> .
_:Nd55c3cb0801d4804803171c89ff27d5a <http://schema.org/answer> "0" <http://groq.org/ce393e41e90442234d668265143308f7192021f70bfd567ab233fa46fd85513c> .
_:Nd55c3cb0801d4804803171c89ff27d5a <http://schema.org/explain> "The lecture focuses on professional development and networking, while the KU covers software engineering project management." <http://groq.org/ce393e41e90442234d668265143308f7192021f70bfd567ab233fa46fd85513c> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU010" <http://groq.org/ce393e41e90442234d668265143308f7192021f70bfd567ab233fa46fd85513c> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4AU010" <http://groq.org/97458bf1a24f916c19b5aa61fa4da5fe5dcc56d6137e1fad85f51d29c824aed0> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/97458bf1a24f916c19b5aa61fa4da5fe5dcc56d6137e1fad85f51d29c824aed0> .
_:N374d16cf9af3450c8bbc38c6e495199d <http://schema.org/answer> "0" <http://groq.org/97458bf1a24f916c19b5aa61fa4da5fe5dcc56d6137e1fad85f51d29c824aed0> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S4 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4AU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/97458bf1a24f916c19b5aa61fa4da5fe5dcc56d6137e1fad85f51d29c824aed0> .
_:N374d16cf9af3450c8bbc38c6e495199d <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/97458bf1a24f916c19b5aa61fa4da5fe5dcc56d6137e1fad85f51d29c824aed0> .
_:N374d16cf9af3450c8bbc38c6e495199d <http://schema.org/explain> "The lecture focuses on teaching methods in English, which does not cover the technical content of the Knowledge Unit on formal methods in software engineering." <http://groq.org/97458bf1a24f916c19b5aa61fa4da5fe5dcc56d6137e1fad85f51d29c824aed0> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/has_schema_type> _:N374d16cf9af3450c8bbc38c6e495199d <http://groq.org/97458bf1a24f916c19b5aa61fa4da5fe5dcc56d6137e1fad85f51d29c824aed0> .
_:N4254ca359abc494bb03d4b1b64aa068d <http://schema.org/explain> "The lecture covers the course content of SE-Formal Methods, including key concepts, practical applications, and importance in computing, which aligns with the Knowledge Unit's objectives." <http://groq.org/ba4c1ab6f4c1c98aac0183d391221906f336d1ca6363526aafaf7c7156029cf7> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU010" <http://groq.org/ba4c1ab6f4c1c98aac0183d391221906f336d1ca6363526aafaf7c7156029cf7> .
_:N4254ca359abc494bb03d4b1b64aa068d <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/ba4c1ab6f4c1c98aac0183d391221906f336d1ca6363526aafaf7c7156029cf7> .
_:N4254ca359abc494bb03d4b1b64aa068d <http://schema.org/answer> "1" <http://groq.org/ba4c1ab6f4c1c98aac0183d391221906f336d1ca6363526aafaf7c7156029cf7> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/has_schema_type> _:N4254ca359abc494bb03d4b1b64aa068d <http://groq.org/ba4c1ab6f4c1c98aac0183d391221906f336d1ca6363526aafaf7c7156029cf7> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/ba4c1ab6f4c1c98aac0183d391221906f336d1ca6363526aafaf7c7156029cf7> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/ba4c1ab6f4c1c98aac0183d391221906f336d1ca6363526aafaf7c7156029cf7> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/4c72c5efcf5e34d9bce8f2a53bdd53bca6fe3078596bb4c5105baef936ef4ef1> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 2 Objectif: (résultats d'apprentissage)\ndonnées (itératifs et récursifs) Course content: Structures de données non-linéaires associatives (table associative, ensemble, classe-union) Course name: http://example.org/course/UE_XLG4IU010</page1>\n        <page2>Pages:88-90 HOURS CS Core = 11 KA Core = 6 AL-Foundational: Foundational Data\nStructures and Algorithms CS Core: (See also: SDF-Data-Structures, SDF-\nAlgorithms) 1\\. Abstract Data Type (ADT) and operations on an ADT (See also:\nFPL-Types) a. Dictionary operations (insert, delete, find) 2\\. Arrays a.\nNumeric vs non-numeric, character strings b. Single (vector) vs\nmultidimensional (matrix) 3\\. Records/Structs/Tuples and Objects (See also:\nFPL-OOP) 4\\. Linked lists (for historical reasons) a. Single vs Double and\nLinear vs Circular 5\\. Stacks 6\\. Queues and deques a. Heap-based priority\nqueue 7\\. Hash tables/maps a. Collision resolution and complexity (e.g.,\nprobing, chaining, rehash) 8\\. Graphs (e.g., [un]directed, [a]cyclic,\n[un]connected, and [un]weighted) (See also: MSF-Discrete) a. Graph\nrepresentation: adjacency list vs matrix 9\\. Trees (See also: MSF-Discrete) a.\nBinary, n-ary, and search trees b. Balanced (e.g., AVL, Red-Black, Heap) 10\\.\nSets (See also: MSF-Discrete) 11\\. Search algorithms a. O(n) complexity (e.g.,\nlinear/sequential array/list search) b. O(log2 n) complexity (e.g., binary\nsearch) c. O(logb n) complexity (e.g., uninformed depth/breadth-first tree\nsearch) 12\\. Sorting algorithms (e.g., stable, unstable) a. O(n2) complexity\n(e.g., insertion, selection), b. O(n log n) complexity (e.g., quicksort,\nmerge, timsort) 13\\. Graph algorithms a. Shortest path (e.g., Dijkstra's,\nFloyd's) b. Minimal spanning tree (e.g., Prim's, Kruskal's) KA Core: 14\\.\nSorting algorithms a. O(n log n) complexity heapsort b. Pseudo O(n) complexity\n(e.g., bucket, counting, radix) 15\\. Graph algorithms a. Transitive closure\n(e.g., Warshall's) b. Topological sort 16\\. Matching a. Efficient string\nmatching (e.g., Boyer-Moore, Knuth-Morris-Pratt) b. Longest common subsequence\nmatching c. Regular expression matching Non-core: 17\\. Cryptography algorithms\n(e.g., SHA-256) (See also: SEC-Crypto) 18\\. Parallel algorithms (See also:\nPDC-Algorithms, FPL-Parallel) 19\\. Consensus algorithms (e.g., Blockchain)\n(See also: SEC-Crypto) a. Proof of work vs proof of stake (See also: SEP-\nSustainability) 20\\. Quantum computing algorithms (See also: AL-Models, AR-\nQuantum) a. Oracle-based (e.g., Deutsch-Jozsa, Bernstein-Vazirani, Simon) b.\nSuperpolynomial speed-up via QFT (e.g., Shor's) c. Polynomial speed-up via\namplitude amplification (e.g., Grover's) 21\\. Fast-Fourier Transform (FFT)\nalgorithm 22\\. Differential evolution algorithm Illustrative Learning\nOutcomes: CS Core: 1\\. For each ADT/Data-Structure in this unit a. Explain its\ndefinition, properties, representation(s), and associated ADT operations. b.\nExplain step-by-step how the ADT operations associated with the data structure\ntransform it. 2\\. For each algorithm in this unit explain step-by-step how the\nalgorithm operates. 3\\. For each algorithmic approach (e.g., sorting) in this\nunit apply a prototypical example of the approach (e.g., merge sort). 90 4\\.\nGiven requirements for a problem, develop multiple solutions using various\ndata structures and algorithms. Subsequently, evaluate the suitability,\nstrengths, and weaknesses selecting an approach that best satisfies the\nrequirements. 5\\. Explain how collision avoidance and collision resolution is\nhandled in hash tables. 6\\. Explain factors beyond computational efficiency\nthat influence the choice of algorithms, such as programming time,\nmaintainability, and the use of application-specific patterns in the input\ndata. 7\\. Explain the heap property and the use of heaps as an implementation\nof a priority queue. KA Core: 8\\. For each of the algorithms and algorithmic\napproaches in the KA Core topics: a. Explain a prototypical example of the\nalgorithm, and b. Explain step-by-step how the algorithm operates. Non-core:\n9\\. An appreciation of quantum computation and its application to certain\nproblems.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/4c72c5efcf5e34d9bce8f2a53bdd53bca6fe3078596bb4c5105baef936ef4ef1> .
_:Nfd81299f342048a881571acb43bdb832 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/4c72c5efcf5e34d9bce8f2a53bdd53bca6fe3078596bb4c5105baef936ef4ef1> .
_:Nfd81299f342048a881571acb43bdb832 <http://schema.org/explain> "Covers associative structures (hash tables, trees, graphs) and ADTs but misses arrays, linked lists, and specific algorithms like sorting/searching details." <http://groq.org/4c72c5efcf5e34d9bce8f2a53bdd53bca6fe3078596bb4c5105baef936ef4ef1> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/has_schema_type> _:Nfd81299f342048a881571acb43bdb832 <http://groq.org/4c72c5efcf5e34d9bce8f2a53bdd53bca6fe3078596bb4c5105baef936ef4ef1> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU010" <http://groq.org/4c72c5efcf5e34d9bce8f2a53bdd53bca6fe3078596bb4c5105baef936ef4ef1> .
_:Nfd81299f342048a881571acb43bdb832 <http://schema.org/answer> "1" <http://groq.org/4c72c5efcf5e34d9bce8f2a53bdd53bca6fe3078596bb4c5105baef936ef4ef1> .
_:Nd8c6a3660b3b476a838de620cec7085a <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://faiss.org/2d5a0938a752a8353e2178adddf9d6f52410768200676d81e4448670625d1161> .
_:Nef386e9941814e06afb2cdf026e90ae6 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://faiss.org/2d5a0938a752a8353e2178adddf9d6f52410768200676d81e4448670625d1161> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/is_aligned_with> _:N98180c25a9374e9dad39c7ef0b232545 <http://faiss.org/2d5a0938a752a8353e2178adddf9d6f52410768200676d81e4448670625d1161> .
_:N98180c25a9374e9dad39c7ef0b232545 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Software Architecture: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Software Architecture.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/2d5a0938a752a8353e2178adddf9d6f52410768200676d81e4448670625d1161> .
_:N98180c25a9374e9dad39c7ef0b232545 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Software_Architecture.txt> <http://faiss.org/2d5a0938a752a8353e2178adddf9d6f52410768200676d81e4448670625d1161> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/is_aligned_with> _:Nd8c6a3660b3b476a838de620cec7085a <http://faiss.org/2d5a0938a752a8353e2178adddf9d6f52410768200676d81e4448670625d1161> .
_:Nef386e9941814e06afb2cdf026e90ae6 <http://example.org/has_score> "0.6588453"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/2d5a0938a752a8353e2178adddf9d6f52410768200676d81e4448670625d1161> .
<http://example.org/faiss> <http://example.org/input> "Label: 2nd year English S4 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4AU010" <http://faiss.org/2d5a0938a752a8353e2178adddf9d6f52410768200676d81e4448670625d1161> .
_:N98180c25a9374e9dad39c7ef0b232545 <http://example.org/has_score> "0.6397157"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/2d5a0938a752a8353e2178adddf9d6f52410768200676d81e4448670625d1161> .
_:Nd8c6a3660b3b476a838de620cec7085a <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/2d5a0938a752a8353e2178adddf9d6f52410768200676d81e4448670625d1161> .
<http://example.org/course/UE_XLG4AU010> <http://example.org/is_aligned_with> _:Nef386e9941814e06afb2cdf026e90ae6 <http://faiss.org/2d5a0938a752a8353e2178adddf9d6f52410768200676d81e4448670625d1161> .
_:Nef386e9941814e06afb2cdf026e90ae6 <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://faiss.org/2d5a0938a752a8353e2178adddf9d6f52410768200676d81e4448670625d1161> .
_:Nd8c6a3660b3b476a838de620cec7085a <http://example.org/has_score> "0.65662575"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/2d5a0938a752a8353e2178adddf9d6f52410768200676d81e4448670625d1161> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU010" <http://groq.org/bfb29f83a910b4a28b4c07a4d683a71891b8d6f4828d7228768267fddc24c1d0> .
_:Nee04093ac90340abb798212eac166b7a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/bfb29f83a910b4a28b4c07a4d683a71891b8d6f4828d7228768267fddc24c1d0> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/bfb29f83a910b4a28b4c07a4d683a71891b8d6f4828d7228768267fddc24c1d0> .
_:Nee04093ac90340abb798212eac166b7a <http://schema.org/answer> "0" <http://groq.org/bfb29f83a910b4a28b4c07a4d683a71891b8d6f4828d7228768267fddc24c1d0> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD GIT-3D Modeling: Core Concepts CS\nCore: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic 3\nKA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of GIT-3D Modeling.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/bfb29f83a910b4a28b4c07a4d683a71891b8d6f4828d7228768267fddc24c1d0> .
_:Nee04093ac90340abb798212eac166b7a <http://schema.org/explain> "No overlap in topics (teaching methods vs. 3D modeling)" <http://groq.org/bfb29f83a910b4a28b4c07a4d683a71891b8d6f4828d7228768267fddc24c1d0> .
<http://example.org/course/UE_XLG3TU010> <http://example.org/has_schema_type> _:Nee04093ac90340abb798212eac166b7a <http://groq.org/bfb29f83a910b4a28b4c07a4d683a71891b8d6f4828d7228768267fddc24c1d0> .
_:N4870cd39391a455da3dba36cdb544e0e <http://schema.org/explain> "The lecture on linear algebra does not cover the calculus topics described in the KU." <http://groq.org/edb2cf474790451aab70ad555878ff436be1d122b8a2944d8f7165e9d21453d4> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/edb2cf474790451aab70ad555878ff436be1d122b8a2944d8f7165e9d21453d4> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4MU060" <http://groq.org/edb2cf474790451aab70ad555878ff436be1d122b8a2944d8f7165e9d21453d4> .
_:N4870cd39391a455da3dba36cdb544e0e <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/edb2cf474790451aab70ad555878ff436be1d122b8a2944d8f7165e9d21453d4> .
_:N4870cd39391a455da3dba36cdb544e0e <http://schema.org/answer> "0" <http://groq.org/edb2cf474790451aab70ad555878ff436be1d122b8a2944d8f7165e9d21453d4> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algèbre linéaire Objectif: (résultats d'apprentissage) Appliquer un algorithme adéquat pour résoudre un système linéaire\n• Course content: • Course name: http://example.org/course/UE_XLG4MU060</page1>\n        <page2>Pages: 192-194 HOURS CS Core = 0 KA Core = 40 MSF-Calculus KA Core: 1\\.\nSequences, series, limits 2\\. Single-variable derivatives: definition,\ncomputation rules (chain rule etc.), derivatives of important functions,\napplications 3\\. Single-variable integration: definition, computation rules,\nintegrals of important functions, fundamental theorem of calculus, definite vs\nindefinite, applications (including in probability) 4\\. Parametric and polar\nrepresentations 5\\. Taylor series 6\\. Multivariate calculus: partial\nderivatives, gradient, chain-rule, vector valued functions, 7\\. Optimization:\nconvexity, global vs local minima, gradient descent, constrained optimization,\nand Lagrange multipliers. 8\\. Ordinary Differential Equations (ODEs):\ndefinition, Euler method, applications to simulation, Monte Carlo integration\n9\\. CS applications: gradient descent for machine learning, forward and\ninverse kinematics, applications of calculus to probability Note: the calculus\ntopics listed above are aligned with computer science goals rather than with\ntraditional calculus courses. For example, multivariate calculus is often a\ncourse by itself, but computer science undergraduates only need parts of it\nfor machine learning. Illustrative Learning Outcomes: KA Core: 1\\. Sequences,\nseries, limits a. Explain the difference between infinite sets and sequences.\nb. Explain the formal definition of a limit. c. Derive the limit for examples\nof sequences and series. d. Explain convergence and divergence. e. Apply\nL'Hospital's rule and other approaches to resolving limits. 2\\. Single-\nvariable derivatives: definition, computation rules (chain rule etc.),\nderivatives of important functions, applications a. Explain a derivative in\nterms of limits. b. Explain derivatives as functions. c. Perform elementary\nderivative calculations from limits. d. Apply sum, product, and quotient\nrules. e. Work through examples with important functions. 3\\. Single-variable\nintegration: definition, computation rules, integrals of important functions,\nfundamental theorem of calculus, definite vs indefinite, applications\n(including in probability) a. Explain the definitions of definite and\nindefinite integrals. b. Apply integration rules to examples with important\nfunctions. c. Explore the use of the fundamental theorem of calculus. d. Apply\nintegration to problems. 4\\. Parametric and polar representations a. Apply\nparametric representations of important curves. b. Apply polar\nrepresentations. 5\\. Taylor series a. Derive Taylor series for some important\nfunctions. b. Apply the Taylor series to approximations. 6\\. Multivariate\ncalculus: partial derivatives, gradient, chain-rule, vector valued functions,\napplications to optimization, convexity, global vs local minima. a. Compute\npartial derivatives and gradients. b. Work through examples with vector-valued\nfunctions with gradient notation. c. Explain applications to optimization. 7\\.\nODEs: definition, Euler method, applications to simulation a. Apply the Euler\nmethod to integration. b. Apply the Euler method to a single-variable\ndifferential equation. c. Apply the Euler method to multiple variables in an\nODE.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/edb2cf474790451aab70ad555878ff436be1d122b8a2944d8f7165e9d21453d4> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/has_schema_type> _:N4870cd39391a455da3dba36cdb544e0e <http://groq.org/edb2cf474790451aab70ad555878ff436be1d122b8a2944d8f7165e9d21453d4> .
_:N6620883c82c8405ba4bfb77f1d62c144 <http://example.org/has_chunk> ". Conditional distributions and expectation\n6. Applications to computing, the difference between probability and statistics (as subjects)\nKA Core:\nThe recommended topics are the same between CS core and KA-core, but with far more hours, the\nKA-core can cover these topics in depth and might include more computing-related applications.\nIllustrative Learning Outcomes:\nCS Core:\n1. Basic notions: sample spaces, events, probability, conditional probability, Bayes’ rule\na" <http://faiss.org/2ceed1a79a6bba1eb70e5485d8935786855ddf4c95e0ce0a47e36dcc2fb8a706> .
<http://example.org/faiss> <http://example.org/input> "Label: Introduction aux probabilités Objectif: (résultats d'apprentissage)\n• Course content: Définition et calcul de la probabilité conditionnelle\n• Course name: http://example.org/course/UE_XLG3MU050" <http://faiss.org/2ceed1a79a6bba1eb70e5485d8935786855ddf4c95e0ce0a47e36dcc2fb8a706> .
<http://example.org/course/UE_XLG3MU050> <http://example.org/is_aligned_with> _:N6620883c82c8405ba4bfb77f1d62c144 <http://faiss.org/2ceed1a79a6bba1eb70e5485d8935786855ddf4c95e0ce0a47e36dcc2fb8a706> .
_:N53d92fb2d2ad4d3e89d96d5901bad77d <http://example.org/has_chunk> "MSF-Probability: Probability\nCS Core:\n1. Basic notions: sample spaces, events, probability, conditional probability, Bayes’ rule\n2. Discrete random variables and distributions\n3. Continuous random variables and distributions\n4. Expectation, variance, law of large numbers, central limit theorem\n5. Conditional distributions and expectation\n6" <http://faiss.org/2ceed1a79a6bba1eb70e5485d8935786855ddf4c95e0ce0a47e36dcc2fb8a706> .
_:N6620883c82c8405ba4bfb77f1d62c144 <http://example.org/has_score> "0.6838853"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/2ceed1a79a6bba1eb70e5485d8935786855ddf4c95e0ce0a47e36dcc2fb8a706> .
_:N53d92fb2d2ad4d3e89d96d5901bad77d <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Probability_Probability.txt> <http://faiss.org/2ceed1a79a6bba1eb70e5485d8935786855ddf4c95e0ce0a47e36dcc2fb8a706> .
<http://example.org/course/UE_XLG3MU050> <http://example.org/is_aligned_with> _:N53d92fb2d2ad4d3e89d96d5901bad77d <http://faiss.org/2ceed1a79a6bba1eb70e5485d8935786855ddf4c95e0ce0a47e36dcc2fb8a706> .
_:N53d92fb2d2ad4d3e89d96d5901bad77d <http://example.org/has_score> "0.71133184"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/2ceed1a79a6bba1eb70e5485d8935786855ddf4c95e0ce0a47e36dcc2fb8a706> .
_:N6620883c82c8405ba4bfb77f1d62c144 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Probability_Probability.txt> <http://faiss.org/2ceed1a79a6bba1eb70e5485d8935786855ddf4c95e0ce0a47e36dcc2fb8a706> .
_:N7ed269a07d12440198fbe2f41006570b <http://example.org/has_score> "0.7008598"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/2ceed1a79a6bba1eb70e5485d8935786855ddf4c95e0ce0a47e36dcc2fb8a706> .
<http://example.org/course/UE_XLG3MU050> <http://example.org/is_aligned_with> _:N7ed269a07d12440198fbe2f41006570b <http://faiss.org/2ceed1a79a6bba1eb70e5485d8935786855ddf4c95e0ce0a47e36dcc2fb8a706> .
_:N7ed269a07d12440198fbe2f41006570b <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Probability_Probability.txt> <http://faiss.org/2ceed1a79a6bba1eb70e5485d8935786855ddf4c95e0ce0a47e36dcc2fb8a706> .
_:N7ed269a07d12440198fbe2f41006570b <http://example.org/has_chunk> ". Translate a prose description of a probabilistic process into a formal setting of sample spaces,\noutcome probabilities, and events.\nb. Calculate the probability of simple events.\nc. Determine whether two events are independent.\nd. Compute conditional probabilities, including through applying (and explaining) Bayes' Rule.\n2. Discrete random variables and distributions\na. Define the concept of a random variable and indicator random variable.\nb. Determine whether two random variables are independent.\nc" <http://faiss.org/2ceed1a79a6bba1eb70e5485d8935786855ddf4c95e0ce0a47e36dcc2fb8a706> .
_:N5a02f80941aa4a6eab9f6aaa17c1c566 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/d8e4068e6adb4ccc91d345704b330c55368541afb2fdfaa8ae0fde19b964d0cd> .
_:N5a02f80941aa4a6eab9f6aaa17c1c566 <http://schema.org/answer> "0" <http://groq.org/d8e4068e6adb4ccc91d345704b330c55368541afb2fdfaa8ae0fde19b964d0cd> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/d8e4068e6adb4ccc91d345704b330c55368541afb2fdfaa8ae0fde19b964d0cd> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Bases de données 2 Objectif: (résultats d'apprentissage) Programmer en un langage procédurale lié à une base de données, par exemple PL/SQL ou Course content: Vues et contrôle d’accès\n5. Course name: http://example.org/course/UE_XLG3IU040</page1>\n        <page2>Pages: 144 HOURS CS Core = 0 KA Core = 0 FPL-Constructs: Advanced Programming\nConstructs Non-core: 1\\. Encapsulation mechanisms 2\\. Delayed evaluation and\ninfinite streams 3\\. Compare and contrast delayed evaluation vs eager\nevaluation 4\\. Unification vs assertion vs expression evaluation 5\\. Control\nabstractions: exception handling, continuations, monads. 6\\. Object-oriented\nabstractions: multiple inheritance, mixins, traits, multimethods 7\\.\nMetaprogramming: macros, generative programming, model-based development 8\\.\nString manipulation via pattern-matching (regular expressions) 9\\. Dynamic\ncode evaluation (\"eval\") 10\\. Language support for checking assertions,\ninvariants, and pre/post-conditions 11\\. Domain specific languages, such as\ndatabase languages, data science languages, embedded computing languages,\nsynchronous languages, hardware interface languages 12\\. Massive parallel high\nperformance computing models and languages Illustrative learning outcomes:\nNon-core: 1\\. Use various advanced programming constructs and idioms\ncorrectly. 2\\. Discuss how various advanced programming constructs aim to\nimprove program structure, software quality, and programmer productivity. 3\\.\nDiscuss how various advanced programming constructs interact with the\ndefinition and implementation of other language features.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/d8e4068e6adb4ccc91d345704b330c55368541afb2fdfaa8ae0fde19b964d0cd> .
<http://example.org/course/UE_XLG3IU040> <http://example.org/has_schema_type> _:N5a02f80941aa4a6eab9f6aaa17c1c566 <http://groq.org/d8e4068e6adb4ccc91d345704b330c55368541afb2fdfaa8ae0fde19b964d0cd> .
_:N5a02f80941aa4a6eab9f6aaa17c1c566 <http://schema.org/explain> "Lecture focuses on database views/access control, while KU covers broader advanced programming constructs not addressed." <http://groq.org/d8e4068e6adb4ccc91d345704b330c55368541afb2fdfaa8ae0fde19b964d0cd> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU040" <http://groq.org/d8e4068e6adb4ccc91d345704b330c55368541afb2fdfaa8ae0fde19b964d0cd> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/10b75381b3e947cf81cc304426f8c9439734c937eae3bea7ad8bfc9f01bbdfbc> .
_:N4af81ad64ddb4d979c4e55c80aa070f2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/10b75381b3e947cf81cc304426f8c9439734c937eae3bea7ad8bfc9f01bbdfbc> .
_:N4af81ad64ddb4d979c4e55c80aa070f2 <http://schema.org/answer> "0" <http://groq.org/10b75381b3e947cf81cc304426f8c9439734c937eae3bea7ad8bfc9f01bbdfbc> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/has_schema_type> _:N4af81ad64ddb4d979c4e55c80aa070f2 <http://groq.org/10b75381b3e947cf81cc304426f8c9439734c937eae3bea7ad8bfc9f01bbdfbc> .
_:N4af81ad64ddb4d979c4e55c80aa070f2 <http://schema.org/explain> "The lecture focuses on professional development and networking, not formal methods in software engineering." <http://groq.org/10b75381b3e947cf81cc304426f8c9439734c937eae3bea7ad8bfc9f01bbdfbc> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S4 Objectif: (résultats d'apprentissage)\nfaire et savoir-être) et d'un plan d'actions sur les prochaines années : à l'écrit et à l'oral\n- d'identitier et d'animer son réseau (professionnel et élargi)\n- de créer et de faire vivre ses profils numériques professionnels\n- de mener une enquête métier auprès d'un professionnel et de la restituer Course content: - présentation orale de la restitution de l'enquête et des recherches sur le métier\n- équivalent de 8 TD + présentation orale des enquêtes:\n- identication de ses valeurs\n- indentification de ses compétences\n- consrtruction de son projet professionnel et personnel\n- présentation de son projet Course name: http://example.org/course/UE_XLG4TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/10b75381b3e947cf81cc304426f8c9439734c937eae3bea7ad8bfc9f01bbdfbc> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU010" <http://groq.org/10b75381b3e947cf81cc304426f8c9439734c937eae3bea7ad8bfc9f01bbdfbc> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Methodologie et insertion professionnelle S4 Objectif: (résultats d'apprentissage)\nfaire et savoir-être) et d'un plan d'actions sur les prochaines années : à l'écrit et à l'oral\n- d'identitier et d'animer son réseau (professionnel et élargi)\n- de créer et de faire vivre ses profils numériques professionnels\n- de mener une enquête métier auprès d'un professionnel et de la restituer Course content: - présentation orale de la restitution de l'enquête et des recherches sur le métier\n- équivalent de 8 TD + présentation orale des enquêtes:\n- identication de ses valeurs\n- indentification de ses compétences\n- consrtruction de son projet professionnel et personnel\n- présentation de son projet Course name: http://example.org/course/UE_XLG4TU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Project Management: Core\nConcepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\.\nPlaceholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder\nadvanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key concepts of\nSE-Project Management. 2\\. Apply principles in practical scenarios. 3\\.\nAnalyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/79643ca9625fb86563232f1debaa485cd757aaf52dd85bf5ed46359a69736977> .
_:N51e53af93ef5479092eb338b46478d8e <http://schema.org/explain> "The lecture focuses on methodology and professional insertion, while the KU covers SE-Project Management concepts, which are not substantially related." <http://groq.org/79643ca9625fb86563232f1debaa485cd757aaf52dd85bf5ed46359a69736977> .
_:N51e53af93ef5479092eb338b46478d8e <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/79643ca9625fb86563232f1debaa485cd757aaf52dd85bf5ed46359a69736977> .
_:N51e53af93ef5479092eb338b46478d8e <http://schema.org/answer> "0" <http://groq.org/79643ca9625fb86563232f1debaa485cd757aaf52dd85bf5ed46359a69736977> .
<http://example.org/course/UE_XLG4TU010> <http://example.org/has_schema_type> _:N51e53af93ef5479092eb338b46478d8e <http://groq.org/79643ca9625fb86563232f1debaa485cd757aaf52dd85bf5ed46359a69736977> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/79643ca9625fb86563232f1debaa485cd757aaf52dd85bf5ed46359a69736977> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU010" <http://groq.org/79643ca9625fb86563232f1debaa485cd757aaf52dd85bf5ed46359a69736977> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3IU020" <http://groq.org/a573c980ab91ce0972d5dac31cdf6d19e54852d4fbcb86e20423c7aa88222d8d> .
_:N42e16bc6b74d4363b23570b6cb3f5d27 <http://schema.org/answer> "1" <http://groq.org/a573c980ab91ce0972d5dac31cdf6d19e54852d4fbcb86e20423c7aa88222d8d> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/has_schema_type> _:N42e16bc6b74d4363b23570b6cb3f5d27 <http://groq.org/a573c980ab91ce0972d5dac31cdf6d19e54852d4fbcb86e20423c7aa88222d8d> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Logique pour l'informatique Objectif: (résultats d'apprentissage)\nconsistance et complétude d'un système de preuves.\n4. Représenter une preuve de la déduction naturelle sous forme d'arbre d'inférence.\n5. Utiliser les algorithmes d'unification et de résolution pour le raisonnement automatique sur les\nformules logiques.\n1) Raisonnement algébrique booléen\n• Dualités des connecteurs logiques\n• Formes normales conjonctive et disjonctive\n2) Systèmes de preuves\n• Système d'inférence associé à une définition inductive\n• Preuve d'appartenance à un ensemble inductif par un arbre de preuves\n• Règles d'inférences de la déduction naturelle pour la logique propositionnelle\n• Distinguer logique classique et logique intuitionniste\n3) Donner du sens aux langages logique Course content: • Interprétation, modèle, satisfiabilité, validité\n• Correspondance avec le système de preuve: correction et complétude\n4) Calcul des prédicats\n• Manipulation des quantificateurs\n• Skolémisation, forme clausale\n• Théorie logique\n5) Raisonner automatiquement sur les formules logique\n• Algorithme d'unification\n• Algorithme de résolution Course name: http://example.org/course/UE_XLG3IU020</page1>\n        <page2>Pages: 187-188 HOURS CS Core = 29 KA Core = 11 MSF-Discrete: Discrete\nMathematics CS Core: 1\\. Sets, relations, functions, cardinality 2\\. Recursive\nmathematical definitions 3\\. Proof techniques (induction, proof by\ncontradiction) 4\\. Permutations, combinations, counting, pigeonhole principle\n5\\. Modular arithmetic 6\\. Logic: truth tables, connectives (operators),\ninference rules, formulas, normal forms, simple predicate logic 7\\. Graphs:\nbasic definitions 8\\. Order notation Illustrative Learning Outcomes: CS Core:\n1\\. Sets, Relations, and Functions, Cardinality a. Explain with examples the\nbasic terminology of functions, relations, and sets. b. Perform the operations\nassociated with sets, functions, and relations. c. Relate practical examples\nto the appropriate set, function, or relation model, and interpret the\nassociated operations and terminology in context. d. Calculate the size of a\nfinite set, including making use of the sum and product rules and inclusion-\nexclusion principle. e. Explain the difference between finite, countable, and\nuncountable sets. 2\\. Recursive mathematical definitions a. Apply recursive\ndefinitions of sequences or structures (e.g., Fibonacci numbers, linked lists,\nparse trees, fractals). b. Formulate inductive proofs of statements about\nrecursive definitions. c. Solve a variety of basic recurrence relations. d.\nAnalyze a problem to determine underlying recurrence relations. e. Given a\nrecursive/iterative code snippet, describe its underlying recurrence relation,\nhypothesize a closed form for the recurrence relation, and prove the\nhypothesis correct (usually, using induction). 3\\. Proof Techniques a.\nIdentify the proof technique used in a given proof. b. Outline the basic\nstructure of each proof technique (direct proof, proof by contradiction, and\ninduction) described in this unit. c. Apply each of the proof techniques\n(direct proof, proof by contradiction, and induction) correctly in the\nconstruction of a sound argument. d. Determine which type of proof is best for\na given problem. e. Explain the parallels between ideas of mathematical and/or\nstructural induction to recursion and recursively defined structures. f.\nExplain the relationship between weak and strong induction and give examples\nof the appropriate use of each. 4\\. Permutations, combinations, and counting\na. Apply counting arguments, including sum and product rules, inclusion-\nexclusion principle, and arithmetic/geometric progressions. b. Apply the\npigeonhole principle in the context of a formal proof. c. Compute permutations\nand combinations of a set, and interpret the meaning in the context of the\nspecific application. d. Map real-world applications to appropriate counting\nformalisms, such as determining the number of ways to arrange people around a\ntable, subject to constraints on the seating arrangement, or the number of\nways to determine certain hands in cards (e.g., a full house). 5\\. Modular\narithmetic a. Perform computations involving modular arithmetic. b. Explain\nthe notion of the greatest common divisor and apply Euclid's algorithm to\ncompute it. 6\\. Logic a. Convert logical statements from informal language to\npropositional and predicate logic expressions. b. Apply formal methods of\nsymbolic propositional and predicate logic, such as calculating validity of\nformulae, computing normal forms, or negating a logical statement. c. Use the\nrules of inference to construct proofs in propositional and predicate logic.\nd. Describe how symbolic logic can be used to model real-life situations or\napplications, including those arising in computing contexts such as software\nanalysis (e.g., program correctness), database queries, and algorithms. e.\nApply formal logic proofs and/or informal, but rigorous, logical reasoning to\nreal problems, such as predicting the behavior of software or solving problems\nsuch as puzzles. f. Describe the strengths and limitations of propositional\nand predicate logic. g. Explain what it means for a proof in propositional (or\npredicate) logic to be valid. 7\\. Graphs a. Illustrate by example the basic\nterminology of graph theory, and some of the properties and special cases of\ntypes of graphs, including trees. b. Demonstrate different traversal methods\nfor trees and graphs, including pre-, post-, and in-order traversal of trees,\nalong with breadth-first and depth-first search for graphs. c. Model a variety\nof real-world problems in computer science using appropriate forms of graphs\nand trees, such as representing a network topology, the organization of a\nhierarchical file system, or a social network. d. Show how concepts from\ngraphs and trees appear in data structures, algorithms, proof techniques\n(structural induction), and counting. KA Core: The recommended topics are the\nsame between CS core and KA-core, but with far more hours, the KA-core can\ncover these topics in depth and might include more computing-related\napplications.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/a573c980ab91ce0972d5dac31cdf6d19e54852d4fbcb86e20423c7aa88222d8d> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/a573c980ab91ce0972d5dac31cdf6d19e54852d4fbcb86e20423c7aa88222d8d> .
_:N42e16bc6b74d4363b23570b6cb3f5d27 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/a573c980ab91ce0972d5dac31cdf6d19e54852d4fbcb86e20423c7aa88222d8d> .
_:N42e16bc6b74d4363b23570b6cb3f5d27 <http://schema.org/explain> "The lecture covers a significant portion of the KU, including topics such as logic, sets, relations, functions, and graph theory, with some overlap in the course content." <http://groq.org/a573c980ab91ce0972d5dac31cdf6d19e54852d4fbcb86e20423c7aa88222d8d> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Développement web client Objectif: (résultats d'apprentissage) Course content: approfondir les connaissances dans le langage TypeScript, déjà vu en L1\nprésenter un framework de développement web écrit en TypeScript, comme Angular ou Vue. Course name: http://example.org/course/UE_XLG4IU050</page1>\n        <page2>Pages : 168-169 CS Core : 20, KA Core : None CS Core: 1\\. Basic concepts such\nas variables, primitive data types, expressions, and their evaluation 2\\. How\nimperative programs work: state and state transitions on execution of\nstatements, flow of control 3\\. Basic constructs such as assignment\nstatements, conditional and iterative statements, basic I/O 4\\. Key modularity\nconstructs such as functions (and methods and classes, if supported in the\nlanguage) and related concepts like parameter passing, scope, abstraction,\ndata encapsulation (See also: FPL-OOP) 5\\. Input and output using files and\nAPIs 6\\. Structured data types available in the chosen programming language\nlike sequences (e.g., arrays, lists), associative containers (e.g.,\ndictionaries, maps), others (e.g., sets, tuples) and when and how to use them\n(See also: AL-Foundational) 7\\. Libraries and frameworks provided by the\nlanguage (when/where applicable) 8\\. Recursion 9\\. Dealing with runtime errors\nin programs (e.g., exception handling). 10\\. Basic concepts of programming\nerrors, testing, and debugging (See also: SE-Construction, SEC-Coding) 11\\.\nDocumenting/commenting code at the program and module level.(See also: SE-\nConstruction) 12\\. Develop a security mindset. (See also: SEC-Foundations)\nIllustrative Learning Outcomes: CS Core: In these learning outcomes, the term\n\"develop\" means \"design, write, test, and debug.\" 1\\. Develop programs that\nuse the fundamental programming constructs: assignment and expressions, basic\nI/O, conditional and iterative statements. 2\\. Develop programs using\nfunctions with parameter passing. 3\\. Develop programs that effectively use\nthe different structured data types provided in the language like\narrays/lists, dictionaries, and sets. 4\\. Develop programs that use file I/O\nto provide data persistence across multiple executions. 5\\. Develop programs\nthat use language-provided libraries and frameworks (where applicable). 6\\.\nDevelop programs that use APIs to access or update data (e.g., from the web).\n7\\. Develop programs that create simple classes and instantiate objects of\nthose classes (if supported by the language). 8\\. Explain the concept of\nrecursion and identify when and how to use it effectively. 9\\. Develop\nrecursive functions. 10\\. Develop programs that can handle runtime errors.\n11\\. Read a given program and explain what it does. 12\\. Write comments for a\nprogram or a module specifying what it does. 13\\. Trace the flow of control\nduring the execution of a program. 14\\. Use appropriate terminology to\nidentify elements of a program (e.g., identifier, operator, operand).</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/2eca5ac29d02a6a4782ce8d080ef0bf956237c3cb484ec809b3b15aae1d81f30> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/2eca5ac29d02a6a4782ce8d080ef0bf956237c3cb484ec809b3b15aae1d81f30> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU050" <http://groq.org/2eca5ac29d02a6a4782ce8d080ef0bf956237c3cb484ec809b3b15aae1d81f30> .
_:Na4a01e0490bd4800b2b1b004e6c2693c <http://schema.org/explain> "The lecture focuses on TypeScript and a framework, not covering all KU aspects." <http://groq.org/2eca5ac29d02a6a4782ce8d080ef0bf956237c3cb484ec809b3b15aae1d81f30> .
<http://example.org/course/UE_XLG4IU050> <http://example.org/has_schema_type> _:Na4a01e0490bd4800b2b1b004e6c2693c <http://groq.org/2eca5ac29d02a6a4782ce8d080ef0bf956237c3cb484ec809b3b15aae1d81f30> .
_:Na4a01e0490bd4800b2b1b004e6c2693c <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/2eca5ac29d02a6a4782ce8d080ef0bf956237c3cb484ec809b3b15aae1d81f30> .
_:Na4a01e0490bd4800b2b1b004e6c2693c <http://schema.org/answer> "0" <http://groq.org/2eca5ac29d02a6a4782ce8d080ef0bf956237c3cb484ec809b3b15aae1d81f30> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/has_schema_type> _:Na043e4e75fb149ed896180f0ad81f0c9 <http://groq.org/4c3e13acecd35df75c88f8da2eb42b7ec06810d22133ce560422dd716594f209> .
_:Na043e4e75fb149ed896180f0ad81f0c9 <http://schema.org/answer> "1" <http://groq.org/4c3e13acecd35df75c88f8da2eb42b7ec06810d22133ce560422dd716594f209> .
_:Na043e4e75fb149ed896180f0ad81f0c9 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/4c3e13acecd35df75c88f8da2eb42b7ec06810d22133ce560422dd716594f209> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4MU060" <http://groq.org/4c3e13acecd35df75c88f8da2eb42b7ec06810d22133ce560422dd716594f209> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/4c3e13acecd35df75c88f8da2eb42b7ec06810d22133ce560422dd716594f209> .
_:Na043e4e75fb149ed896180f0ad81f0c9 <http://schema.org/explain> "The lecture covers most of the topics and learning outcomes described in the KU, with some minor omissions." <http://groq.org/4c3e13acecd35df75c88f8da2eb42b7ec06810d22133ce560422dd716594f209> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algèbre linéaire Objectif: (résultats d'apprentissage) Appliquer un algorithme adéquat pour résoudre un système linéaire\n• Course content: • Course name: http://example.org/course/UE_XLG4MU060</page1>\n        <page2>Pages: 192-194 HOURS CS Core = 0 KA Core = 40 MSF-Calculus KA Core: 1\\.\nSequences, series, limits 2\\. Single-variable derivatives: definition,\ncomputation rules (chain rule etc.), derivatives of important functions,\napplications 3\\. Single-variable integration: definition, computation rules,\nintegrals of important functions, fundamental theorem of calculus, definite vs\nindefinite, applications (including in probability) 4\\. Parametric and polar\nrepresentations 5\\. Taylor series 6\\. Multivariate calculus: partial\nderivatives, gradient, chain-rule, vector valued functions, 7\\. Optimization:\nconvexity, global vs local minima, gradient descent, constrained optimization,\nand Lagrange multipliers. 8\\. Ordinary Differential Equations (ODEs):\ndefinition, Euler method, applications to simulation, Monte Carlo integration\n9\\. CS applications: gradient descent for machine learning, forward and\ninverse kinematics, applications of calculus to probability Note: the calculus\ntopics listed above are aligned with computer science goals rather than with\ntraditional calculus courses. For example, multivariate calculus is often a\ncourse by itself, but computer science undergraduates only need parts of it\nfor machine learning. Illustrative Learning Outcomes: KA Core: 1\\. Sequences,\nseries, limits a. Explain the difference between infinite sets and sequences.\nb. Explain the formal definition of a limit. c. Derive the limit for examples\nof sequences and series. d. Explain convergence and divergence. e. Apply\nL'Hospital's rule and other approaches to resolving limits. 2\\. Single-\nvariable derivatives: definition, computation rules (chain rule etc.),\nderivatives of important functions, applications a. Explain a derivative in\nterms of limits. b. Explain derivatives as functions. c. Perform elementary\nderivative calculations from limits. d. Apply sum, product, and quotient\nrules. e. Work through examples with important functions. 3\\. Single-variable\nintegration: definition, computation rules, integrals of important functions,\nfundamental theorem of calculus, definite vs indefinite, applications\n(including in probability) a. Explain the definitions of definite and\nindefinite integrals. b. Apply integration rules to examples with important\nfunctions. c. Explore the use of the fundamental theorem of calculus. d. Apply\nintegration to problems. 4\\. Parametric and polar representations a. Apply\nparametric representations of important curves. b. Apply polar\nrepresentations. 5\\. Taylor series a. Derive Taylor series for some important\nfunctions. b. Apply the Taylor series to approximations. 6\\. Multivariate\ncalculus: partial derivatives, gradient, chain-rule, vector valued functions,\napplications to optimization, convexity, global vs local minima. a. Compute\npartial derivatives and gradients. b. Work through examples with vector-valued\nfunctions with gradient notation. c. Explain applications to optimization. 7\\.\nODEs: definition, Euler method, applications to simulation a. Apply the Euler\nmethod to integration. b. Apply the Euler method to a single-variable\ndifferential equation. c. Apply the Euler method to multiple variables in an\nODE.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/4c3e13acecd35df75c88f8da2eb42b7ec06810d22133ce560422dd716594f209> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/1c503177565febc9530f9033511b640c2c405062b887e46ede8021987e4c4b34> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/has_schema_type> _:N7bfc5ab3d7794fa7907c454c8e0f1be1 <http://groq.org/1c503177565febc9530f9033511b640c2c405062b887e46ede8021987e4c4b34> .
_:N7bfc5ab3d7794fa7907c454c8e0f1be1 <http://schema.org/explain> "Lecture focuses on teaching methods, not SE-Formal Methods content." <http://groq.org/1c503177565febc9530f9033511b640c2c405062b887e46ede8021987e4c4b34> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU030" <http://groq.org/1c503177565febc9530f9033511b640c2c405062b887e46ede8021987e4c4b34> .
_:N7bfc5ab3d7794fa7907c454c8e0f1be1 <http://schema.org/answer> "0" <http://groq.org/1c503177565febc9530f9033511b640c2c405062b887e46ede8021987e4c4b34> .
_:N7bfc5ab3d7794fa7907c454c8e0f1be1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/1c503177565febc9530f9033511b640c2c405062b887e46ede8021987e4c4b34> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU030</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/1c503177565febc9530f9033511b640c2c405062b887e46ede8021987e4c4b34> .
<http://example.org/faiss> <http://example.org/input> "Label: Algorithmique et Structures de données 2 Objectif: (résultats d'apprentissage)\ndonnées (itératifs et récursifs) Course content: Structures de données non-linéaires associatives (table associative, ensemble, classe-union) Course name: http://example.org/course/UE_XLG4IU010" <http://faiss.org/c5049f1045f7b9adc71ae4e7e1e4160981adc1023a8d27f73579e180811c2174> .
_:Nce473726559146b0a33932abf3ae10c2 <http://example.org/has_chunk> ". (See also: AI-LRR)\n13. Integration with other programming paradigms such as object-oriented programming.\n14. Advance programming constructs such as difference-lists, creating user defined data structures, set\nof, etc.\nIllustrative learning outcomes:\nKA Core:\n1. Use a logic language to implement a conventional algorithm.\n2. Use a logic language to implement an algorithm employing implicit search using clauses, relations,\nand cuts.\n3" <http://faiss.org/c5049f1045f7b9adc71ae4e7e1e4160981adc1023a8d27f73579e180811c2174> .
_:N9185e73de38e40eb8d41dbce06143c0e <http://example.org/has_chunk> "MSF-Discrete: Discrete Mathematics\nCS Core:\n1. Sets, relations, functions, cardinality\n2. Recursive mathematical definitions\n3. Proof techniques (induction, proof by contradiction)\n4. Permutations, combinations, counting, pigeonhole principle\n5. Modular arithmetic\n6. Logic: truth tables, connectives (operators), inference rules, formulas, normal forms, simple\npredicate logic\n7. Graphs: basic definitions\n8. Order notation\nIllustrative Learning Outcomes:\nCS Core:\n1" <http://faiss.org/c5049f1045f7b9adc71ae4e7e1e4160981adc1023a8d27f73579e180811c2174> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/is_aligned_with> _:N8a59278dda3e4840a1a50c1939d251b8 <http://faiss.org/c5049f1045f7b9adc71ae4e7e1e4160981adc1023a8d27f73579e180811c2174> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/is_aligned_with> _:N9185e73de38e40eb8d41dbce06143c0e <http://faiss.org/c5049f1045f7b9adc71ae4e7e1e4160981adc1023a8d27f73579e180811c2174> .
_:Nce473726559146b0a33932abf3ae10c2 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Logic_Logic_Programming.txt> <http://faiss.org/c5049f1045f7b9adc71ae4e7e1e4160981adc1023a8d27f73579e180811c2174> .
_:Nce473726559146b0a33932abf3ae10c2 <http://example.org/has_score> "0.67598915"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/c5049f1045f7b9adc71ae4e7e1e4160981adc1023a8d27f73579e180811c2174> .
_:N8a59278dda3e4840a1a50c1939d251b8 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-Foundational_Foundational_Data_Structures_and_Algorithms.txt> <http://faiss.org/c5049f1045f7b9adc71ae4e7e1e4160981adc1023a8d27f73579e180811c2174> .
_:N8a59278dda3e4840a1a50c1939d251b8 <http://example.org/has_chunk> "AL-Foundational: Foundational Data Structures and Algorithms\nCS Core: (See also: SDF-Data-Structures, SDF-Algorithms)\n1. Abstract Data Type (ADT) and operations on an ADT (See also: FPL-Types)\na. Dictionary operations (insert, delete, find)\n2. Arrays\na. Numeric vs non-numeric, character strings\nb. Single (vector) vs multidimensional (matrix)\n3. Records/Structs/Tuples and Objects (See also: FPL-OOP)\n4. Linked lists (for historical reasons)\na. Single vs Double and Linear vs Circular\n5. Stacks\n6" <http://faiss.org/c5049f1045f7b9adc71ae4e7e1e4160981adc1023a8d27f73579e180811c2174> .
_:N8a59278dda3e4840a1a50c1939d251b8 <http://example.org/has_score> "0.68500286"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/c5049f1045f7b9adc71ae4e7e1e4160981adc1023a8d27f73579e180811c2174> .
_:N9185e73de38e40eb8d41dbce06143c0e <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Discrete_Discrete_Mathematics.txt> <http://faiss.org/c5049f1045f7b9adc71ae4e7e1e4160981adc1023a8d27f73579e180811c2174> .
_:N9185e73de38e40eb8d41dbce06143c0e <http://example.org/has_score> "0.68250453"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/c5049f1045f7b9adc71ae4e7e1e4160981adc1023a8d27f73579e180811c2174> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/is_aligned_with> _:Nce473726559146b0a33932abf3ae10c2 <http://faiss.org/c5049f1045f7b9adc71ae4e7e1e4160981adc1023a8d27f73579e180811c2174> .
_:N232ef2cc61ae4aa2abe901208ddc533e <http://schema.org/explain> "The lecture covers the overview of development platforms, programming via platform-specific API, platform languages, and programming under platform constraints, which aligns with the KU's content." <http://groq.org/bc7be6e2f38653a5b28564ec1ab7effeab41b220db58803404a18da62e28871b> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU030</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/bc7be6e2f38653a5b28564ec1ab7effeab41b220db58803404a18da62e28871b> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU030" <http://groq.org/bc7be6e2f38653a5b28564ec1ab7effeab41b220db58803404a18da62e28871b> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/bc7be6e2f38653a5b28564ec1ab7effeab41b220db58803404a18da62e28871b> .
_:N232ef2cc61ae4aa2abe901208ddc533e <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/bc7be6e2f38653a5b28564ec1ab7effeab41b220db58803404a18da62e28871b> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/has_schema_type> _:N232ef2cc61ae4aa2abe901208ddc533e <http://groq.org/bc7be6e2f38653a5b28564ec1ab7effeab41b220db58803404a18da62e28871b> .
_:N232ef2cc61ae4aa2abe901208ddc533e <http://schema.org/answer> "1" <http://groq.org/bc7be6e2f38653a5b28564ec1ab7effeab41b220db58803404a18da62e28871b> .
_:N50c83428627843c99bc95bbca2e6c61b <http://schema.org/explain> "No overlap in subject matter; lecture focuses on teaching methods while KU is about formal methods in CS." <http://groq.org/4949037a832f9bfb4b46e3dbd08ef17c55f0fb8b13c38822ba47563069e9f768> .
_:N50c83428627843c99bc95bbca2e6c61b <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/4949037a832f9bfb4b46e3dbd08ef17c55f0fb8b13c38822ba47563069e9f768> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/4949037a832f9bfb4b46e3dbd08ef17c55f0fb8b13c38822ba47563069e9f768> .
_:N50c83428627843c99bc95bbca2e6c61b <http://schema.org/answer> "0" <http://groq.org/4949037a832f9bfb4b46e3dbd08ef17c55f0fb8b13c38822ba47563069e9f768> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3AU010" <http://groq.org/4949037a832f9bfb4b46e3dbd08ef17c55f0fb8b13c38822ba47563069e9f768> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3AU010</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/4949037a832f9bfb4b46e3dbd08ef17c55f0fb8b13c38822ba47563069e9f768> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/has_schema_type> _:N50c83428627843c99bc95bbca2e6c61b <http://groq.org/4949037a832f9bfb4b46e3dbd08ef17c55f0fb8b13c38822ba47563069e9f768> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algèbre linéaire Objectif: (résultats d'apprentissage) Appliquer un algorithme adéquat pour résoudre un système linéaire\n• Course content: • Course name: http://example.org/course/UE_XLG4MU060</page1>\n        <page2>Pages: 133 HOURS CS Core = 0 KA Core = 2 + 1 (MSF) FPL-Logic: Logic\nProgramming KA Core: 1\\. Universal vs existential quantifiers. (See also: AI-\nLRR, MSF-Discrete) 2\\. First order predicate logic vs higher order logic. (See\nalso: AI-LRR, MSF-Discrete) 3\\. Expressing complex relations using logical\nconnectives and simpler relations. 4\\. Definitions of Horn clause, facts,\ngoals and subgoals. 5\\. Unification and unification algorithm; unification vs\nassertion vs expression evaluation. 6\\. Mixing relations with functions. (See\nalso: MSF-Discrete) 7\\. Cuts, backtracking, and non-determinism. 8\\. Closed-\nworld vs open-world assumptions. Non-core: 9\\. Memory overhead of variable\ncopying in handling iterative programs. 10\\. Programming constructs to store\npartial computation and pruning search trees. 11\\. Mixing functional\nprogramming and logic programming using concepts such as equational logic,\nnarrowing, residuation, and semantic unification. (See also: FPL-Functional)\n12\\. Higher-order, constraint, and inductive logic programming. (See also: AI-\nLRR) 13\\. Integration with other programming paradigms such as object-oriented\nprogramming. 14\\. Advance programming constructs such as difference-lists,\ncreating user defined data structures, set of, etc. Illustrative learning\noutcomes: KA Core: 1\\. Use a logic language to implement a conventional\nalgorithm. 2\\. Use a logic language to implement an algorithm employing\nimplicit search using clauses, relations, and cuts. 3\\. Use a simple\nillustrative example to show correspondence between First Order Predicate\nLogic (FOPL) and logic programs using Horn clauses. 4\\. Use examples to\nillustrate the unification algorithm and its role of parameter-passing in\nquery reduction. 5\\. Use simple logic programs interleaving relations,\nfunctions, and recursive programming such as factorial and Fibonacci numbers\nand simple complex relationships between entities and illustrate execution and\nparameter-passing using unification and backtracking. Non-core: 6\\. Illustrate\ncomputation of simple programs such as Fibonacci and show overhead of\nrecomputation, and then show how to improve execution overhead.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/b43c81c5a2d158dcfed974e34e85f0f28aaf2b5e7b3a9a9d0736768d8a299440> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/b43c81c5a2d158dcfed974e34e85f0f28aaf2b5e7b3a9a9d0736768d8a299440> .
_:N13f9c8d2b2dc41c595f66263cf034f57 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/b43c81c5a2d158dcfed974e34e85f0f28aaf2b5e7b3a9a9d0736768d8a299440> .
_:N13f9c8d2b2dc41c595f66263cf034f57 <http://schema.org/answer> "0" <http://groq.org/b43c81c5a2d158dcfed974e34e85f0f28aaf2b5e7b3a9a9d0736768d8a299440> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4MU060" <http://groq.org/b43c81c5a2d158dcfed974e34e85f0f28aaf2b5e7b3a9a9d0736768d8a299440> .
_:N13f9c8d2b2dc41c595f66263cf034f57 <http://schema.org/explain> "The lecture on linear algebra does not cover the logic programming topics described in the KU." <http://groq.org/b43c81c5a2d158dcfed974e34e85f0f28aaf2b5e7b3a9a9d0736768d8a299440> .
<http://example.org/course/UE_XLG4MU060> <http://example.org/has_schema_type> _:N13f9c8d2b2dc41c595f66263cf034f57 <http://groq.org/b43c81c5a2d158dcfed974e34e85f0f28aaf2b5e7b3a9a9d0736768d8a299440> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU030" <http://groq.org/2d14f1d28cacc28a744ab503ec19c57fbe72786a0c3c9ff4031c4d0b5a3fbf2b> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/has_schema_type> _:N98f06ce5c8894156942c96f4a2927c8b <http://groq.org/2d14f1d28cacc28a744ab503ec19c57fbe72786a0c3c9ff4031c4d0b5a3fbf2b> .
_:N98f06ce5c8894156942c96f4a2927c8b <http://schema.org/explain> "The lecture covers the overview of development platforms, programming via platform-specific API, platform languages, and programming under platform constraints, which aligns with the KU's content." <http://groq.org/2d14f1d28cacc28a744ab503ec19c57fbe72786a0c3c9ff4031c4d0b5a3fbf2b> .
_:N98f06ce5c8894156942c96f4a2927c8b <http://schema.org/answer> "1" <http://groq.org/2d14f1d28cacc28a744ab503ec19c57fbe72786a0c3c9ff4031c4d0b5a3fbf2b> .
<http://example.org/GROK> <http://example.org/param_model> "llama3-8b-8192" <http://groq.org/2d14f1d28cacc28a744ab503ec19c57fbe72786a0c3c9ff4031c4d0b5a3fbf2b> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU030</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/2d14f1d28cacc28a744ab503ec19c57fbe72786a0c3c9ff4031c4d0b5a3fbf2b> .
_:N98f06ce5c8894156942c96f4a2927c8b <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/2d14f1d28cacc28a744ab503ec19c57fbe72786a0c3c9ff4031c4d0b5a3fbf2b> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/5512b349656c91ba1ae541c86c9c448034a90dca8a712b7816113439977a0073> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3TU030</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/5512b349656c91ba1ae541c86c9c448034a90dca8a712b7816113439977a0073> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU030" <http://groq.org/5512b349656c91ba1ae541c86c9c448034a90dca8a712b7816113439977a0073> .
<http://example.org/course/UE_XLG3TU030> <http://example.org/has_schema_type> _:N1cd9f9136a6d413081e57a7c9d32e5f5 <http://groq.org/5512b349656c91ba1ae541c86c9c448034a90dca8a712b7816113439977a0073> .
_:N1cd9f9136a6d413081e57a7c9d32e5f5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/5512b349656c91ba1ae541c86c9c448034a90dca8a712b7816113439977a0073> .
_:N1cd9f9136a6d413081e57a7c9d32e5f5 <http://schema.org/answer> "0" <http://groq.org/5512b349656c91ba1ae541c86c9c448034a90dca8a712b7816113439977a0073> .
_:N1cd9f9136a6d413081e57a7c9d32e5f5 <http://schema.org/explain> "The lecture focuses on teaching methods and practical work experience, not the technical aspects of development platforms and programming." <http://groq.org/5512b349656c91ba1ae541c86c9c448034a90dca8a712b7816113439977a0073> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/has_schema_type> _:N0443f06feb7f4185bd01264d0bd5d725 <http://groq.org/2699980f2db892e9b8b33026f57cb2b07cb4b086a443dd5966a2b002f766ae3d> .
_:N0443f06feb7f4185bd01264d0bd5d725 <http://schema.org/explain> "No overlap in topics; lecture focuses on OS concepts while KU covers language translation and compilers" <http://groq.org/2699980f2db892e9b8b33026f57cb2b07cb4b086a443dd5966a2b002f766ae3d> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/2699980f2db892e9b8b33026f57cb2b07cb4b086a443dd5966a2b002f766ae3d> .
_:N0443f06feb7f4185bd01264d0bd5d725 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/2699980f2db892e9b8b33026f57cb2b07cb4b086a443dd5966a2b002f766ae3d> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU030" <http://groq.org/2699980f2db892e9b8b33026f57cb2b07cb4b086a443dd5966a2b002f766ae3d> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Systèmes d'exploitation Objectif: (résultats d'apprentissage)\nsynchronisation/communication (Application)\n• Etre capable d'utiliser les mécanismes de synchronisation usuels sous Linux (sémaphores,\nmutexes, signaux) (Application)\n• Comprendre le principe de mémoire virtuelle (Initiation)\n• Savoir gérer les entrées/sorties sous Linux (Initiation) Course content: par le système d'exploitation y sont exposées : comment les processus se partagent-ils l'accès au\nprocesseur ? Comment se synchronisent-ils et quels mécanismes leur permettent d'échanger des\ndonnées ? Comment sont gérés la mémoire et les entrées/sorties ? Course name: http://example.org/course/UE_XLG4IU030</page1>\n        <page2>Pages: 139-140 HOURS CS Core = 2 KA Core = 3 FPL-Translation: Language\nTranslation and Execution CS Core: 1\\. Execution models for JIT (Just-In-\nTime), compiler, interpreter 2\\. Use of intermediate code, e.g., bytecode 3\\.\nLimitations and benefits of JIT, compiler, and interpreter 4\\. Cross\ncompilers/transpilers 5\\. BNF and extended BNF representation of context-free\ngrammar 6\\. Parse tree using a simple sentence such as arithmetic expression\nor if-then-else statement 7\\. Execution as native code or within a virtual\nmachine 8\\. Language translation pipeline: syntax analysis, parsing, optional\ntype-checking, translation/code generation and optimization, linking, loading,\nexecution KA Core: 9\\. Run-time representation of core language constructs\nsuch as objects (method tables) and functions that can be passed as parameters\nto and returned from functions (closures) 10\\. Secure compiler development\n(See also: SEC-Foundations, SEC-Coding) Illustrative learning outcomes: CS\nCore: 1\\. Explain and understand the differences between compiled, JIT, and\ninterpreted language implementations, including the benefits and limitations\nof each. 2\\. Differentiate syntax and parsing from semantics and evaluation.\n3\\. Use BNF and extended BNF to specify the syntax of simple constructs such\nas if-then-else, type declaration and iterative constructs for known languages\nsuch as C++ or Python. 4\\. Illustrate the parse tree using a simple\nsentence/arithmetic expression. 5\\. Illustrate translation of syntax diagrams\nto BNF/extended BNF for simple constructs such as if-thenelse, type\ndeclaration, iterative constructs, etc. 6\\. Illustrate ambiguity in parsing\nusing nested if-then-else/arithmetic expression and show resolution using\nprecedence order. KA-Core: 7\\. Discuss the benefits and limitations of garbage\ncollection, including the notion of reachability.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/2699980f2db892e9b8b33026f57cb2b07cb4b086a443dd5966a2b002f766ae3d> .
_:N0443f06feb7f4185bd01264d0bd5d725 <http://schema.org/answer> "0" <http://groq.org/2699980f2db892e9b8b33026f57cb2b07cb4b086a443dd5966a2b002f766ae3d> .
<http://example.org/course/UE_XLG4IU060> <http://example.org/has_schema_type> _:N08340bba10dd41b2b3add591be2cf231 <http://groq.org/5fd7a5eb0dfde8f26e4c037732b0aa2c6b88e655206f5ea456b26f967ede2b61> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/5fd7a5eb0dfde8f26e4c037732b0aa2c6b88e655206f5ea456b26f967ede2b61> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Création numérique Objectif: (résultats d'apprentissage)\n- lister les principaux formats compris par les outils de création (Connaissance) ;\n- estimer les conséquences de choix de format sur la création (Analyse) ;\n- décrire les principaux paradigmes de création numérique (connaissance) ;\n- programmer une application de création numérique répondant à un cahier des\ncharges (Application) ;\n- concevoir un algorithme engendrant une création dans un format imposé (Application) ; Course content: - principaux supports de création numérique et limitations associées (bitmap,vectoriel, 2D, 3D,\ndécoupes, impressions, machine outils numériques,etc.);\n- principaux formats compris par les outils de création et les conséquences sur la création;\n- paradigmes de création numérique (impératif, événementiel, émergeant, etc.); Course name: http://example.org/course/UE_XLG4IU060</page1>\n        <page2>Pages:103-103 HOURS CS Core = 1 KA Core = 0 AR-Representation: Machine-Level\nData Representation CS Core: 1\\. Overview and history of computer architecture\n(See also: SPD-Game) 2\\. Bits, bytes, and words 3\\. Unsigned, signed and two's\ncomplement representations 4\\. Numeric data representation and number bases a.\nFixed-point b. Floating-point 5\\. Representation of non-numeric data 6\\.\nRepresentation of records, arrays and UTF data types (See also: AL-\nFoundational) Illustrative Learning Outcomes: CS Core: 1\\. Discuss why\neverything in computers are data, including instructions. 2\\. Explain how\nfixed-length number representations can affect accuracy and precision. 3\\.\nDescribe how negative integers are stored in sign-magnitude and\ntwo's-complement representations. 4\\. Discuss how different formats can\nrepresent numerical data. 5\\. Explain the bit-level representation of non-\nnumeric data, such as characters, strings, records, and arrays. 6\\. Translate\nnumerical data from one format to another. 7\\. Describe how a single adder\n(without overflow detection) can handle both signed (two's complement) and\nunsigned (binary) input without \"knowing\" which format a given input is using.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/5fd7a5eb0dfde8f26e4c037732b0aa2c6b88e655206f5ea456b26f967ede2b61> .
_:N08340bba10dd41b2b3add591be2cf231 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/5fd7a5eb0dfde8f26e4c037732b0aa2c6b88e655206f5ea456b26f967ede2b61> .
_:N08340bba10dd41b2b3add591be2cf231 <http://schema.org/answer> "0" <http://groq.org/5fd7a5eb0dfde8f26e4c037732b0aa2c6b88e655206f5ea456b26f967ede2b61> .
_:N08340bba10dd41b2b3add591be2cf231 <http://schema.org/explain> "Lecture focuses on digital creation tools/paradigms, while KU covers low-level data representation details (e.g., two's complement, floating points) not addressed." <http://groq.org/5fd7a5eb0dfde8f26e4c037732b0aa2c6b88e655206f5ea456b26f967ede2b61> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU060" <http://groq.org/5fd7a5eb0dfde8f26e4c037732b0aa2c6b88e655206f5ea456b26f967ede2b61> .
_:Nd73f024ec2394c60bf86292e7afad7e4 <http://schema.org/explain> "Lecture focuses on associative data structures, while KU covers logic programming concepts (unification, quantifiers, Horn clauses) not explicitly mentioned." <http://groq.org/0f4e06040581cef9b75382054a0a25e5ee48071db089535e3fea794df2333158> .
_:Nd73f024ec2394c60bf86292e7afad7e4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/0f4e06040581cef9b75382054a0a25e5ee48071db089535e3fea794df2333158> .
<http://example.org/GROK> <http://example.org/param_model> "qwen-qwq-32b" <http://groq.org/0f4e06040581cef9b75382054a0a25e5ee48071db089535e3fea794df2333158> .
<http://example.org/course/UE_XLG4IU010> <http://example.org/has_schema_type> _:Nd73f024ec2394c60bf86292e7afad7e4 <http://groq.org/0f4e06040581cef9b75382054a0a25e5ee48071db089535e3fea794df2333158> .
_:Nd73f024ec2394c60bf86292e7afad7e4 <http://schema.org/answer> "0" <http://groq.org/0f4e06040581cef9b75382054a0a25e5ee48071db089535e3fea794df2333158> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Algorithmique et Structures de données 2 Objectif: (résultats d'apprentissage)\ndonnées (itératifs et récursifs) Course content: Structures de données non-linéaires associatives (table associative, ensemble, classe-union) Course name: http://example.org/course/UE_XLG4IU010</page1>\n        <page2>Pages: 133 HOURS CS Core = 0 KA Core = 2 + 1 (MSF) FPL-Logic: Logic\nProgramming KA Core: 1\\. Universal vs existential quantifiers. (See also: AI-\nLRR, MSF-Discrete) 2\\. First order predicate logic vs higher order logic. (See\nalso: AI-LRR, MSF-Discrete) 3\\. Expressing complex relations using logical\nconnectives and simpler relations. 4\\. Definitions of Horn clause, facts,\ngoals and subgoals. 5\\. Unification and unification algorithm; unification vs\nassertion vs expression evaluation. 6\\. Mixing relations with functions. (See\nalso: MSF-Discrete) 7\\. Cuts, backtracking, and non-determinism. 8\\. Closed-\nworld vs open-world assumptions. Non-core: 9\\. Memory overhead of variable\ncopying in handling iterative programs. 10\\. Programming constructs to store\npartial computation and pruning search trees. 11\\. Mixing functional\nprogramming and logic programming using concepts such as equational logic,\nnarrowing, residuation, and semantic unification. (See also: FPL-Functional)\n12\\. Higher-order, constraint, and inductive logic programming. (See also: AI-\nLRR) 13\\. Integration with other programming paradigms such as object-oriented\nprogramming. 14\\. Advance programming constructs such as difference-lists,\ncreating user defined data structures, set of, etc. Illustrative learning\noutcomes: KA Core: 1\\. Use a logic language to implement a conventional\nalgorithm. 2\\. Use a logic language to implement an algorithm employing\nimplicit search using clauses, relations, and cuts. 3\\. Use a simple\nillustrative example to show correspondence between First Order Predicate\nLogic (FOPL) and logic programs using Horn clauses. 4\\. Use examples to\nillustrate the unification algorithm and its role of parameter-passing in\nquery reduction. 5\\. Use simple logic programs interleaving relations,\nfunctions, and recursive programming such as factorial and Fibonacci numbers\nand simple complex relationships between entities and illustrate execution and\nparameter-passing using unification and backtracking. Non-core: 6\\. Illustrate\ncomputation of simple programs such as Fibonacci and show overhead of\nrecomputation, and then show how to improve execution overhead.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/0f4e06040581cef9b75382054a0a25e5ee48071db089535e3fea794df2333158> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU010" <http://groq.org/0f4e06040581cef9b75382054a0a25e5ee48071db089535e3fea794df2333158> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/e40f158bcdacbde86ef47444093a713f14be71c211b6f71d42ac0956c366f166> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Systèmes d'exploitation Objectif: (résultats d'apprentissage)\nsynchronisation/communication (Application)\n• Etre capable d'utiliser les mécanismes de synchronisation usuels sous Linux (sémaphores,\nmutexes, signaux) (Application)\n• Comprendre le principe de mémoire virtuelle (Initiation)\n• Savoir gérer les entrées/sorties sous Linux (Initiation) Course content: par le système d'exploitation y sont exposées : comment les processus se partagent-ils l'accès au\nprocesseur ? Comment se synchronisent-ils et quels mécanismes leur permettent d'échanger des\ndonnées ? Comment sont gérés la mémoire et les entrées/sorties ? Course name: http://example.org/course/UE_XLG4IU030</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD PDC-Synchronization and\nConcurrency: Core Concepts CS Core: 1\\. Placeholder topic 1 2\\. Placeholder\ntopic 2 3\\. Placeholder topic 3 KA Core: 4\\. Placeholder advanced topic 1 5\\.\nPlaceholder advanced topic 2 Illustrative Learning Outcomes: 1\\. Explain key\nconcepts of PDC-Synchronization and Concurrency. 2\\. Apply principles in\npractical scenarios. 3\\. Analyze the importance of this topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/e40f158bcdacbde86ef47444093a713f14be71c211b6f71d42ac0956c366f166> .
<http://example.org/course/UE_XLG4IU030> <http://example.org/has_schema_type> _:Ne6cb07e04fb443ea8dc8909471ffcffc <http://groq.org/e40f158bcdacbde86ef47444093a713f14be71c211b6f71d42ac0956c366f166> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4IU030" <http://groq.org/e40f158bcdacbde86ef47444093a713f14be71c211b6f71d42ac0956c366f166> .
_:Ne6cb07e04fb443ea8dc8909471ffcffc <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/e40f158bcdacbde86ef47444093a713f14be71c211b6f71d42ac0956c366f166> .
_:Ne6cb07e04fb443ea8dc8909471ffcffc <http://schema.org/answer> "1" <http://groq.org/e40f158bcdacbde86ef47444093a713f14be71c211b6f71d42ac0956c366f166> .
_:Ne6cb07e04fb443ea8dc8909471ffcffc <http://schema.org/explain> "The lecture covers key aspects of synchronization and concurrency." <http://groq.org/e40f158bcdacbde86ef47444093a713f14be71c211b6f71d42ac0956c366f166> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3TU040" <http://groq.org/b1e5c28dcfe451f9cb9e7f0115df00e1f8d10423cf83abbc05b3d53e58e0847f> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/b1e5c28dcfe451f9cb9e7f0115df00e1f8d10423cf83abbc05b3d53e58e0847f> .
_:N2b9d84620cc84a44bfe618aa4383fdaa <http://schema.org/explain> "The lecture focuses on business economics, while the KU covers data modeling." <http://groq.org/b1e5c28dcfe451f9cb9e7f0115df00e1f8d10423cf83abbc05b3d53e58e0847f> .
<http://example.org/course/UE_XLG3TU040> <http://example.org/has_schema_type> _:N2b9d84620cc84a44bfe618aa4383fdaa <http://groq.org/b1e5c28dcfe451f9cb9e7f0115df00e1f8d10423cf83abbc05b3d53e58e0847f> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Connaissance de l'entreprise Objectif: (résultats d'apprentissage)\nl’entreprise dans son environnement) Course content: Approche économique de l’entreprise Course name: http://example.org/course/UE_XLG3TU040</page1>\n        <page2>Pages: 116-117 HOURS CS Core = 2 KA Core = 3 DM-Modeling: Data Modeling CS\nCore: 1\\. Data modeling (See also: SE-Requirements) 2\\. Relational data model\n(See also: MSF-Discrete) KA Core: 3\\. Conceptual models (e.g., entity-\nrelationship, UML diagrams) 4\\. Semi-structured data models (expressed using\nDTD, XML, or JSON Schema, for example) Non-core: 5\\. Spreadsheet models 6\\.\nObject-oriented models (See also: FPL-OOP) a. GraphQL 7\\. New features in SQL\n8\\. Specialized Data Modeling topics a. Time series data (aggregation, join)\nb. Graph data (link traversal) c. Techniques for avoiding inefficient raw data\naccess (e.g., \"avg daily price\"): materialized views and special data\nstructures (e.g., Hyperloglog, bitmap) d. Geo-Spatial data (e.g., GIS\ndatabases) (See also: SPD-Interactive) Illustrative Learning Outcomes: CS\nCore: 1\\. Describe the components of the relational data model. 2\\. Model 1:1,\n1:n, and n:m relationships using the relational data model. KA Core: 3\\.\nDescribe the components of the E-R (or some other non-relational) data model.\n4\\. Model a given environment using a conceptual data model. 5\\. Model a given\nenvironment using the document-based or key-value store-based data model.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/b1e5c28dcfe451f9cb9e7f0115df00e1f8d10423cf83abbc05b3d53e58e0847f> .
_:N2b9d84620cc84a44bfe618aa4383fdaa <http://schema.org/answer> "0" <http://groq.org/b1e5c28dcfe451f9cb9e7f0115df00e1f8d10423cf83abbc05b3d53e58e0847f> .
_:N2b9d84620cc84a44bfe618aa4383fdaa <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/b1e5c28dcfe451f9cb9e7f0115df00e1f8d10423cf83abbc05b3d53e58e0847f> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/ef1bd213953b0035cd6d2bc5edb2b5995864176918b105a798cf3bdc280336ab> .
_:N925962e1d5e048af9173bf711b9d6b69 <http://schema.org/answer> "0" <http://groq.org/ef1bd213953b0035cd6d2bc5edb2b5995864176918b105a798cf3bdc280336ab> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: 2nd year English S3 Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG3AU010</page1>\n        <page2>Pages : 240-241 CS Core : 4, KA Core : 2 CS Core: 1\\. Overview of development\nplatforms (i.e., web, mobile, game, robotics, embedded, and interactive). a.\nInput/sensors/control devices/haptic devices b. Resource constraints i.\nComputational ii. Data storage iii. Memory iv. Communication c. Requirements -\nsecurity, uptime availability, fault tolerance (See also: SE-Reliability, SEC-\nEngineering) d. Output/actuators/haptic devices 2\\. Programming via platform-\nspecific Application Programming Interface (API) vs traditional application\nconstruction 3\\. Overview of platform Languages (e.g., Python, Swift, Lua,\nKotlin) 4\\. Programming under platform constraints and requirements (e.g.,\navailable development tools, development, security considerations) (See also:\nSEC-Foundations) 5\\. Techniques for learning and mastering a platform-specific\nprogramming language Illustrative Learning Outcomes: CS Core: 1\\. List the\nconstraints of mobile programming. 2\\. List the characteristics of scripting\nlanguages. 3\\. Describe the three-tier model of web programming. 4\\. Describe\nhow the state is maintained in web programming.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/ef1bd213953b0035cd6d2bc5edb2b5995864176918b105a798cf3bdc280336ab> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG3AU010" <http://groq.org/ef1bd213953b0035cd6d2bc5edb2b5995864176918b105a798cf3bdc280336ab> .
<http://example.org/course/UE_XLG3AU010> <http://example.org/has_schema_type> _:N925962e1d5e048af9173bf711b9d6b69 <http://groq.org/ef1bd213953b0035cd6d2bc5edb2b5995864176918b105a798cf3bdc280336ab> .
_:N925962e1d5e048af9173bf711b9d6b69 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/ef1bd213953b0035cd6d2bc5edb2b5995864176918b105a798cf3bdc280336ab> .
_:N925962e1d5e048af9173bf711b9d6b69 <http://schema.org/explain> "The lecture does not cover the technical content described in the Knowledge Unit." <http://groq.org/ef1bd213953b0035cd6d2bc5edb2b5995864176918b105a798cf3bdc280336ab> .
_:N2f3f74b811ec4a8c89c802ec1137dbc9 <http://example.org/has_score> "0.64871335"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/986f3a848f546efb379c5b5f0387b786678b37163f5b313df7bb3a56ba13e7b2> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/is_aligned_with> _:N45d866b7a4044fa38682aa06c8c4034d <http://faiss.org/986f3a848f546efb379c5b5f0387b786678b37163f5b313df7bb3a56ba13e7b2> .
_:N45d866b7a4044fa38682aa06c8c4034d <http://example.org/has_score> "0.63397145"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/986f3a848f546efb379c5b5f0387b786678b37163f5b313df7bb3a56ba13e7b2> .
_:N2f3f74b811ec4a8c89c802ec1137dbc9 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://faiss.org/986f3a848f546efb379c5b5f0387b786678b37163f5b313df7bb3a56ba13e7b2> .
_:N2f3f74b811ec4a8c89c802ec1137dbc9 <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://faiss.org/986f3a848f546efb379c5b5f0387b786678b37163f5b313df7bb3a56ba13e7b2> .
_:N9496e784fff14019b4704efa8762b19c <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://faiss.org/986f3a848f546efb379c5b5f0387b786678b37163f5b313df7bb3a56ba13e7b2> .
_:N9496e784fff14019b4704efa8762b19c <http://example.org/has_score> "0.639867"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/986f3a848f546efb379c5b5f0387b786678b37163f5b313df7bb3a56ba13e7b2> .
_:N9496e784fff14019b4704efa8762b19c <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/986f3a848f546efb379c5b5f0387b786678b37163f5b313df7bb3a56ba13e7b2> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/is_aligned_with> _:N9496e784fff14019b4704efa8762b19c <http://faiss.org/986f3a848f546efb379c5b5f0387b786678b37163f5b313df7bb3a56ba13e7b2> .
<http://example.org/faiss> <http://example.org/input> "Label: Stage libre Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU030" <http://faiss.org/986f3a848f546efb379c5b5f0387b786678b37163f5b313df7bb3a56ba13e7b2> .
_:N45d866b7a4044fa38682aa06c8c4034d <http://example.org/has_chunk> "Illustrative Learning Outcomes:\n1. Explain the graphics rendering pipeline.\n2. Differentiate between rasterization and ray tracing.\n3. Apply transformations to 2D and 3D models." <http://faiss.org/986f3a848f546efb379c5b5f0387b786678b37163f5b313df7bb3a56ba13e7b2> .
<http://example.org/course/UE_XLG4TU030> <http://example.org/is_aligned_with> _:N2f3f74b811ec4a8c89c802ec1137dbc9 <http://faiss.org/986f3a848f546efb379c5b5f0387b786678b37163f5b313df7bb3a56ba13e7b2> .
_:N45d866b7a4044fa38682aa06c8c4034d <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Graphics_and_Interactive_Techniques_GIT/GIT-Fundamentals.txt> <http://faiss.org/986f3a848f546efb379c5b5f0387b786678b37163f5b313df7bb3a56ba13e7b2> .
_:N7b47c23e374c4158a825601e0f2619de <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://schema.org/Report> <http://groq.org/5649ff37988667a8095a5a17c242889f670068c9f3325daa56afe82155a7347b> .
<http://example.org/GROK> <http://example.org/param_model> "deepseek-r1-distill-llama-70b" <http://groq.org/5649ff37988667a8095a5a17c242889f670068c9f3325daa56afe82155a7347b> .
<http://example.org/GROK> <http://example.org/param_prompt> "\n        You are a JSON-LD API. Always respond only with a valid JSON-LD object, without explanation or formatting.\n\n        The following describes the content of a lecture and a Knowledge Unit (KU) in Computer Science.\n\n        <page1>Label: Unité Enseignement de Découverte Objectif: (résultats d'apprentissage) Course content: Méthodes d’enseignement Course name: http://example.org/course/UE_XLG4TU020</page1>\n        <page2>Pages: TBD HOURS CS Core = TBD KA Core = TBD SE-Formal Methods: Core Concepts\nCS Core: 1\\. Placeholder topic 1 2\\. Placeholder topic 2 3\\. Placeholder topic\n3 KA Core: 4\\. Placeholder advanced topic 1 5\\. Placeholder advanced topic 2\nIllustrative Learning Outcomes: 1\\. Explain key concepts of SE-Formal Methods.\n2\\. Apply principles in practical scenarios. 3\\. Analyze the importance of\nthis topic in computing.</page2>\n\n        Determine whether the lecture (page1) substantially covers the knowledge described in the KU (page2).\n\n        Respond only using JSON-LD, with the following structure:\n        {\n        \"@context\": \"http://schema.org/\",\n        \"@type\": \"Report\",\n        \"http://schema.org/answer\": \"A\",\n        \"http://schema.org/explain\": \"B\"\n        }\n\n        Replace A with \"1\" if the lecture covers a large subset of the KU, or \"0\" if it does not.\n        Replace B with a **very short explanation** of your decision.\n        " <http://groq.org/5649ff37988667a8095a5a17c242889f670068c9f3325daa56afe82155a7347b> .
_:N7b47c23e374c4158a825601e0f2619de <http://schema.org/answer> "0" <http://groq.org/5649ff37988667a8095a5a17c242889f670068c9f3325daa56afe82155a7347b> .
_:N7b47c23e374c4158a825601e0f2619de <http://schema.org/explain> "The lecture focuses on teaching methods rather than the technical content of formal methods." <http://groq.org/5649ff37988667a8095a5a17c242889f670068c9f3325daa56afe82155a7347b> .
<http://example.org/course/UE_XLG4TU020> <http://example.org/has_schema_type> _:N7b47c23e374c4158a825601e0f2619de <http://groq.org/5649ff37988667a8095a5a17c242889f670068c9f3325daa56afe82155a7347b> .
<http://example.org/GROK> <http://example.org/param_uri> "http://example.org/course/UE_XLG4TU020" <http://groq.org/5649ff37988667a8095a5a17c242889f670068c9f3325daa56afe82155a7347b> .
_:N5dacf72c2b3c4204a3bb9c85256a3195 <http://example.org/has_chunk> ".\n3. Compute a probabilistic inference in a real-world problem using Bayes’ theorem to determine the\nprobability of a hypothesis given evidence.\n4. Apply Bayes’ rule to determine the probability of a hypothesis given evidence.\n5. Compute the probability of outcomes and test whether outcomes are independent.\n71\nAI-ML: Machine Learning\nCS Core:\n1. Definition and examples of a broad variety of machine learning tasks\na. Supervised learning\ni. Classification\nii. Regression\nb. Reinforcement learning\nc" <http://faiss.org/63935b68568661b3bd42cb427999df7fd8a78c7ec053fedcda6e0e173a5b3a66> .
_:N62bad14ef80a402b84bec34c843f3524 <http://example.org/has_chunk> ".\n6. Logic\na. Convert logical statements from informal language to propositional and predicate logic\nexpressions.\nb. Apply formal methods of symbolic propositional and predicate logic, such as calculating validity\nof formulae, computing normal forms, or negating a logical statement.\nc. Use the rules of inference to construct proofs in propositional and predicate logic.\nd" <http://faiss.org/63935b68568661b3bd42cb427999df7fd8a78c7ec053fedcda6e0e173a5b3a66> .
_:N62bad14ef80a402b84bec34c843f3524 <http://example.org/has_score> "0.6991599"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/63935b68568661b3bd42cb427999df7fd8a78c7ec053fedcda6e0e173a5b3a66> .
_:N5dacf72c2b3c4204a3bb9c85256a3195 <http://example.org/has_score> "0.7135371"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/63935b68568661b3bd42cb427999df7fd8a78c7ec053fedcda6e0e173a5b3a66> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/is_aligned_with> _:N5f6c76de177543f789f5b941ae549636 <http://faiss.org/63935b68568661b3bd42cb427999df7fd8a78c7ec053fedcda6e0e173a5b3a66> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/is_aligned_with> _:N5dacf72c2b3c4204a3bb9c85256a3195 <http://faiss.org/63935b68568661b3bd42cb427999df7fd8a78c7ec053fedcda6e0e173a5b3a66> .
<http://example.org/course/UE_XLG3IU020> <http://example.org/is_aligned_with> _:N62bad14ef80a402b84bec34c843f3524 <http://faiss.org/63935b68568661b3bd42cb427999df7fd8a78c7ec053fedcda6e0e173a5b3a66> .
_:N5dacf72c2b3c4204a3bb9c85256a3195 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-KRR_Fundamental_Knowledge_Representation_and_Reasoning.txt> <http://faiss.org/63935b68568661b3bd42cb427999df7fd8a78c7ec053fedcda6e0e173a5b3a66> .
_:N62bad14ef80a402b84bec34c843f3524 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Discrete_Discrete_Mathematics.txt> <http://faiss.org/63935b68568661b3bd42cb427999df7fd8a78c7ec053fedcda6e0e173a5b3a66> .
<http://example.org/faiss> <http://example.org/input> "Label: Logique pour l'informatique Objectif: (résultats d'apprentissage)\nconsistance et complétude d'un système de preuves.\n4. Représenter une preuve de la déduction naturelle sous forme d'arbre d'inférence.\n5. Utiliser les algorithmes d'unification et de résolution pour le raisonnement automatique sur les\nformules logiques.\n1) Raisonnement algébrique booléen\n• Dualités des connecteurs logiques\n• Formes normales conjonctive et disjonctive\n2) Systèmes de preuves\n• Système d'inférence associé à une définition inductive\n• Preuve d'appartenance à un ensemble inductif par un arbre de preuves\n• Règles d'inférences de la déduction naturelle pour la logique propositionnelle\n• Distinguer logique classique et logique intuitionniste\n3) Donner du sens aux langages logique Course content: • Interprétation, modèle, satisfiabilité, validité\n• Correspondance avec le système de preuve: correction et complétude\n4) Calcul des prédicats\n• Manipulation des quantificateurs\n• Skolémisation, forme clausale\n• Théorie logique\n5) Raisonner automatiquement sur les formules logique\n• Algorithme d'unification\n• Algorithme de résolution Course name: http://example.org/course/UE_XLG3IU020" <http://faiss.org/63935b68568661b3bd42cb427999df7fd8a78c7ec053fedcda6e0e173a5b3a66> .
_:N5f6c76de177543f789f5b941ae549636 <http://example.org/has_chunk> ". Parametricity\nIllustrative learning outcomes:\nNon-core:\n1. Construct formal semantics for a small language.\n2. Write a lambda-calculus program and show its evaluation to a normal form.\n3. Discuss the different approaches of operational, denotational, and axiomatic semantics.\n4. Use induction to prove properties of all programs in a language.\n5. Use induction to prove properties of all programs in a language that is well-typed according to a\nformally defined type system.\n6" <http://faiss.org/63935b68568661b3bd42cb427999df7fd8a78c7ec053fedcda6e0e173a5b3a66> .
_:N5f6c76de177543f789f5b941ae549636 <http://example.org/has_score> "0.69964516"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/63935b68568661b3bd42cb427999df7fd8a78c7ec053fedcda6e0e173a5b3a66> .
_:N5f6c76de177543f789f5b941ae549636 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Formalism_Formal_Semantics.txt> <http://faiss.org/63935b68568661b3bd42cb427999df7fd8a78c7ec053fedcda6e0e173a5b3a66> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/is_aligned_with> _:Naa8ed326e12148838c5256586597db4e <http://faiss.org/f06dca1f9a78316cac209978efe47287afc2ce45f495c1b4d5fc1c27a7dbb1b1> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/is_aligned_with> _:N66464d003177471e9665be2eba7a1788 <http://faiss.org/f06dca1f9a78316cac209978efe47287afc2ce45f495c1b4d5fc1c27a7dbb1b1> .
_:Naa8ed326e12148838c5256586597db4e <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Maintenance and Evolution: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Maintenance and Evolution.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/f06dca1f9a78316cac209978efe47287afc2ce45f495c1b4d5fc1c27a7dbb1b1> .
_:Naa8ed326e12148838c5256586597db4e <http://example.org/has_score> "0.6266768"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/f06dca1f9a78316cac209978efe47287afc2ce45f495c1b4d5fc1c27a7dbb1b1> .
_:N66464d003177471e9665be2eba7a1788 <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Design_Design_Principles_of_Programming_Languages.txt> <http://faiss.org/f06dca1f9a78316cac209978efe47287afc2ce45f495c1b4d5fc1c27a7dbb1b1> .
_:N01fc129797ae4109b07bf76a1db7174e <http://example.org/has_score> "0.62797207"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/f06dca1f9a78316cac209978efe47287afc2ce45f495c1b4d5fc1c27a7dbb1b1> .
<http://example.org/faiss> <http://example.org/input> "Label: Enjeux de la transition écologique Objectif: (résultats d'apprentissage) Course content: Programme des 9 séances en ligne (d’environ 1h30 de travail chacune) : Course name: http://example.org/course/UE_XLG3TU020" <http://faiss.org/f06dca1f9a78316cac209978efe47287afc2ce45f495c1b4d5fc1c27a7dbb1b1> .
_:N66464d003177471e9665be2eba7a1788 <http://example.org/has_chunk> ". Formal description of a programming language\n6. Green computing principles (See also: SEP-Sustainability)\nIllustrative Learning Outcomes:\nNon-core:\n1. Understand what constitutes good language design and apply that knowledge to evaluate a real\nprogramming language." <http://faiss.org/f06dca1f9a78316cac209978efe47287afc2ce45f495c1b4d5fc1c27a7dbb1b1> .
_:N66464d003177471e9665be2eba7a1788 <http://example.org/has_score> "0.63058054"^^<http://www.w3.org/2001/XMLSchema#float> <http://faiss.org/f06dca1f9a78316cac209978efe47287afc2ce45f495c1b4d5fc1c27a7dbb1b1> .
_:N01fc129797ae4109b07bf76a1db7174e <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://faiss.org/f06dca1f9a78316cac209978efe47287afc2ce45f495c1b4d5fc1c27a7dbb1b1> .
<http://example.org/course/UE_XLG3TU020> <http://example.org/is_aligned_with> _:N01fc129797ae4109b07bf76a1db7174e <http://faiss.org/f06dca1f9a78316cac209978efe47287afc2ce45f495c1b4d5fc1c27a7dbb1b1> .
_:Naa8ed326e12148838c5256586597db4e <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Maintenance_and_Evolution.txt> <http://faiss.org/f06dca1f9a78316cac209978efe47287afc2ce45f495c1b4d5fc1c27a7dbb1b1> .
_:N01fc129797ae4109b07bf76a1db7174e <http://example.org/has_source> <file:///Users/rekiknour/Desktop/STAGE/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://faiss.org/f06dca1f9a78316cac209978efe47287afc2ce45f495c1b4d5fc1c27a7dbb1b1> .

