# run with slm-run --config config.bok -f queries/bok-core-construct-nohours.sparql --debug


PREFIX bok: <http://example.org/bok/>
PREFIX ex: <http://example.org/>

CONSTRUCT {
    ?ku bok:path ?p2 .
    ?ku bok:part_of ?ka .
    ?ku bok:content ?ku_content .
    ?ku bok:cs_core_hours ?cs_core .
    ?ku bok:ka_core_hours ?ka_core .
} 
#SELECT ?p ?ka ?ku ?cs_core ?ka_core 
WHERE {
    ## init recursion
    BIND(ex:SLM-FILE("./data/BodyOfKnowledge") AS ?root)
    BIND(ex:SLM-READDIR(?root,?root) AS ?ginit)
    BIND("""
    PREFIX ex: <http://example.org/>
    CONSTRUCT {
        ?p ex:has_path ?p1 .
        ?p1 ex:has_type ?t1.
        ?p1 ex:has_size ?s1 .
        ?new ex:has_path ?p2 .
        ?p2 ex:has_type ?t2.
        ?p2 ex:has_size ?s2 .

    } WHERE {
        graph ?gin {
          {
            ?p ex:has_path ?p1 .
            ?p1 ex:has_type ?t1 .
            ?p1 ex:has_size ?s1 .
            FILTER (str(?t1)="file")
          } UNION {
            ?p ex:has_path ?p1 .
            ?p1 ex:has_type ?t1 .
            ?p1 ex:has_size ?s1 .
            FILTER (str(?t1)="directory")
            BIND(ex:SLM-READDIR(?p1,?p1) as ?rdir)
            OPTIONAL {
                GRAPH ?rdir {
                    ?new ex:has_path ?p2 .
                    ?p2 ex:has_type ?t2.
                    ?p2 ex:has_size ?s2 .
                }
            }}
        }
    } """ AS ?query_str)
    BIND(ex:SLM-RECURSE(?query_str,?ginit,3) AS ?out)
    GRAPH ?out {
        ?p ex:has_path ?p2 .
        ?p2 ex:has_type "file" .
#        FILTER (str(?t2)="file")
        BIND (REPLACE(str(?p2), "file://.*/([^/]+)/[^/]+\\.txt$", "$1") AS ?ka) 
        BIND (REPLACE(str(?p2), "file://.*/([^/]+)/([^/]+)\\.txt$", "$2") AS ?ku)
     } # graph_out
} # limit 5
        
