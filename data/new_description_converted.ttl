@prefix ex: <http://example.org/> .
@prefix ns1: <http://example.org/course/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

ns1:Advanced_Course a ex:Course ;
    rdfs:label "Advanced Computer System Design and Implementation" ;
    ns1:content "This course focuses on advanced computer system design, covering key principles and their application in both classic and modern systems. Students will gain a deeper understanding of design principles, learn to map these principles to real-world systems, and develop the ability to design and implement complex computer systems. The course content includes I/O fundamentals, networking concepts, the role and purpose of operating systems, system design criteria, system performance, reliability, and security. Topics such as interrupt-driven I/O, network layering, operating system functions, cache performance, redundancy, and common security issues are explored in depth. The course aims to equip students with the skills to design and implement systems like file systems and high-performance web servers, while addressing critical considerations like scalability, robustness, and security." ;
    ns1:objective "N/A" .

ns1:Artificial_Intelligence a ex:Course ;
    rdfs:label "Comprehensive Introduction to Artificial Intelligence" ;
    ns1:content "This course provides a comprehensive introduction to Artificial Intelligence (AI), covering fundamental concepts, techniques, and applications. It begins with an overview of AI, including definitions, types of agents, and problem characteristics. Students learn about knowledge representation and reasoning, including symbolic, probabilistic, and graphical models. The course introduces machine learning, covering supervised, unsupervised, and reinforcement learning, along with evaluation methods and ethical considerations. It also explores search techniques, both uninformed and heuristic-based, and their space/time complexities. Additionally, the course addresses societal impacts, including ethics, fairness, privacy, and sustainability, with case studies in various domains like medicine and robotics. The curriculum emphasizes practical applications, data handling, and the importance of understanding AI's limitations and societal implications." ;
    ns1:objective "N/A" .

ns1:Computer_Animation a ex:Course ;
    rdfs:label "Introduction to Computer Animation and Privacy Concepts" ;
    ns1:content "This course introduces students to the fundamentals of computer animation and privacy concepts. It aims to equip students with the skills to create short animations using key animation principles. The course covers essential topics in computer animation, including the principles of animation, techniques for creating motion, and the use of animation software. Additionally, the course explores privacy and civil liberties, focusing on the implications of data collection, surveillance, and emerging technologies. Students will learn about anonymity, pseudonymity, and identity, as well as technological solutions for privacy protection, such as end-to-end encryption and differential privacy. The course also examines civil liberties, privacy rights, and cultural differences in the context of privacy. By the end of the course, students will have a comprehensive understanding of both animation techniques and the critical aspects of privacy in the digital age." ;
    ns1:objective "N/A" .

ns1:Computer_Architecture_-_Advanced_Topics_Course a ex:Course ;
    rdfs:label "Evolution and Design of Modern Computer Architectures" ;
    ns1:content "A course focusing on the evolution of computer architectures into modern heterogeneous systems, exploring past design choices' impact on future high-performance computing. Prerequisites include MSF-Discrete. The curriculum covers Assembly Level Machine Organization, including von Neumann architecture, control units, SIMD vs MIMD, Flynn taxonomy, and shared memory multiprocessors. It also addresses Interfacing and Communication, covering I/O fundamentals, interrupt structures, I/O devices, external storage, buses, and DMA. Memory Hierarchy is explored, including locality, main memory, persistent memory, performance metrics, cache memories, coherence, virtual memory, and reliability. Machine-Level Data Representation includes bits, bytes, numeric representations, non-numeric data, and data structures. System Performance covers latencies, caches, and memory hierarchy optimization. Related courses are referenced for interdisciplinary connections." ;
    ns1:objective "N/A" .

ns1:Computer_Architecture_-_Introductory_Course a ex:Course ;
    rdfs:label "Modern Computer Architectures: Fundamentals and Challenges" ;
    ns1:content "A comprehensive course covering modern computer architectures, focusing on memory hierarchies, I/O systems, data representation, and historical context. Topics include von Neumann architecture, SIMD vs MIMD, Flynn taxonomy, shared memory multiprocessors, I/O fundamentals, interrupt structures, memory organization, cache coherence, virtual memory, and data representation. The course also explores the history of computing and its relevance to current architectures." ;
    ns1:objective "N/A" .

ns1:Data_Visualization a ex:Course ;
    rdfs:label "Computer Graphics and Data Visualization Fundamentals" ;
    ns1:content "This course focuses on the fundamentals of computer graphics, human-computer interaction, and data visualization. It covers topics such as the applications of computer graphics, human vision system, standard image formats, digitization of analog data, and color models. The course also explores design patterns, prototyping techniques, and user-centered design methods. Additionally, it addresses privacy implications, civil liberties, and ethical considerations in data collection and visualization. Students will learn to design, develop, and test usable visualization programs, ensuring data accuracy and appropriateness. The course emphasizes understanding user needs, evaluating existing visualizations, and considering ethical aspects of technology." ;
    ns1:objective "N/A" .

ns1:Game_Development_Course a ex:Course ;
    rdfs:label "Game Development Course" ;
    ns1:content "This course focuses on mastering the design, development, and deployment of interactive games. It covers fundamental game design principles, programming languages like C++, C#, and Python, and the use of popular game engines such as Unity and Unreal. Students learn 3D modeling and animation, implement physics and simulations for realism, and develop AI algorithms for non-player characters. The curriculum includes designing multiplatform games, optimizing UI/UX for engagement, applying game-specific testing and debugging techniques, integrating audio effectively, and exploring industry monetization models. Ethical considerations are emphasized, with analysis of content, diversity, and inclusivity in game development. The course includes modules on foundational data structures, interaction techniques, rendering, system design, user-centered design, software development practices, software design principles, tools, and game platforms." ;
    ns1:objective "N/A" .

ns1:Image_Processing a ex:Course ;
    rdfs:label "Digital Image Processing and Privacy" ;
    ns1:content "This course focuses on the acquisition, processing, display, and storage of digital images. It covers essential concepts in image processing, interaction techniques, and critical aspects of privacy and civil liberties. The course explores privacy implications in data collection, surveillance, cloud computing, and AI. It delves into anonymity, pseudonymity, and identity, as well as technological solutions like end-to-end encryption and differential privacy. Civil liberties, privacy rights, and cultural differences are also examined to provide a comprehensive understanding of digital image handling and privacy protection." ;
    ns1:objective "N/A" .

ns1:Interactive_Computer_Graphics a ex:Course ;
    rdfs:label "Introduction to Computer Graphics and API Techniques" ;
    ns1:content "This course introduces students to the fundamentals of computer graphics using an API. It covers the creation of basic computer graphics, positioning and orienting models, camera setup, and the use of distant and local lights. The course also offers customization options, allowing instructors to incorporate additional topics such as image processing or advanced rendering techniques. The content includes sections on GIT-Interaction, GIT-Modeling, and GIT-Rendering, with references to external resources like /example.org/bok/SEP-Professional. Students will gain hands-on experience with geometric modeling, applied rendering techniques, and API interactions, providing a comprehensive understanding of computer graphics principles and practices." ;
    ns1:objective "N/A" .

ns1:Introduction_to_AR_and_VR a ex:Course ;
    rdfs:label "Immersive Media and Interactive Technologies" ;
    ns1:content "This course focuses on developing VR and AR applications, covering fundamental concepts of computer graphics and interactive techniques. It explores various applications across entertainment, business, and science, including visual effects, computer vision, and virtual reality. The course also addresses ethical considerations such as intellectual property, privacy, and deep fakes. Technical aspects include graphic output devices, human vision system, standard image formats, and color models. Students learn about digitization, spatialization, and animation principles. Additionally, the course covers privacy implications of data collection and technology-based privacy solutions." ;
    ns1:objective "N/A" .

ns1:Introduction_to_Data_Science a ex:Course ;
    rdfs:label "Data Science and Machine Learning Fundamentals" ;
    ns1:content "This course covers the fundamentals of data science and machine learning, focusing on formulating data analysis problems, applying statistical techniques, and understanding ethical implications. It includes machine learning tasks such as supervised, unsupervised, and reinforcement learning, with emphasis on techniques like linear regression, decision trees, and neural networks. Data preprocessing, feature encoding, and handling missing values are also covered. The course addresses overfitting, regularization, and model evaluation using train, validation, and test sets. Ethical considerations include dataset bias, algorithmic fairness, and societal impacts of AI applications. Additionally, core database concepts, data modeling, SQL query formation, and data security are introduced. The course also explores generative models, large language models, and their societal implications, emphasizing real-world applications and case studies." ;
    ns1:objective "N/A" .

ns1:Introduction_to_Data_Visualization a ex:Course ;
    rdfs:label "Advanced Usability Testing and Evaluation in HCI" ;
    ns1:content "This advanced course focuses on usability testing and evaluation in Human-Computer Interaction (HCI). Students learn to design and execute usability test tasks, recruit appropriate users, and develop test plans. The course covers various HCI modules, including user-centered design, accountability, accessibility, and evaluation. It also addresses privacy implications, civil liberties, and ethical considerations in data collection and technology. Students gain hands-on experience in conducting usability tests, analyzing results, and providing recommendations for improvement. The course emphasizes the importance of user needs, formative studies, and effective communication of findings." ;
    ns1:objective "N/A" .

ns1:Introduction_to_Special_Platform_Development_Course a ex:Course ;
    rdfs:label "Advanced Platform Development and Engineering" ;
    ns1:content "This course provides a comprehensive understanding of platform development, focusing on web, mobile, embedded systems, robotics, and game development. It covers foundational knowledge in web techniques, system design principles, and software architecture. Students will learn to create automated scripts, solve text processing problems, and understand separation of concerns, information hiding, and code quality. The course also explores social implications of computing, including the impact of social media, AI, and biometric technologies on society. It addresses diversity and accessibility in computing and discusses platform-specific programming languages and constraints. The curriculum emphasizes the importance of human agency and oversight in civic technologies, ensuring a well-rounded understanding of platform development." ;
    ns1:objective "N/A" .

ns1:Introductory_Course a ex:Course ;
    rdfs:label "Advanced Computer Systems" ;
    ns1:content "This course covers fundamental concepts in computer systems, including design principles for performance, reliability, and security. Students learn to deploy and evaluate complex systems such as MySQL and Spark, and design simple systems like interactive programs and web servers. The curriculum includes concurrency, race conditions, deadlocks, multiprocessor issues, memory management, and security mechanisms. It also explores the role of operating systems in mediating hardware and software, design tradeoffs, and performance evaluation using metrics like CPI and Amdahl’s Law. Topics include system reliability through redundancy, resource management algorithms, and common security issues with countermeasures." ;
    ns1:objective "N/A" .

ns1:Lighting_and_Shading a ex:Course ;
    rdfs:label "Advanced Lighting and Shading Techniques in Computer Graphics" ;
    ns1:content "This course focuses on the principles and techniques of lighting and shading in computer graphics. It covers both realistic and non-photorealistic approaches, providing students with a comprehensive understanding of the underlying theory. The course is divided into three main sections: geometric modeling, shading and advanced rendering, and intellectual property. In the geometric modeling section, students explore the fundamentals of 3D modeling and its relation to lighting. The shading section delves into advanced rendering techniques, including realistic and artistic lighting methods. The intellectual property section covers essential topics such as intellectual property rights, intangible digital intellectual property, legal foundations for protection, common software licenses, and issues related to plagiarism and authorship. By the end of the course, students will be able to create sophisticated lighting setups and understand the legal aspects of digital content creation." ;
    ns1:objective "N/A" .

ns1:Machine_Learning a ex:Course ;
    rdfs:label "Machine Learning and AI Fundamentals Course" ;
    ns1:content "This course covers the fundamentals of machine learning, including supervised, unsupervised, and reinforcement learning. Students will learn to select appropriate algorithms, preprocess data, evaluate models, and understand their limitations. The course also addresses ethical implications and societal impacts of machine learning applications. Topics include knowledge representation, probabilistic reasoning, Bayesian inference, neural networks, and generative models. Emphasis is placed on real-world data, algorithmic bias, and the importance of model interpretability. The course concludes with an overview of deployed deep generative models and large language models, their uses, and shortcomings." ;
    ns1:objective "N/A" .

ns1:Media_Computation a ex:Course ;
    rdfs:label "Introduction to Programming with Digital Media" ;
    ns1:content "This course introduces foundational programming concepts with a focus on digital media. Students learn to explain, evaluate, and apply algorithms and arrays in digital media contexts. The curriculum covers foundational data structures, graphic output devices, human vision principles, image formats, digitization, color models, and animation. It also explores programming concepts such as variables, data types, control flow, functions, and error handling. Additionally, the course touches on user-centered design, ethics, and professional practices in programming." ;
    ns1:objective "N/A" .

ns1:Mobile_Development_Course a ex:Course ;
    rdfs:label "Cross-Platform Mobile Application Development Course" ;
    ns1:content "This course focuses on designing, developing, and deploying cross-platform mobile applications using languages like Java, Kotlin, Swift, or React Native. It emphasizes user experience best practices, cross-platform development tools, and platform-specific APIs for seamless integration. The curriculum covers identifying security vulnerabilities, testing methodologies, and application distribution and versioning. Students learn to use analytics tools to understand user behavior and application performance. The course also covers version control, release management, and ethical considerations in mobile development, providing a comprehensive skill set for successful and responsible mobile application development across diverse platforms. Key topics include software construction practices such as unit testing and test-driven development, documentation of interfaces and implementations, software design principles like separation of concerns and information hiding, and software architecture paradigms including client-server and microservice architectures. Students explore programming in the large, code quality, and common aspects of development platforms, including resource constraints and platform-specific APIs. The course also covers programming languages like Python, Swift, and Kotlin, and techniques for mastering platform-specific programming under various constraints." ;
    ns1:objective "N/A" .

ns1:Robotics a ex:Course ;
    rdfs:label "Advanced Robotics and AI Techniques" ;
    ns1:content "This course covers advanced topics in robotics and AI, focusing on machine learning, robotics, and their societal impact. Students learn to apply robotic techniques for perception, localization, and navigation. The course includes machine learning tasks such as supervised, unsupervised, and reinforcement learning, with an emphasis on real-world data handling and preprocessing. It also explores neural networks, including generative models and their applications. The societal impact section discusses ethics, fairness, privacy, and sustainability in AI. Additionally, the course covers search algorithms like BFS, DFS, and A* search, and introduces robot platforms." ;
    ns1:objective "N/A" .

ns1:Simulation a ex:Course ;
    rdfs:label "Course Report: Simulation and Rendering Techniques" ;
    ns1:content "This course focuses on enabling students to understand and create directable simulations for both physical and non-physical systems. The content covers essential rendering and shading techniques, advanced simulation methods, and professional practices in software development. The course is structured into four main modules: GIT-Rendering, which introduces applied rendering techniques; GIT-Shading, which delves into shading and advanced rendering; GIT-Simulation, which focuses on simulation technologies; and SEP-Professional, which covers professional software development practices. By completing this course, students will gain the skills to develop and control simulations across various domains, preparing them for advanced applications in fields such as game development, scientific visualization, and engineering." ;
    ns1:objective "N/A" .

ns1:Systems_Course a ex:Course ;
    rdfs:label "Advanced Computer Architecture and Systems" ;
    ns1:content "This course covers advanced computer architecture, focusing on heterogeneous architectures, hardware-software interfaces, and performance optimization. It includes topics such as assembly-level machine organization, SIMD vs MIMD architectures, shared memory multiprocessors, I/O fundamentals, interrupt structures, memory hierarchy, cache coherence, virtual memory, and data representation. The course also explores networked applications, operating system roles, algorithms for parallel systems, computing history, and system design principles. Prerequisites include discrete mathematics and statistics." ;
    ns1:objective "N/A" .

ns1:Tangible_Computing a ex:Course ;
    rdfs:label "Human-Centered Design and Electronics Fundamentals" ;
    ns1:content "This course focuses on human-centered design principles applied to building circuits and programming networked microcontrollers. Students learn to work with real-time sensors, understand polarity, Ohm’s law, and safe electronics practices. The curriculum covers prototyping techniques, design patterns, and constraints. It emphasizes user-centered design methods, including user needs-finding, formative studies, and usability tests. Privacy implications of data collection and technology-based privacy solutions are also explored. The course integrates concepts from embedded platforms and universal design, ensuring a balanced approach to usability, security, and privacy." ;
    ns1:objective "N/A" .

ns1:User-Centered_Development a ex:Course ;
    rdfs:label "Comprehensive Course on Computer Graphics and Human-Computer Interaction" ;
    ns1:content "A comprehensive course covering computer graphics, interaction, and human-computer interaction. Topics include fundamental concepts of computer graphics, human vision system, color models, digitization of analog data, and standard image formats. The course also explores accessibility, inclusive design, user-centered design, and software construction practices. Additional areas include societal and ethical considerations, user needs-finding, and practical testing methods." ;
    ns1:objective "N/A" .

ns1:Web_Development_Course a ex:Course ;
    rdfs:label "Advanced Web Application Development Course" ;
    ns1:content "This course focuses on developing expertise in modern web application design, development, and deployment. It covers key concepts to ensure proficiency in HTML, CSS, and JavaScript for creating responsive and visually appealing web pages. Students explore frontend frameworks like React and Angular for efficient development and learn server-side languages such as Node.js and Python for dynamic applications. The curriculum emphasizes designing scalable and secure architectures, version control using GIT, API integration, responsive design, performance optimization, and security best practices. Testing, debugging, accessibility, deployment, and staying updated with industry trends are also highlighted. The course includes practical small-scale testing, test-driven development, and documentation practices. Software design principles such as separation of concerns, information hiding, coupling, and cohesion are covered, along with software architecture paradigms like client-server and microservice architectures. Students learn about programming in the large, code smells, and software configuration management using version control. Additional topics include shell scripting for system task automation and text processing, object-oriented programming concepts, and SQL query formation." ;
    ns1:objective "N/A" .

