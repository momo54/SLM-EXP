Title: PDC-Evaluation: Evaluation

KA Core:
6. One or more of the following methods and tools:
a. Extensions to formal sequential requirements such as linearizability
b. Protocol, session, and transactional specifications
c. Use of tools such as Unified Modelling Language (UML), Temporal Logic of Actions (TLA),
program logics
d. Security analysis: safety and liveness in the presence of hostile or buggy behaviors by other
parties; required properties of communication mechanisms (for example lack of cross-layer
leakage), input screening, rate limiting (See also: SEC-Foundations)
e. Static analysis applied to correctness, throughput, latency, resources, energy (See also:
SEP-Sustainability)
f. Directed Acyclic Graph (DAG) model analysis of algorithmic efficiency (work, span, critical
paths)
g. Testing and debugging; tools such as race detectors, fuzzers, lock dependency checkers,
unit/stress/torture tests, visualizations, continuous integration, continuous deployment, and
test generators
h. Measuring and comparing throughput, overhead, waiting, contention, communication, data
movement, locality, resource usage, behavior in the presence of excessive numbers of
events, clients, or threads (See also: SF-Evaluation)
i. Application domain specific analyses and evaluation techniques